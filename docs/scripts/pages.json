[
  {
    "name": "HARD_DISK",
    "description": "com.tecknobit.browniecore.enums.StorageType.HARD_DISK",
    "location": "core/com.tecknobit.browniecore.enums/-storage-type/-h-a-r-d_-d-i-s-k/index.html",
    "searchKeys": [
      "HARD_DISK",
      "HARD_DISK",
      "com.tecknobit.browniecore.enums.StorageType.HARD_DISK"
    ]
  },
  {
    "name": "OFFLINE",
    "description": "com.tecknobit.browniecore.enums.HostEventType.OFFLINE",
    "location": "core/com.tecknobit.browniecore.enums/-host-event-type/-o-f-f-l-i-n-e/index.html",
    "searchKeys": [
      "OFFLINE",
      "OFFLINE",
      "com.tecknobit.browniecore.enums.HostEventType.OFFLINE"
    ]
  },
  {
    "name": "OFFLINE",
    "description": "com.tecknobit.browniecore.enums.HostStatus.OFFLINE",
    "location": "core/com.tecknobit.browniecore.enums/-host-status/-o-f-f-l-i-n-e/index.html",
    "searchKeys": [
      "OFFLINE",
      "OFFLINE",
      "com.tecknobit.browniecore.enums.HostStatus.OFFLINE"
    ]
  },
  {
    "name": "ONLINE",
    "description": "com.tecknobit.browniecore.enums.HostEventType.ONLINE",
    "location": "core/com.tecknobit.browniecore.enums/-host-event-type/-o-n-l-i-n-e/index.html",
    "searchKeys": [
      "ONLINE",
      "ONLINE",
      "com.tecknobit.browniecore.enums.HostEventType.ONLINE"
    ]
  },
  {
    "name": "ONLINE",
    "description": "com.tecknobit.browniecore.enums.HostStatus.ONLINE",
    "location": "core/com.tecknobit.browniecore.enums/-host-status/-o-n-l-i-n-e/index.html",
    "searchKeys": [
      "ONLINE",
      "ONLINE",
      "com.tecknobit.browniecore.enums.HostStatus.ONLINE"
    ]
  },
  {
    "name": "REBOOTING",
    "description": "com.tecknobit.browniecore.enums.HostEventType.REBOOTING",
    "location": "core/com.tecknobit.browniecore.enums/-host-event-type/-r-e-b-o-o-t-i-n-g/index.html",
    "searchKeys": [
      "REBOOTING",
      "REBOOTING",
      "com.tecknobit.browniecore.enums.HostEventType.REBOOTING"
    ]
  },
  {
    "name": "REBOOTING",
    "description": "com.tecknobit.browniecore.enums.HostStatus.REBOOTING",
    "location": "core/com.tecknobit.browniecore.enums/-host-status/-r-e-b-o-o-t-i-n-g/index.html",
    "searchKeys": [
      "REBOOTING",
      "REBOOTING",
      "com.tecknobit.browniecore.enums.HostStatus.REBOOTING"
    ]
  },
  {
    "name": "REBOOTING",
    "description": "com.tecknobit.browniecore.enums.ServiceEventType.REBOOTING",
    "location": "core/com.tecknobit.browniecore.enums/-service-event-type/-r-e-b-o-o-t-i-n-g/index.html",
    "searchKeys": [
      "REBOOTING",
      "REBOOTING",
      "com.tecknobit.browniecore.enums.ServiceEventType.REBOOTING"
    ]
  },
  {
    "name": "REBOOTING",
    "description": "com.tecknobit.browniecore.enums.ServiceStatus.REBOOTING",
    "location": "core/com.tecknobit.browniecore.enums/-service-status/-r-e-b-o-o-t-i-n-g/index.html",
    "searchKeys": [
      "REBOOTING",
      "REBOOTING",
      "com.tecknobit.browniecore.enums.ServiceStatus.REBOOTING"
    ]
  },
  {
    "name": "RESTARTED",
    "description": "com.tecknobit.browniecore.enums.HostEventType.RESTARTED",
    "location": "core/com.tecknobit.browniecore.enums/-host-event-type/-r-e-s-t-a-r-t-e-d/index.html",
    "searchKeys": [
      "RESTARTED",
      "RESTARTED",
      "com.tecknobit.browniecore.enums.HostEventType.RESTARTED"
    ]
  },
  {
    "name": "RESTARTED",
    "description": "com.tecknobit.browniecore.enums.ServiceEventType.RESTARTED",
    "location": "core/com.tecknobit.browniecore.enums/-service-event-type/-r-e-s-t-a-r-t-e-d/index.html",
    "searchKeys": [
      "RESTARTED",
      "RESTARTED",
      "com.tecknobit.browniecore.enums.ServiceEventType.RESTARTED"
    ]
  },
  {
    "name": "RUNNING",
    "description": "com.tecknobit.browniecore.enums.ServiceEventType.RUNNING",
    "location": "core/com.tecknobit.browniecore.enums/-service-event-type/-r-u-n-n-i-n-g/index.html",
    "searchKeys": [
      "RUNNING",
      "RUNNING",
      "com.tecknobit.browniecore.enums.ServiceEventType.RUNNING"
    ]
  },
  {
    "name": "RUNNING",
    "description": "com.tecknobit.browniecore.enums.ServiceStatus.RUNNING",
    "location": "core/com.tecknobit.browniecore.enums/-service-status/-r-u-n-n-i-n-g/index.html",
    "searchKeys": [
      "RUNNING",
      "RUNNING",
      "com.tecknobit.browniecore.enums.ServiceStatus.RUNNING"
    ]
  },
  {
    "name": "SD_CARD",
    "description": "com.tecknobit.browniecore.enums.StorageType.SD_CARD",
    "location": "core/com.tecknobit.browniecore.enums/-storage-type/-s-d_-c-a-r-d/index.html",
    "searchKeys": [
      "SD_CARD",
      "SD_CARD",
      "com.tecknobit.browniecore.enums.StorageType.SD_CARD"
    ]
  },
  {
    "name": "SERVICE_ADDED",
    "description": "com.tecknobit.browniecore.enums.HostEventType.SERVICE_ADDED",
    "location": "core/com.tecknobit.browniecore.enums/-host-event-type/-s-e-r-v-i-c-e_-a-d-d-e-d/index.html",
    "searchKeys": [
      "SERVICE_ADDED",
      "SERVICE_ADDED",
      "com.tecknobit.browniecore.enums.HostEventType.SERVICE_ADDED"
    ]
  },
  {
    "name": "SERVICE_DELETED",
    "description": "com.tecknobit.browniecore.enums.HostEventType.SERVICE_DELETED",
    "location": "core/com.tecknobit.browniecore.enums/-host-event-type/-s-e-r-v-i-c-e_-d-e-l-e-t-e-d/index.html",
    "searchKeys": [
      "SERVICE_DELETED",
      "SERVICE_DELETED",
      "com.tecknobit.browniecore.enums.HostEventType.SERVICE_DELETED"
    ]
  },
  {
    "name": "SERVICE_REMOVED",
    "description": "com.tecknobit.browniecore.enums.HostEventType.SERVICE_REMOVED",
    "location": "core/com.tecknobit.browniecore.enums/-host-event-type/-s-e-r-v-i-c-e_-r-e-m-o-v-e-d/index.html",
    "searchKeys": [
      "SERVICE_REMOVED",
      "SERVICE_REMOVED",
      "com.tecknobit.browniecore.enums.HostEventType.SERVICE_REMOVED"
    ]
  },
  {
    "name": "SSD",
    "description": "com.tecknobit.browniecore.enums.StorageType.SSD",
    "location": "core/com.tecknobit.browniecore.enums/-storage-type/-s-s-d/index.html",
    "searchKeys": [
      "SSD",
      "SSD",
      "com.tecknobit.browniecore.enums.StorageType.SSD"
    ]
  },
  {
    "name": "SSD_NVMe",
    "description": "com.tecknobit.browniecore.enums.StorageType.SSD_NVMe",
    "location": "core/com.tecknobit.browniecore.enums/-storage-type/-s-s-d_-n-v-me/index.html",
    "searchKeys": [
      "SSD_NVMe",
      "SSD_NVMe",
      "com.tecknobit.browniecore.enums.StorageType.SSD_NVMe"
    ]
  },
  {
    "name": "STOPPED",
    "description": "com.tecknobit.browniecore.enums.ServiceEventType.STOPPED",
    "location": "core/com.tecknobit.browniecore.enums/-service-event-type/-s-t-o-p-p-e-d/index.html",
    "searchKeys": [
      "STOPPED",
      "STOPPED",
      "com.tecknobit.browniecore.enums.ServiceEventType.STOPPED"
    ]
  },
  {
    "name": "STOPPED",
    "description": "com.tecknobit.browniecore.enums.ServiceStatus.STOPPED",
    "location": "core/com.tecknobit.browniecore.enums/-service-status/-s-t-o-p-p-e-d/index.html",
    "searchKeys": [
      "STOPPED",
      "STOPPED",
      "com.tecknobit.browniecore.enums.ServiceStatus.STOPPED"
    ]
  },
  {
    "name": "UKNOWN",
    "description": "com.tecknobit.browniecore.enums.StorageType.UKNOWN",
    "location": "core/com.tecknobit.browniecore.enums/-storage-type/-u-k-n-o-w-n/index.html",
    "searchKeys": [
      "UKNOWN",
      "UKNOWN",
      "com.tecknobit.browniecore.enums.StorageType.UKNOWN"
    ]
  },
  {
    "name": "VIRTUAL_DISK",
    "description": "com.tecknobit.browniecore.enums.StorageType.VIRTUAL_DISK",
    "location": "core/com.tecknobit.browniecore.enums/-storage-type/-v-i-r-t-u-a-l_-d-i-s-k/index.html",
    "searchKeys": [
      "VIRTUAL_DISK",
      "VIRTUAL_DISK",
      "com.tecknobit.browniecore.enums.StorageType.VIRTUAL_DISK"
    ]
  },
  {
    "name": "const val AUTO_RUN_AFTER_HOST_REBOOT_KEY: String",
    "description": "com.tecknobit.browniecore.AUTO_RUN_AFTER_HOST_REBOOT_KEY",
    "location": "core/com.tecknobit.browniecore/-a-u-t-o_-r-u-n_-a-f-t-e-r_-h-o-s-t_-r-e-b-o-o-t_-k-e-y.html",
    "searchKeys": [
      "AUTO_RUN_AFTER_HOST_REBOOT_KEY",
      "const val AUTO_RUN_AFTER_HOST_REBOOT_KEY: String",
      "com.tecknobit.browniecore.AUTO_RUN_AFTER_HOST_REBOOT_KEY"
    ]
  },
  {
    "name": "const val BROADCAST_IP_KEY: String",
    "description": "com.tecknobit.browniecore.BROADCAST_IP_KEY",
    "location": "core/com.tecknobit.browniecore/-b-r-o-a-d-c-a-s-t_-i-p_-k-e-y.html",
    "searchKeys": [
      "BROADCAST_IP_KEY",
      "const val BROADCAST_IP_KEY: String",
      "com.tecknobit.browniecore.BROADCAST_IP_KEY"
    ]
  },
  {
    "name": "const val CONFIGURATION_KEY: String",
    "description": "com.tecknobit.browniecore.CONFIGURATION_KEY",
    "location": "core/com.tecknobit.browniecore/-c-o-n-f-i-g-u-r-a-t-i-o-n_-k-e-y.html",
    "searchKeys": [
      "CONFIGURATION_KEY",
      "const val CONFIGURATION_KEY: String",
      "com.tecknobit.browniecore.CONFIGURATION_KEY"
    ]
  },
  {
    "name": "const val CONNECT_ENDPOINT: String",
    "description": "com.tecknobit.browniecore.helpers.BrownieEndpoints.CONNECT_ENDPOINT",
    "location": "core/com.tecknobit.browniecore.helpers/-brownie-endpoints/-c-o-n-n-e-c-t_-e-n-d-p-o-i-n-t.html",
    "searchKeys": [
      "CONNECT_ENDPOINT",
      "const val CONNECT_ENDPOINT: String",
      "com.tecknobit.browniecore.helpers.BrownieEndpoints.CONNECT_ENDPOINT"
    ]
  },
  {
    "name": "const val CPU_USAGE_KEY: String",
    "description": "com.tecknobit.browniecore.CPU_USAGE_KEY",
    "location": "core/com.tecknobit.browniecore/-c-p-u_-u-s-a-g-e_-k-e-y.html",
    "searchKeys": [
      "CPU_USAGE_KEY",
      "const val CPU_USAGE_KEY: String",
      "com.tecknobit.browniecore.CPU_USAGE_KEY"
    ]
  },
  {
    "name": "const val EVENT_DATE_KEY: String",
    "description": "com.tecknobit.browniecore.EVENT_DATE_KEY",
    "location": "core/com.tecknobit.browniecore/-e-v-e-n-t_-d-a-t-e_-k-e-y.html",
    "searchKeys": [
      "EVENT_DATE_KEY",
      "const val EVENT_DATE_KEY: String",
      "com.tecknobit.browniecore.EVENT_DATE_KEY"
    ]
  },
  {
    "name": "const val EXTRA_KEY: String",
    "description": "com.tecknobit.browniecore.EXTRA_KEY",
    "location": "core/com.tecknobit.browniecore/-e-x-t-r-a_-k-e-y.html",
    "searchKeys": [
      "EXTRA_KEY",
      "const val EXTRA_KEY: String",
      "com.tecknobit.browniecore.EXTRA_KEY"
    ]
  },
  {
    "name": "const val HOSTS_KEY: String",
    "description": "com.tecknobit.browniecore.HOSTS_KEY",
    "location": "core/com.tecknobit.browniecore/-h-o-s-t-s_-k-e-y.html",
    "searchKeys": [
      "HOSTS_KEY",
      "const val HOSTS_KEY: String",
      "com.tecknobit.browniecore.HOSTS_KEY"
    ]
  },
  {
    "name": "const val HOST_EVENTS_KEY: String",
    "description": "com.tecknobit.browniecore.HOST_EVENTS_KEY",
    "location": "core/com.tecknobit.browniecore/-h-o-s-t_-e-v-e-n-t-s_-k-e-y.html",
    "searchKeys": [
      "HOST_EVENTS_KEY",
      "const val HOST_EVENTS_KEY: String",
      "com.tecknobit.browniecore.HOST_EVENTS_KEY"
    ]
  },
  {
    "name": "const val HOST_IDENTIFIER_KEY: String",
    "description": "com.tecknobit.browniecore.HOST_IDENTIFIER_KEY",
    "location": "core/com.tecknobit.browniecore/-h-o-s-t_-i-d-e-n-t-i-f-i-e-r_-k-e-y.html",
    "searchKeys": [
      "HOST_IDENTIFIER_KEY",
      "const val HOST_IDENTIFIER_KEY: String",
      "com.tecknobit.browniecore.HOST_IDENTIFIER_KEY"
    ]
  },
  {
    "name": "const val HOST_KEY: String",
    "description": "com.tecknobit.browniecore.HOST_KEY",
    "location": "core/com.tecknobit.browniecore/-h-o-s-t_-k-e-y.html",
    "searchKeys": [
      "HOST_KEY",
      "const val HOST_KEY: String",
      "com.tecknobit.browniecore.HOST_KEY"
    ]
  },
  {
    "name": "const val INSERTION_DATE_KEY: String",
    "description": "com.tecknobit.browniecore.INSERTION_DATE_KEY",
    "location": "core/com.tecknobit.browniecore/-i-n-s-e-r-t-i-o-n_-d-a-t-e_-k-e-y.html",
    "searchKeys": [
      "INSERTION_DATE_KEY",
      "const val INSERTION_DATE_KEY: String",
      "com.tecknobit.browniecore.INSERTION_DATE_KEY"
    ]
  },
  {
    "name": "const val JOIN_CODE_KEY: String",
    "description": "com.tecknobit.browniecore.JOIN_CODE_KEY",
    "location": "core/com.tecknobit.browniecore/-j-o-i-n_-c-o-d-e_-k-e-y.html",
    "searchKeys": [
      "JOIN_CODE_KEY",
      "const val JOIN_CODE_KEY: String",
      "com.tecknobit.browniecore.JOIN_CODE_KEY"
    ]
  },
  {
    "name": "const val MAC_ADDRESS_KEY: String",
    "description": "com.tecknobit.browniecore.MAC_ADDRESS_KEY",
    "location": "core/com.tecknobit.browniecore/-m-a-c_-a-d-d-r-e-s-s_-k-e-y.html",
    "searchKeys": [
      "MAC_ADDRESS_KEY",
      "const val MAC_ADDRESS_KEY: String",
      "com.tecknobit.browniecore.MAC_ADDRESS_KEY"
    ]
  },
  {
    "name": "const val MEMORY_USAGE_KEY: String",
    "description": "com.tecknobit.browniecore.MEMORY_USAGE_KEY",
    "location": "core/com.tecknobit.browniecore/-m-e-m-o-r-y_-u-s-a-g-e_-k-e-y.html",
    "searchKeys": [
      "MEMORY_USAGE_KEY",
      "const val MEMORY_USAGE_KEY: String",
      "com.tecknobit.browniecore.MEMORY_USAGE_KEY"
    ]
  },
  {
    "name": "const val OVERVIEW_ENDPOINT: String",
    "description": "com.tecknobit.browniecore.helpers.BrownieEndpoints.OVERVIEW_ENDPOINT",
    "location": "core/com.tecknobit.browniecore.helpers/-brownie-endpoints/-o-v-e-r-v-i-e-w_-e-n-d-p-o-i-n-t.html",
    "searchKeys": [
      "OVERVIEW_ENDPOINT",
      "const val OVERVIEW_ENDPOINT: String",
      "com.tecknobit.browniecore.helpers.BrownieEndpoints.OVERVIEW_ENDPOINT"
    ]
  },
  {
    "name": "const val PERCENT_VALUE_KEY: String",
    "description": "com.tecknobit.browniecore.PERCENT_VALUE_KEY",
    "location": "core/com.tecknobit.browniecore/-p-e-r-c-e-n-t_-v-a-l-u-e_-k-e-y.html",
    "searchKeys": [
      "PERCENT_VALUE_KEY",
      "const val PERCENT_VALUE_KEY: String",
      "com.tecknobit.browniecore.PERCENT_VALUE_KEY"
    ]
  },
  {
    "name": "const val PID_KEY: String",
    "description": "com.tecknobit.browniecore.PID_KEY",
    "location": "core/com.tecknobit.browniecore/-p-i-d_-k-e-y.html",
    "searchKeys": [
      "PID_KEY",
      "const val PID_KEY: String",
      "com.tecknobit.browniecore.PID_KEY"
    ]
  },
  {
    "name": "const val PROGRAM_ARGUMENTS_KEY: String",
    "description": "com.tecknobit.browniecore.PROGRAM_ARGUMENTS_KEY",
    "location": "core/com.tecknobit.browniecore/-p-r-o-g-r-a-m_-a-r-g-u-m-e-n-t-s_-k-e-y.html",
    "searchKeys": [
      "PROGRAM_ARGUMENTS_KEY",
      "const val PROGRAM_ARGUMENTS_KEY: String",
      "com.tecknobit.browniecore.PROGRAM_ARGUMENTS_KEY"
    ]
  },
  {
    "name": "const val PURGE_NOHUP_OUT_AFTER_REBOOT_KEY: String",
    "description": "com.tecknobit.browniecore.PURGE_NOHUP_OUT_AFTER_REBOOT_KEY",
    "location": "core/com.tecknobit.browniecore/-p-u-r-g-e_-n-o-h-u-p_-o-u-t_-a-f-t-e-r_-r-e-b-o-o-t_-k-e-y.html",
    "searchKeys": [
      "PURGE_NOHUP_OUT_AFTER_REBOOT_KEY",
      "const val PURGE_NOHUP_OUT_AFTER_REBOOT_KEY: String",
      "com.tecknobit.browniecore.PURGE_NOHUP_OUT_AFTER_REBOOT_KEY"
    ]
  },
  {
    "name": "const val REBOOT_ENDPOINT: String",
    "description": "com.tecknobit.browniecore.helpers.BrownieEndpoints.REBOOT_ENDPOINT",
    "location": "core/com.tecknobit.browniecore.helpers/-brownie-endpoints/-r-e-b-o-o-t_-e-n-d-p-o-i-n-t.html",
    "searchKeys": [
      "REBOOT_ENDPOINT",
      "const val REBOOT_ENDPOINT: String",
      "com.tecknobit.browniecore.helpers.BrownieEndpoints.REBOOT_ENDPOINT"
    ]
  },
  {
    "name": "const val REMOVE_FROM_THE_HOST_KEY: String",
    "description": "com.tecknobit.browniecore.REMOVE_FROM_THE_HOST_KEY",
    "location": "core/com.tecknobit.browniecore/-r-e-m-o-v-e_-f-r-o-m_-t-h-e_-h-o-s-t_-k-e-y.html",
    "searchKeys": [
      "REMOVE_FROM_THE_HOST_KEY",
      "const val REMOVE_FROM_THE_HOST_KEY: String",
      "com.tecknobit.browniecore.REMOVE_FROM_THE_HOST_KEY"
    ]
  },
  {
    "name": "const val SERVICES_CONFIGURATIONS_KEY: String",
    "description": "com.tecknobit.browniecore.SERVICES_CONFIGURATIONS_KEY",
    "location": "core/com.tecknobit.browniecore/-s-e-r-v-i-c-e-s_-c-o-n-f-i-g-u-r-a-t-i-o-n-s_-k-e-y.html",
    "searchKeys": [
      "SERVICES_CONFIGURATIONS_KEY",
      "const val SERVICES_CONFIGURATIONS_KEY: String",
      "com.tecknobit.browniecore.SERVICES_CONFIGURATIONS_KEY"
    ]
  },
  {
    "name": "const val SERVICES_KEY: String",
    "description": "com.tecknobit.browniecore.SERVICES_KEY",
    "location": "core/com.tecknobit.browniecore/-s-e-r-v-i-c-e-s_-k-e-y.html",
    "searchKeys": [
      "SERVICES_KEY",
      "const val SERVICES_KEY: String",
      "com.tecknobit.browniecore.SERVICES_KEY"
    ]
  },
  {
    "name": "const val SERVICE_EVENTS_KEY: String",
    "description": "com.tecknobit.browniecore.SERVICE_EVENTS_KEY",
    "location": "core/com.tecknobit.browniecore/-s-e-r-v-i-c-e_-e-v-e-n-t-s_-k-e-y.html",
    "searchKeys": [
      "SERVICE_EVENTS_KEY",
      "const val SERVICE_EVENTS_KEY: String",
      "com.tecknobit.browniecore.SERVICE_EVENTS_KEY"
    ]
  },
  {
    "name": "const val SERVICE_IDENTIFIER_KEY: String",
    "description": "com.tecknobit.browniecore.SERVICE_IDENTIFIER_KEY",
    "location": "core/com.tecknobit.browniecore/-s-e-r-v-i-c-e_-i-d-e-n-t-i-f-i-e-r_-k-e-y.html",
    "searchKeys": [
      "SERVICE_IDENTIFIER_KEY",
      "const val SERVICE_IDENTIFIER_KEY: String",
      "com.tecknobit.browniecore.SERVICE_IDENTIFIER_KEY"
    ]
  },
  {
    "name": "const val SERVICE_KEY: String",
    "description": "com.tecknobit.browniecore.SERVICE_KEY",
    "location": "core/com.tecknobit.browniecore/-s-e-r-v-i-c-e_-k-e-y.html",
    "searchKeys": [
      "SERVICE_KEY",
      "const val SERVICE_KEY: String",
      "com.tecknobit.browniecore.SERVICE_KEY"
    ]
  },
  {
    "name": "const val SERVICE_PATH_KEY: String",
    "description": "com.tecknobit.browniecore.SERVICE_PATH_KEY",
    "location": "core/com.tecknobit.browniecore/-s-e-r-v-i-c-e_-p-a-t-h_-k-e-y.html",
    "searchKeys": [
      "SERVICE_PATH_KEY",
      "const val SERVICE_PATH_KEY: String",
      "com.tecknobit.browniecore.SERVICE_PATH_KEY"
    ]
  },
  {
    "name": "const val SESSIONS_KEY: String",
    "description": "com.tecknobit.browniecore.SESSIONS_KEY",
    "location": "core/com.tecknobit.browniecore/-s-e-s-s-i-o-n-s_-k-e-y.html",
    "searchKeys": [
      "SESSIONS_KEY",
      "const val SESSIONS_KEY: String",
      "com.tecknobit.browniecore.SESSIONS_KEY"
    ]
  },
  {
    "name": "const val SESSION_IDENTIFIER_KEY: String",
    "description": "com.tecknobit.browniecore.SESSION_IDENTIFIER_KEY",
    "location": "core/com.tecknobit.browniecore/-s-e-s-s-i-o-n_-i-d-e-n-t-i-f-i-e-r_-k-e-y.html",
    "searchKeys": [
      "SESSION_IDENTIFIER_KEY",
      "const val SESSION_IDENTIFIER_KEY: String",
      "com.tecknobit.browniecore.SESSION_IDENTIFIER_KEY"
    ]
  },
  {
    "name": "const val SESSION_KEY: String",
    "description": "com.tecknobit.browniecore.SESSION_KEY",
    "location": "core/com.tecknobit.browniecore/-s-e-s-s-i-o-n_-k-e-y.html",
    "searchKeys": [
      "SESSION_KEY",
      "const val SESSION_KEY: String",
      "com.tecknobit.browniecore.SESSION_KEY"
    ]
  },
  {
    "name": "const val SSH_PASSWORD_KEY: String",
    "description": "com.tecknobit.browniecore.SSH_PASSWORD_KEY",
    "location": "core/com.tecknobit.browniecore/-s-s-h_-p-a-s-s-w-o-r-d_-k-e-y.html",
    "searchKeys": [
      "SSH_PASSWORD_KEY",
      "const val SSH_PASSWORD_KEY: String",
      "com.tecknobit.browniecore.SSH_PASSWORD_KEY"
    ]
  },
  {
    "name": "const val SSH_USER_KEY: String",
    "description": "com.tecknobit.browniecore.SSH_USER_KEY",
    "location": "core/com.tecknobit.browniecore/-s-s-h_-u-s-e-r_-k-e-y.html",
    "searchKeys": [
      "SSH_USER_KEY",
      "const val SSH_USER_KEY: String",
      "com.tecknobit.browniecore.SSH_USER_KEY"
    ]
  },
  {
    "name": "const val START_ENDPOINT: String",
    "description": "com.tecknobit.browniecore.helpers.BrownieEndpoints.START_ENDPOINT",
    "location": "core/com.tecknobit.browniecore.helpers/-brownie-endpoints/-s-t-a-r-t_-e-n-d-p-o-i-n-t.html",
    "searchKeys": [
      "START_ENDPOINT",
      "const val START_ENDPOINT: String",
      "com.tecknobit.browniecore.helpers.BrownieEndpoints.START_ENDPOINT"
    ]
  },
  {
    "name": "const val STATUSES_KEY: String",
    "description": "com.tecknobit.browniecore.STATUSES_KEY",
    "location": "core/com.tecknobit.browniecore/-s-t-a-t-u-s-e-s_-k-e-y.html",
    "searchKeys": [
      "STATUSES_KEY",
      "const val STATUSES_KEY: String",
      "com.tecknobit.browniecore.STATUSES_KEY"
    ]
  },
  {
    "name": "const val STOP_ENDPOINT: String",
    "description": "com.tecknobit.browniecore.helpers.BrownieEndpoints.STOP_ENDPOINT",
    "location": "core/com.tecknobit.browniecore.helpers/-brownie-endpoints/-s-t-o-p_-e-n-d-p-o-i-n-t.html",
    "searchKeys": [
      "STOP_ENDPOINT",
      "const val STOP_ENDPOINT: String",
      "com.tecknobit.browniecore.helpers.BrownieEndpoints.STOP_ENDPOINT"
    ]
  },
  {
    "name": "const val STORAGE_TYPE_KEY: String",
    "description": "com.tecknobit.browniecore.STORAGE_TYPE_KEY",
    "location": "core/com.tecknobit.browniecore/-s-t-o-r-a-g-e_-t-y-p-e_-k-e-y.html",
    "searchKeys": [
      "STORAGE_TYPE_KEY",
      "const val STORAGE_TYPE_KEY: String",
      "com.tecknobit.browniecore.STORAGE_TYPE_KEY"
    ]
  },
  {
    "name": "const val STORAGE_USAGE_KEY: String",
    "description": "com.tecknobit.browniecore.STORAGE_USAGE_KEY",
    "location": "core/com.tecknobit.browniecore/-s-t-o-r-a-g-e_-u-s-a-g-e_-k-e-y.html",
    "searchKeys": [
      "STORAGE_USAGE_KEY",
      "const val STORAGE_USAGE_KEY: String",
      "com.tecknobit.browniecore.STORAGE_USAGE_KEY"
    ]
  },
  {
    "name": "const val TOTAL_VALUE_KEY: String",
    "description": "com.tecknobit.browniecore.TOTAL_VALUE_KEY",
    "location": "core/com.tecknobit.browniecore/-t-o-t-a-l_-v-a-l-u-e_-k-e-y.html",
    "searchKeys": [
      "TOTAL_VALUE_KEY",
      "const val TOTAL_VALUE_KEY: String",
      "com.tecknobit.browniecore.TOTAL_VALUE_KEY"
    ]
  },
  {
    "name": "const val TYPE_KEY: String",
    "description": "com.tecknobit.browniecore.TYPE_KEY",
    "location": "core/com.tecknobit.browniecore/-t-y-p-e_-k-e-y.html",
    "searchKeys": [
      "TYPE_KEY",
      "const val TYPE_KEY: String",
      "com.tecknobit.browniecore.TYPE_KEY"
    ]
  },
  {
    "name": "const val USAGE_VALUE_KEY: String",
    "description": "com.tecknobit.browniecore.USAGE_VALUE_KEY",
    "location": "core/com.tecknobit.browniecore/-u-s-a-g-e_-v-a-l-u-e_-k-e-y.html",
    "searchKeys": [
      "USAGE_VALUE_KEY",
      "const val USAGE_VALUE_KEY: String",
      "com.tecknobit.browniecore.USAGE_VALUE_KEY"
    ]
  },
  {
    "name": "enum HostEventType : Enum<HostEventType> ",
    "description": "com.tecknobit.browniecore.enums.HostEventType",
    "location": "core/com.tecknobit.browniecore.enums/-host-event-type/index.html",
    "searchKeys": [
      "HostEventType",
      "enum HostEventType : Enum<HostEventType> ",
      "com.tecknobit.browniecore.enums.HostEventType"
    ]
  },
  {
    "name": "enum HostStatus : Enum<HostStatus> ",
    "description": "com.tecknobit.browniecore.enums.HostStatus",
    "location": "core/com.tecknobit.browniecore.enums/-host-status/index.html",
    "searchKeys": [
      "HostStatus",
      "enum HostStatus : Enum<HostStatus> ",
      "com.tecknobit.browniecore.enums.HostStatus"
    ]
  },
  {
    "name": "enum ServiceEventType : Enum<ServiceEventType> ",
    "description": "com.tecknobit.browniecore.enums.ServiceEventType",
    "location": "core/com.tecknobit.browniecore.enums/-service-event-type/index.html",
    "searchKeys": [
      "ServiceEventType",
      "enum ServiceEventType : Enum<ServiceEventType> ",
      "com.tecknobit.browniecore.enums.ServiceEventType"
    ]
  },
  {
    "name": "enum ServiceStatus : Enum<ServiceStatus> ",
    "description": "com.tecknobit.browniecore.enums.ServiceStatus",
    "location": "core/com.tecknobit.browniecore.enums/-service-status/index.html",
    "searchKeys": [
      "ServiceStatus",
      "enum ServiceStatus : Enum<ServiceStatus> ",
      "com.tecknobit.browniecore.enums.ServiceStatus"
    ]
  },
  {
    "name": "enum StorageType : Enum<StorageType> ",
    "description": "com.tecknobit.browniecore.enums.StorageType",
    "location": "core/com.tecknobit.browniecore.enums/-storage-type/index.html",
    "searchKeys": [
      "StorageType",
      "enum StorageType : Enum<StorageType> ",
      "com.tecknobit.browniecore.enums.StorageType"
    ]
  },
  {
    "name": "fun isHostAddressValid(hostAddress: String?): Boolean",
    "description": "com.tecknobit.browniecore.helpers.BrownieInputsValidator.isHostAddressValid",
    "location": "core/com.tecknobit.browniecore.helpers/-brownie-inputs-validator/is-host-address-valid.html",
    "searchKeys": [
      "isHostAddressValid",
      "fun isHostAddressValid(hostAddress: String?): Boolean",
      "com.tecknobit.browniecore.helpers.BrownieInputsValidator.isHostAddressValid"
    ]
  },
  {
    "name": "fun isItemNameValid(itemName: String?): Boolean",
    "description": "com.tecknobit.browniecore.helpers.BrownieInputsValidator.isItemNameValid",
    "location": "core/com.tecknobit.browniecore.helpers/-brownie-inputs-validator/is-item-name-valid.html",
    "searchKeys": [
      "isItemNameValid",
      "fun isItemNameValid(itemName: String?): Boolean",
      "com.tecknobit.browniecore.helpers.BrownieInputsValidator.isItemNameValid"
    ]
  },
  {
    "name": "fun isOffline(): Boolean",
    "description": "com.tecknobit.browniecore.enums.HostStatus.isOffline",
    "location": "core/com.tecknobit.browniecore.enums/-host-status/is-offline.html",
    "searchKeys": [
      "isOffline",
      "fun isOffline(): Boolean",
      "com.tecknobit.browniecore.enums.HostStatus.isOffline"
    ]
  },
  {
    "name": "fun isOnline(): Boolean",
    "description": "com.tecknobit.browniecore.enums.HostStatus.isOnline",
    "location": "core/com.tecknobit.browniecore.enums/-host-status/is-online.html",
    "searchKeys": [
      "isOnline",
      "fun isOnline(): Boolean",
      "com.tecknobit.browniecore.enums.HostStatus.isOnline"
    ]
  },
  {
    "name": "fun isRebooting(): Boolean",
    "description": "com.tecknobit.browniecore.enums.HostStatus.isRebooting",
    "location": "core/com.tecknobit.browniecore.enums/-host-status/is-rebooting.html",
    "searchKeys": [
      "isRebooting",
      "fun isRebooting(): Boolean",
      "com.tecknobit.browniecore.enums.HostStatus.isRebooting"
    ]
  },
  {
    "name": "fun isRebooting(): Boolean",
    "description": "com.tecknobit.browniecore.enums.ServiceStatus.isRebooting",
    "location": "core/com.tecknobit.browniecore.enums/-service-status/is-rebooting.html",
    "searchKeys": [
      "isRebooting",
      "fun isRebooting(): Boolean",
      "com.tecknobit.browniecore.enums.ServiceStatus.isRebooting"
    ]
  },
  {
    "name": "fun isRunning(): Boolean",
    "description": "com.tecknobit.browniecore.enums.ServiceStatus.isRunning",
    "location": "core/com.tecknobit.browniecore.enums/-service-status/is-running.html",
    "searchKeys": [
      "isRunning",
      "fun isRunning(): Boolean",
      "com.tecknobit.browniecore.enums.ServiceStatus.isRunning"
    ]
  },
  {
    "name": "fun isStopped(): Boolean",
    "description": "com.tecknobit.browniecore.enums.ServiceStatus.isStopped",
    "location": "core/com.tecknobit.browniecore.enums/-service-status/is-stopped.html",
    "searchKeys": [
      "isStopped",
      "fun isStopped(): Boolean",
      "com.tecknobit.browniecore.enums.ServiceStatus.isStopped"
    ]
  },
  {
    "name": "fun valueOf(value: String): HostEventType",
    "description": "com.tecknobit.browniecore.enums.HostEventType.valueOf",
    "location": "core/com.tecknobit.browniecore.enums/-host-event-type/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): HostEventType",
      "com.tecknobit.browniecore.enums.HostEventType.valueOf"
    ]
  },
  {
    "name": "fun valueOf(value: String): HostStatus",
    "description": "com.tecknobit.browniecore.enums.HostStatus.valueOf",
    "location": "core/com.tecknobit.browniecore.enums/-host-status/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): HostStatus",
      "com.tecknobit.browniecore.enums.HostStatus.valueOf"
    ]
  },
  {
    "name": "fun valueOf(value: String): ServiceEventType",
    "description": "com.tecknobit.browniecore.enums.ServiceEventType.valueOf",
    "location": "core/com.tecknobit.browniecore.enums/-service-event-type/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): ServiceEventType",
      "com.tecknobit.browniecore.enums.ServiceEventType.valueOf"
    ]
  },
  {
    "name": "fun valueOf(value: String): ServiceStatus",
    "description": "com.tecknobit.browniecore.enums.ServiceStatus.valueOf",
    "location": "core/com.tecknobit.browniecore.enums/-service-status/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): ServiceStatus",
      "com.tecknobit.browniecore.enums.ServiceStatus.valueOf"
    ]
  },
  {
    "name": "fun valueOf(value: String): StorageType",
    "description": "com.tecknobit.browniecore.enums.StorageType.valueOf",
    "location": "core/com.tecknobit.browniecore.enums/-storage-type/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): StorageType",
      "com.tecknobit.browniecore.enums.StorageType.valueOf"
    ]
  },
  {
    "name": "fun values(): Array<HostEventType>",
    "description": "com.tecknobit.browniecore.enums.HostEventType.values",
    "location": "core/com.tecknobit.browniecore.enums/-host-event-type/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<HostEventType>",
      "com.tecknobit.browniecore.enums.HostEventType.values"
    ]
  },
  {
    "name": "fun values(): Array<HostStatus>",
    "description": "com.tecknobit.browniecore.enums.HostStatus.values",
    "location": "core/com.tecknobit.browniecore.enums/-host-status/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<HostStatus>",
      "com.tecknobit.browniecore.enums.HostStatus.values"
    ]
  },
  {
    "name": "fun values(): Array<ServiceEventType>",
    "description": "com.tecknobit.browniecore.enums.ServiceEventType.values",
    "location": "core/com.tecknobit.browniecore.enums/-service-event-type/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<ServiceEventType>",
      "com.tecknobit.browniecore.enums.ServiceEventType.values"
    ]
  },
  {
    "name": "fun values(): Array<ServiceStatus>",
    "description": "com.tecknobit.browniecore.enums.ServiceStatus.values",
    "location": "core/com.tecknobit.browniecore.enums/-service-status/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<ServiceStatus>",
      "com.tecknobit.browniecore.enums.ServiceStatus.values"
    ]
  },
  {
    "name": "fun values(): Array<StorageType>",
    "description": "com.tecknobit.browniecore.enums.StorageType.values",
    "location": "core/com.tecknobit.browniecore.enums/-storage-type/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<StorageType>",
      "com.tecknobit.browniecore.enums.StorageType.values"
    ]
  },
  {
    "name": "object BrownieEndpoints : EquinoxBaseEndpointsSet",
    "description": "com.tecknobit.browniecore.helpers.BrownieEndpoints",
    "location": "core/com.tecknobit.browniecore.helpers/-brownie-endpoints/index.html",
    "searchKeys": [
      "BrownieEndpoints",
      "object BrownieEndpoints : EquinoxBaseEndpointsSet",
      "com.tecknobit.browniecore.helpers.BrownieEndpoints"
    ]
  },
  {
    "name": "object BrownieInputsValidator : InputsValidator",
    "description": "com.tecknobit.browniecore.helpers.BrownieInputsValidator",
    "location": "core/com.tecknobit.browniecore.helpers/-brownie-inputs-validator/index.html",
    "searchKeys": [
      "BrownieInputsValidator",
      "object BrownieInputsValidator : InputsValidator",
      "com.tecknobit.browniecore.helpers.BrownieInputsValidator"
    ]
  },
  {
    "name": "private const val BROWNIE_ITEM_NAME_MAX_LENGTH: Int = 30",
    "description": "com.tecknobit.browniecore.helpers.BrownieInputsValidator.BROWNIE_ITEM_NAME_MAX_LENGTH",
    "location": "core/com.tecknobit.browniecore.helpers/-brownie-inputs-validator/-b-r-o-w-n-i-e_-i-t-e-m_-n-a-m-e_-m-a-x_-l-e-n-g-t-h.html",
    "searchKeys": [
      "BROWNIE_ITEM_NAME_MAX_LENGTH",
      "private const val BROWNIE_ITEM_NAME_MAX_LENGTH: Int = 30",
      "com.tecknobit.browniecore.helpers.BrownieInputsValidator.BROWNIE_ITEM_NAME_MAX_LENGTH"
    ]
  },
  {
    "name": "private const val HOST_ADDRESS_REGEX: String",
    "description": "com.tecknobit.browniecore.helpers.BrownieInputsValidator.HOST_ADDRESS_REGEX",
    "location": "core/com.tecknobit.browniecore.helpers/-brownie-inputs-validator/-h-o-s-t_-a-d-d-r-e-s-s_-r-e-g-e-x.html",
    "searchKeys": [
      "HOST_ADDRESS_REGEX",
      "private const val HOST_ADDRESS_REGEX: String",
      "com.tecknobit.browniecore.helpers.BrownieInputsValidator.HOST_ADDRESS_REGEX"
    ]
  },
  {
    "name": "private constructor()",
    "description": "com.tecknobit.browniecore.enums.HostEventType.HostEventType",
    "location": "core/com.tecknobit.browniecore.enums/-host-event-type/-host-event-type.html",
    "searchKeys": [
      "HostEventType",
      "private constructor()",
      "com.tecknobit.browniecore.enums.HostEventType.HostEventType"
    ]
  },
  {
    "name": "private constructor()",
    "description": "com.tecknobit.browniecore.enums.HostStatus.HostStatus",
    "location": "core/com.tecknobit.browniecore.enums/-host-status/-host-status.html",
    "searchKeys": [
      "HostStatus",
      "private constructor()",
      "com.tecknobit.browniecore.enums.HostStatus.HostStatus"
    ]
  },
  {
    "name": "private constructor()",
    "description": "com.tecknobit.browniecore.enums.ServiceEventType.ServiceEventType",
    "location": "core/com.tecknobit.browniecore.enums/-service-event-type/-service-event-type.html",
    "searchKeys": [
      "ServiceEventType",
      "private constructor()",
      "com.tecknobit.browniecore.enums.ServiceEventType.ServiceEventType"
    ]
  },
  {
    "name": "private constructor()",
    "description": "com.tecknobit.browniecore.enums.ServiceStatus.ServiceStatus",
    "location": "core/com.tecknobit.browniecore.enums/-service-status/-service-status.html",
    "searchKeys": [
      "ServiceStatus",
      "private constructor()",
      "com.tecknobit.browniecore.enums.ServiceStatus.ServiceStatus"
    ]
  },
  {
    "name": "private constructor()",
    "description": "com.tecknobit.browniecore.enums.StorageType.StorageType",
    "location": "core/com.tecknobit.browniecore.enums/-storage-type/-storage-type.html",
    "searchKeys": [
      "StorageType",
      "private constructor()",
      "com.tecknobit.browniecore.enums.StorageType.StorageType"
    ]
  },
  {
    "name": "val entries: EnumEntries<HostEventType>",
    "description": "com.tecknobit.browniecore.enums.HostEventType.entries",
    "location": "core/com.tecknobit.browniecore.enums/-host-event-type/entries.html",
    "searchKeys": [
      "entries",
      "val entries: EnumEntries<HostEventType>",
      "com.tecknobit.browniecore.enums.HostEventType.entries"
    ]
  },
  {
    "name": "val entries: EnumEntries<HostStatus>",
    "description": "com.tecknobit.browniecore.enums.HostStatus.entries",
    "location": "core/com.tecknobit.browniecore.enums/-host-status/entries.html",
    "searchKeys": [
      "entries",
      "val entries: EnumEntries<HostStatus>",
      "com.tecknobit.browniecore.enums.HostStatus.entries"
    ]
  },
  {
    "name": "val entries: EnumEntries<ServiceEventType>",
    "description": "com.tecknobit.browniecore.enums.ServiceEventType.entries",
    "location": "core/com.tecknobit.browniecore.enums/-service-event-type/entries.html",
    "searchKeys": [
      "entries",
      "val entries: EnumEntries<ServiceEventType>",
      "com.tecknobit.browniecore.enums.ServiceEventType.entries"
    ]
  },
  {
    "name": "val entries: EnumEntries<ServiceStatus>",
    "description": "com.tecknobit.browniecore.enums.ServiceStatus.entries",
    "location": "core/com.tecknobit.browniecore.enums/-service-status/entries.html",
    "searchKeys": [
      "entries",
      "val entries: EnumEntries<ServiceStatus>",
      "com.tecknobit.browniecore.enums.ServiceStatus.entries"
    ]
  },
  {
    "name": "val entries: EnumEntries<StorageType>",
    "description": "com.tecknobit.browniecore.enums.StorageType.entries",
    "location": "core/com.tecknobit.browniecore.enums/-storage-type/entries.html",
    "searchKeys": [
      "entries",
      "val entries: EnumEntries<StorageType>",
      "com.tecknobit.browniecore.enums.StorageType.entries"
    ]
  },
  {
    "name": "HOST_SUSPENDED",
    "description": "com.tecknobit.brownie.helpers.LocalEventsHandler.LocalEvent.HOST_SUSPENDED",
    "location": "backend/com.tecknobit.brownie.helpers/-local-events-handler/-local-event/-h-o-s-t_-s-u-s-p-e-n-d-e-d/index.html",
    "searchKeys": [
      "HOST_SUSPENDED",
      "HOST_SUSPENDED",
      "com.tecknobit.brownie.helpers.LocalEventsHandler.LocalEvent.HOST_SUSPENDED"
    ]
  },
  {
    "name": "SYNC_SERVICES",
    "description": "com.tecknobit.brownie.events.BrownieApplicationEventType.SYNC_SERVICES",
    "location": "backend/com.tecknobit.brownie.events/-brownie-application-event-type/-s-y-n-c_-s-e-r-v-i-c-e-s/index.html",
    "searchKeys": [
      "SYNC_SERVICES",
      "SYNC_SERVICES",
      "com.tecknobit.brownie.events.BrownieApplicationEventType.SYNC_SERVICES"
    ]
  },
  {
    "name": "abstract class BrownieEvent : EquinoxItem",
    "description": "com.tecknobit.brownie.services.shared.entities.BrownieEvent",
    "location": "backend/com.tecknobit.brownie.services.shared.entities/-brownie-event/index.html",
    "searchKeys": [
      "BrownieEvent",
      "abstract class BrownieEvent : EquinoxItem",
      "com.tecknobit.brownie.services.shared.entities.BrownieEvent"
    ]
  },
  {
    "name": "abstract class BrownieEventsEmitter : EquinoxEventsEmitter<T> ",
    "description": "com.tecknobit.brownie.events.BrownieEventsEmitter",
    "location": "backend/com.tecknobit.brownie.events/-brownie-events-emitter/index.html",
    "searchKeys": [
      "BrownieEventsEmitter",
      "abstract class BrownieEventsEmitter : EquinoxEventsEmitter<T> ",
      "com.tecknobit.brownie.events.BrownieEventsEmitter"
    ]
  },
  {
    "name": "abstract class BrownieEventsRecorder<T : Enum<T>?, E : BrownieEvent?>",
    "description": "com.tecknobit.brownie.services.shared.services.BrownieEventsRecorder",
    "location": "backend/com.tecknobit.brownie.services.shared.services/-brownie-events-recorder/index.html",
    "searchKeys": [
      "BrownieEventsRecorder",
      "abstract class BrownieEventsRecorder<T : Enum<T>?, E : BrownieEvent?>",
      "com.tecknobit.brownie.services.shared.services.BrownieEventsRecorder"
    ]
  },
  {
    "name": "abstract class ShellCommandsExecutor",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/index.html",
    "searchKeys": [
      "ShellCommandsExecutor",
      "abstract class ShellCommandsExecutor",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor"
    ]
  },
  {
    "name": "abstract fun afterExecution(extra: Array<Any>)",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.OnCommandExecuted.afterExecution",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/-on-command-executed/after-execution.html",
    "searchKeys": [
      "afterExecution",
      "abstract fun afterExecution(extra: Array<Any>)",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.OnCommandExecuted.afterExecution"
    ]
  },
  {
    "name": "abstract fun countHosts(sessionId: String, keywords: String, statuses: List<String>): Long",
    "description": "com.tecknobit.brownie.services.hosts.repositories.HostsRepository.countHosts",
    "location": "backend/com.tecknobit.brownie.services.hosts.repositories/-hosts-repository/count-hosts.html",
    "searchKeys": [
      "countHosts",
      "abstract fun countHosts(sessionId: String, keywords: String, statuses: List<String>): Long",
      "com.tecknobit.brownie.services.hosts.repositories.HostsRepository.countHosts"
    ]
  },
  {
    "name": "abstract fun countServices(hostId: String, keywords: String, statuses: List<String>): Long",
    "description": "com.tecknobit.brownie.services.hostservices.repositories.HostServicesRepository.countServices",
    "location": "backend/com.tecknobit.brownie.services.hostservices.repositories/-host-services-repository/count-services.html",
    "searchKeys": [
      "countServices",
      "abstract fun countServices(hostId: String, keywords: String, statuses: List<String>): Long",
      "com.tecknobit.brownie.services.hostservices.repositories.HostServicesRepository.countServices"
    ]
  },
  {
    "name": "abstract fun editConfiguration(autoRunAfterHostReboot: Boolean, programArguments: String, purgeNohupOutAfterReboot: Boolean, serviceId: String)",
    "description": "com.tecknobit.brownie.services.hostservices.repositories.ServicesConfigurationsRepository.editConfiguration",
    "location": "backend/com.tecknobit.brownie.services.hostservices.repositories/-services-configurations-repository/edit-configuration.html",
    "searchKeys": [
      "editConfiguration",
      "abstract fun editConfiguration(autoRunAfterHostReboot: Boolean, programArguments: String, purgeNohupOutAfterReboot: Boolean, serviceId: String)",
      "com.tecknobit.brownie.services.hostservices.repositories.ServicesConfigurationsRepository.editConfiguration"
    ]
  },
  {
    "name": "abstract fun editHost(hostId: String, name: String, hostAddress: String)",
    "description": "com.tecknobit.brownie.services.hosts.repositories.HostsRepository.editHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.repositories/-hosts-repository/edit-host.html",
    "searchKeys": [
      "editHost",
      "abstract fun editHost(hostId: String, name: String, hostAddress: String)",
      "com.tecknobit.brownie.services.hosts.repositories.HostsRepository.editHost"
    ]
  },
  {
    "name": "abstract fun editHost(hostId: String, name: String, hostAddress: String, sshUser: String, sshPassword: String, broadcastIp: String, macAddress: String)",
    "description": "com.tecknobit.brownie.services.hosts.repositories.HostsRepository.editHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.repositories/-hosts-repository/edit-host.html",
    "searchKeys": [
      "editHost",
      "abstract fun editHost(hostId: String, name: String, hostAddress: String, sshUser: String, sshPassword: String, broadcastIp: String, macAddress: String)",
      "com.tecknobit.brownie.services.hosts.repositories.HostsRepository.editHost"
    ]
  },
  {
    "name": "abstract fun editService(serviceId: String, serviceName: String, servicePath: String)",
    "description": "com.tecknobit.brownie.services.hostservices.repositories.HostServicesRepository.editService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.repositories/-host-services-repository/edit-service.html",
    "searchKeys": [
      "editService",
      "abstract fun editService(serviceId: String, serviceName: String, servicePath: String)",
      "com.tecknobit.brownie.services.hostservices.repositories.HostServicesRepository.editService"
    ]
  },
  {
    "name": "abstract fun getHosts(sessionId: String, keywords: String, statuses: List<String>, pageable: Pageable): List<BrownieHost>",
    "description": "com.tecknobit.brownie.services.hosts.repositories.HostsRepository.getHosts",
    "location": "backend/com.tecknobit.brownie.services.hosts.repositories/-hosts-repository/get-hosts.html",
    "searchKeys": [
      "getHosts",
      "abstract fun getHosts(sessionId: String, keywords: String, statuses: List<String>, pageable: Pageable): List<BrownieHost>",
      "com.tecknobit.brownie.services.hosts.repositories.HostsRepository.getHosts"
    ]
  },
  {
    "name": "abstract fun getHostsStatus(currentHosts: List<String>): List<CurrentHostStatus>",
    "description": "com.tecknobit.brownie.services.hosts.repositories.HostsRepository.getHostsStatus",
    "location": "backend/com.tecknobit.brownie.services.hosts.repositories/-hosts-repository/get-hosts-status.html",
    "searchKeys": [
      "getHostsStatus",
      "abstract fun getHostsStatus(currentHosts: List<String>): List<CurrentHostStatus>",
      "com.tecknobit.brownie.services.hosts.repositories.HostsRepository.getHostsStatus"
    ]
  },
  {
    "name": "abstract fun getLastUpEvent(eventOwnerId: String): Long",
    "description": "com.tecknobit.brownie.services.shared.repositories.BrownieEventsRepository.getLastUpEvent",
    "location": "backend/com.tecknobit.brownie.services.shared.repositories/-brownie-events-repository/get-last-up-event.html",
    "searchKeys": [
      "getLastUpEvent",
      "abstract fun getLastUpEvent(eventOwnerId: String): Long",
      "com.tecknobit.brownie.services.shared.repositories.BrownieEventsRepository.getLastUpEvent"
    ]
  },
  {
    "name": "abstract fun getLastUpEvent(hostId: String): Long",
    "description": "com.tecknobit.brownie.services.hosts.repositories.HostEventsRepository.getLastUpEvent",
    "location": "backend/com.tecknobit.brownie.services.hosts.repositories/-host-events-repository/get-last-up-event.html",
    "searchKeys": [
      "getLastUpEvent",
      "abstract fun getLastUpEvent(hostId: String): Long",
      "com.tecknobit.brownie.services.hosts.repositories.HostEventsRepository.getLastUpEvent"
    ]
  },
  {
    "name": "abstract fun getLastUpEvent(serviceId: String): Long",
    "description": "com.tecknobit.brownie.services.hostservices.repositories.HostServiceEventsRepository.getLastUpEvent",
    "location": "backend/com.tecknobit.brownie.services.hostservices.repositories/-host-service-events-repository/get-last-up-event.html",
    "searchKeys": [
      "getLastUpEvent",
      "abstract fun getLastUpEvent(serviceId: String): Long",
      "com.tecknobit.brownie.services.hostservices.repositories.HostServiceEventsRepository.getLastUpEvent"
    ]
  },
  {
    "name": "abstract fun getServices(hostId: String, keywords: String, statuses: List<String>, pageable: Pageable): List<BrownieHostService>",
    "description": "com.tecknobit.brownie.services.hostservices.repositories.HostServicesRepository.getServices",
    "location": "backend/com.tecknobit.brownie.services.hostservices.repositories/-host-services-repository/get-services.html",
    "searchKeys": [
      "getServices",
      "abstract fun getServices(hostId: String, keywords: String, statuses: List<String>, pageable: Pageable): List<BrownieHostService>",
      "com.tecknobit.brownie.services.hostservices.repositories.HostServicesRepository.getServices"
    ]
  },
  {
    "name": "abstract fun getServicesStatus(services: List<String>): List<CurrentServiceStatus>",
    "description": "com.tecknobit.brownie.services.hostservices.repositories.HostServicesRepository.getServicesStatus",
    "location": "backend/com.tecknobit.brownie.services.hostservices.repositories/-host-services-repository/get-services-status.html",
    "searchKeys": [
      "getServicesStatus",
      "abstract fun getServicesStatus(services: List<String>): List<CurrentServiceStatus>",
      "com.tecknobit.brownie.services.hostservices.repositories.HostServicesRepository.getServicesStatus"
    ]
  },
  {
    "name": "abstract fun handleHostStatus(hostId: String, status: String)",
    "description": "com.tecknobit.brownie.services.hosts.repositories.HostsRepository.handleHostStatus",
    "location": "backend/com.tecknobit.brownie.services.hosts.repositories/-hosts-repository/handle-host-status.html",
    "searchKeys": [
      "handleHostStatus",
      "abstract fun handleHostStatus(hostId: String, status: String)",
      "com.tecknobit.brownie.services.hosts.repositories.HostsRepository.handleHostStatus"
    ]
  },
  {
    "name": "abstract fun hostBelongsToSession(hostId: String, sessionId: String): BrownieHost",
    "description": "com.tecknobit.brownie.services.hosts.repositories.HostsRepository.hostBelongsToSession",
    "location": "backend/com.tecknobit.brownie.services.hosts.repositories/-hosts-repository/host-belongs-to-session.html",
    "searchKeys": [
      "hostBelongsToSession",
      "abstract fun hostBelongsToSession(hostId: String, sessionId: String): BrownieHost",
      "com.tecknobit.brownie.services.hosts.repositories.HostsRepository.hostBelongsToSession"
    ]
  },
  {
    "name": "abstract fun markServiceAsStopped(hostId: String, pid: Long)",
    "description": "com.tecknobit.brownie.services.hostservices.repositories.HostServicesRepository.markServiceAsStopped",
    "location": "backend/com.tecknobit.brownie.services.hostservices.repositories/-host-services-repository/mark-service-as-stopped.html",
    "searchKeys": [
      "markServiceAsStopped",
      "abstract fun markServiceAsStopped(hostId: String, pid: Long)",
      "com.tecknobit.brownie.services.hostservices.repositories.HostServicesRepository.markServiceAsStopped"
    ]
  },
  {
    "name": "abstract fun onRestart()",
    "description": "com.tecknobit.brownie.helpers.RemoteHostWaiter.OnHostRestart.onRestart",
    "location": "backend/com.tecknobit.brownie.helpers/-remote-host-waiter/-on-host-restart/on-restart.html",
    "searchKeys": [
      "onRestart",
      "abstract fun onRestart()",
      "com.tecknobit.brownie.helpers.RemoteHostWaiter.OnHostRestart.onRestart"
    ]
  },
  {
    "name": "abstract fun rebootHost(service: HostsService, host: BrownieHost)",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.rebootHost",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/reboot-host.html",
    "searchKeys": [
      "rebootHost",
      "abstract fun rebootHost(service: HostsService, host: BrownieHost)",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.rebootHost"
    ]
  },
  {
    "name": "abstract fun registerEvent(eventId: String, type: String, eventDate: Long, eventOwnerId: String)",
    "description": "com.tecknobit.brownie.services.shared.repositories.BrownieEventsRepository.registerEvent",
    "location": "backend/com.tecknobit.brownie.services.shared.repositories/-brownie-events-repository/register-event.html",
    "searchKeys": [
      "registerEvent",
      "abstract fun registerEvent(eventId: String, type: String, eventDate: Long, eventOwnerId: String)",
      "com.tecknobit.brownie.services.shared.repositories.BrownieEventsRepository.registerEvent"
    ]
  },
  {
    "name": "abstract fun registerEvent(eventId: String, type: String, eventDate: Long, extra: String, eventOwnerId: String)",
    "description": "com.tecknobit.brownie.services.shared.repositories.BrownieEventsRepository.registerEvent",
    "location": "backend/com.tecknobit.brownie.services.shared.repositories/-brownie-events-repository/register-event.html",
    "searchKeys": [
      "registerEvent",
      "abstract fun registerEvent(eventId: String, type: String, eventDate: Long, extra: String, eventOwnerId: String)",
      "com.tecknobit.brownie.services.shared.repositories.BrownieEventsRepository.registerEvent"
    ]
  },
  {
    "name": "abstract fun registerEvent(eventId: String, type: String, eventDate: Long, extra: String, hostId: String)",
    "description": "com.tecknobit.brownie.services.hosts.repositories.HostEventsRepository.registerEvent",
    "location": "backend/com.tecknobit.brownie.services.hosts.repositories/-host-events-repository/register-event.html",
    "searchKeys": [
      "registerEvent",
      "abstract fun registerEvent(eventId: String, type: String, eventDate: Long, extra: String, hostId: String)",
      "com.tecknobit.brownie.services.hosts.repositories.HostEventsRepository.registerEvent"
    ]
  },
  {
    "name": "abstract fun registerEvent(eventId: String, type: String, eventDate: Long, extra: String, serviceId: String)",
    "description": "com.tecknobit.brownie.services.hostservices.repositories.HostServiceEventsRepository.registerEvent",
    "location": "backend/com.tecknobit.brownie.services.hostservices.repositories/-host-service-events-repository/register-event.html",
    "searchKeys": [
      "registerEvent",
      "abstract fun registerEvent(eventId: String, type: String, eventDate: Long, extra: String, serviceId: String)",
      "com.tecknobit.brownie.services.hostservices.repositories.HostServiceEventsRepository.registerEvent"
    ]
  },
  {
    "name": "abstract fun registerEvent(eventId: String, type: String, eventDate: Long, hostId: String)",
    "description": "com.tecknobit.brownie.services.hosts.repositories.HostEventsRepository.registerEvent",
    "location": "backend/com.tecknobit.brownie.services.hosts.repositories/-host-events-repository/register-event.html",
    "searchKeys": [
      "registerEvent",
      "abstract fun registerEvent(eventId: String, type: String, eventDate: Long, hostId: String)",
      "com.tecknobit.brownie.services.hosts.repositories.HostEventsRepository.registerEvent"
    ]
  },
  {
    "name": "abstract fun registerEvent(eventId: String, type: String, eventDate: Long, serviceId: String)",
    "description": "com.tecknobit.brownie.services.hostservices.repositories.HostServiceEventsRepository.registerEvent",
    "location": "backend/com.tecknobit.brownie.services.hostservices.repositories/-host-service-events-repository/register-event.html",
    "searchKeys": [
      "registerEvent",
      "abstract fun registerEvent(eventId: String, type: String, eventDate: Long, serviceId: String)",
      "com.tecknobit.brownie.services.hostservices.repositories.HostServiceEventsRepository.registerEvent"
    ]
  },
  {
    "name": "abstract fun registerHost(hostId: String, name: String, hostAddress: String, sshUser: String, sshPassword: String, status: String, sessionId: String, insertionDate: Long, broadcastIp: String, macAddress: String)",
    "description": "com.tecknobit.brownie.services.hosts.repositories.HostsRepository.registerHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.repositories/-hosts-repository/register-host.html",
    "searchKeys": [
      "registerHost",
      "abstract fun registerHost(hostId: String, name: String, hostAddress: String, sshUser: String, sshPassword: String, status: String, sessionId: String, insertionDate: Long, broadcastIp: String, macAddress: String)",
      "com.tecknobit.brownie.services.hosts.repositories.HostsRepository.registerHost"
    ]
  },
  {
    "name": "abstract fun removeService(serviceId: String)",
    "description": "com.tecknobit.brownie.services.hostservices.repositories.HostServicesRepository.removeService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.repositories/-host-services-repository/remove-service.html",
    "searchKeys": [
      "removeService",
      "abstract fun removeService(serviceId: String)",
      "com.tecknobit.brownie.services.hostservices.repositories.HostServicesRepository.removeService"
    ]
  },
  {
    "name": "abstract fun startService(service: BrownieHostService): Long",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.startService",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/start-service.html",
    "searchKeys": [
      "startService",
      "abstract fun startService(service: BrownieHostService): Long",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.startService"
    ]
  },
  {
    "name": "abstract fun stopHost(service: HostsService, host: BrownieHost)",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.stopHost",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/stop-host.html",
    "searchKeys": [
      "stopHost",
      "abstract fun stopHost(service: HostsService, host: BrownieHost)",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.stopHost"
    ]
  },
  {
    "name": "abstract fun storeConfiguration(configurationId: String, autoRunAfterHostReboot: Boolean, programArguments: String, purgeNohupOutAfterReboot: Boolean, serviceId: String)",
    "description": "com.tecknobit.brownie.services.hostservices.repositories.ServicesConfigurationsRepository.storeConfiguration",
    "location": "backend/com.tecknobit.brownie.services.hostservices.repositories/-services-configurations-repository/store-configuration.html",
    "searchKeys": [
      "storeConfiguration",
      "abstract fun storeConfiguration(configurationId: String, autoRunAfterHostReboot: Boolean, programArguments: String, purgeNohupOutAfterReboot: Boolean, serviceId: String)",
      "com.tecknobit.brownie.services.hostservices.repositories.ServicesConfigurationsRepository.storeConfiguration"
    ]
  },
  {
    "name": "abstract fun storeService(serviceId: String, serviceName: String, status: String, insertionDate: Long, hostId: String, servicePath: String)",
    "description": "com.tecknobit.brownie.services.hostservices.repositories.HostServicesRepository.storeService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.repositories/-host-services-repository/store-service.html",
    "searchKeys": [
      "storeService",
      "abstract fun storeService(serviceId: String, serviceName: String, status: String, insertionDate: Long, hostId: String, servicePath: String)",
      "com.tecknobit.brownie.services.hostservices.repositories.HostServicesRepository.storeService"
    ]
  },
  {
    "name": "abstract fun unregisterHost(hostId: String)",
    "description": "com.tecknobit.brownie.services.hosts.repositories.HostsRepository.unregisterHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.repositories/-hosts-repository/unregister-host.html",
    "searchKeys": [
      "unregisterHost",
      "abstract fun unregisterHost(hostId: String)",
      "com.tecknobit.brownie.services.hosts.repositories.HostsRepository.unregisterHost"
    ]
  },
  {
    "name": "abstract fun updateServiceStatus(serviceId: String, status: String, pid: Long)",
    "description": "com.tecknobit.brownie.services.hostservices.repositories.HostServicesRepository.updateServiceStatus",
    "location": "backend/com.tecknobit.brownie.services.hostservices.repositories/-host-services-repository/update-service-status.html",
    "searchKeys": [
      "updateServiceStatus",
      "abstract fun updateServiceStatus(serviceId: String, status: String, pid: Long)",
      "com.tecknobit.brownie.services.hostservices.repositories.HostServicesRepository.updateServiceStatus"
    ]
  },
  {
    "name": "abstract fun validateSessionConnectionAttempt(joinCode: String, password: String): BrownieSession",
    "description": "com.tecknobit.brownie.services.session.repository.BrownieSessionsRepository.validateSessionConnectionAttempt",
    "location": "backend/com.tecknobit.brownie.services.session.repository/-brownie-sessions-repository/validate-session-connection-attempt.html",
    "searchKeys": [
      "validateSessionConnectionAttempt",
      "abstract fun validateSessionConnectionAttempt(joinCode: String, password: String): BrownieSession",
      "com.tecknobit.brownie.services.session.repository.BrownieSessionsRepository.validateSessionConnectionAttempt"
    ]
  },
  {
    "name": "class CurrentHostStatus : Record",
    "description": "com.tecknobit.brownie.services.hosts.dtos.CurrentHostStatus",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos/-current-host-status/index.html",
    "searchKeys": [
      "CurrentHostStatus",
      "class CurrentHostStatus : Record",
      "com.tecknobit.brownie.services.hosts.dtos.CurrentHostStatus"
    ]
  },
  {
    "name": "class CurrentServiceStatus : Record",
    "description": "com.tecknobit.brownie.services.hostservices.dtos.CurrentServiceStatus",
    "location": "backend/com.tecknobit.brownie.services.hostservices.dtos/-current-service-status/index.html",
    "searchKeys": [
      "CurrentServiceStatus",
      "class CurrentServiceStatus : Record",
      "com.tecknobit.brownie.services.hostservices.dtos.CurrentServiceStatus"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.brownie.Launcher.Launcher",
    "location": "backend/com.tecknobit.brownie/-launcher/-launcher.html",
    "searchKeys": [
      "Launcher",
      "constructor()",
      "com.tecknobit.brownie.Launcher.Launcher"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.brownie.configuration.BrownieIndexesCreator.BrownieIndexesCreator",
    "location": "backend/com.tecknobit.brownie.configuration/-brownie-indexes-creator/-brownie-indexes-creator.html",
    "searchKeys": [
      "BrownieIndexesCreator",
      "constructor()",
      "com.tecknobit.brownie.configuration.BrownieIndexesCreator.BrownieIndexesCreator"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.brownie.configuration.CORSAdvice.CORSAdvice",
    "location": "backend/com.tecknobit.brownie.configuration/-c-o-r-s-advice/-c-o-r-s-advice.html",
    "searchKeys": [
      "CORSAdvice",
      "constructor()",
      "com.tecknobit.brownie.configuration.CORSAdvice.CORSAdvice"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.brownie.helpers.LocalEventsHandler.LocalEventsHandler",
    "location": "backend/com.tecknobit.brownie.helpers/-local-events-handler/-local-events-handler.html",
    "searchKeys": [
      "LocalEventsHandler",
      "constructor()",
      "com.tecknobit.brownie.helpers.LocalEventsHandler.LocalEventsHandler"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.brownie.helpers.RemoteHostWaiter.RemoteHostWaiter",
    "location": "backend/com.tecknobit.brownie.helpers/-remote-host-waiter/-remote-host-waiter.html",
    "searchKeys": [
      "RemoteHostWaiter",
      "constructor()",
      "com.tecknobit.brownie.helpers.RemoteHostWaiter.RemoteHostWaiter"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.brownie.helpers.shell.LocalShellCommandsExecutor.LocalShellCommandsExecutor",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-local-shell-commands-executor/-local-shell-commands-executor.html",
    "searchKeys": [
      "LocalShellCommandsExecutor",
      "constructor()",
      "com.tecknobit.brownie.helpers.shell.LocalShellCommandsExecutor.LocalShellCommandsExecutor"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.ShellCommandsExecutor",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/-shell-commands-executor.html",
    "searchKeys": [
      "ShellCommandsExecutor",
      "constructor()",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.ShellCommandsExecutor"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.brownie.services.hosts.commands.WakeOnLanExecutor.WakeOnLanExecutor",
    "location": "backend/com.tecknobit.brownie.services.hosts.commands/-wake-on-lan-executor/-wake-on-lan-executor.html",
    "searchKeys": [
      "WakeOnLanExecutor",
      "constructor()",
      "com.tecknobit.brownie.services.hosts.commands.WakeOnLanExecutor.WakeOnLanExecutor"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.brownie.services.hosts.dtos.BrownieHostStat.BrownieHostStat",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos/-brownie-host-stat/-brownie-host-stat.html",
    "searchKeys": [
      "BrownieHostStat",
      "constructor()",
      "com.tecknobit.brownie.services.hosts.dtos.BrownieHostStat.BrownieHostStat"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.brownie.services.hosts.dtos.CurrentHostStatus.CurrentHostStatus",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos/-current-host-status/-current-host-status.html",
    "searchKeys": [
      "CurrentHostStatus",
      "constructor()",
      "com.tecknobit.brownie.services.hosts.dtos.CurrentHostStatus.CurrentHostStatus"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.brownie.services.hosts.dtos.usages.CPUUsage.CPUUsage",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos.usages/-c-p-u-usage/-c-p-u-usage.html",
    "searchKeys": [
      "CPUUsage",
      "constructor()",
      "com.tecknobit.brownie.services.hosts.dtos.usages.CPUUsage.CPUUsage"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.brownie.services.hosts.dtos.usages.StorageUsage.StorageUsage",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos.usages/-storage-usage/-storage-usage.html",
    "searchKeys": [
      "StorageUsage",
      "constructor()",
      "com.tecknobit.brownie.services.hosts.dtos.usages.StorageUsage.StorageUsage"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.brownie.services.hosts.entities.BrownieHost.BrownieHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-brownie-host/-brownie-host.html",
    "searchKeys": [
      "BrownieHost",
      "constructor()",
      "com.tecknobit.brownie.services.hosts.entities.BrownieHost.BrownieHost"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.brownie.services.hosts.entities.HostHistoryEvent.HostHistoryEvent",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-host-history-event/-host-history-event.html",
    "searchKeys": [
      "HostHistoryEvent",
      "constructor()",
      "com.tecknobit.brownie.services.hosts.entities.HostHistoryEvent.HostHistoryEvent"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.brownie.services.hostservices.dtos.CurrentServiceStatus.CurrentServiceStatus",
    "location": "backend/com.tecknobit.brownie.services.hostservices.dtos/-current-service-status/-current-service-status.html",
    "searchKeys": [
      "CurrentServiceStatus",
      "constructor()",
      "com.tecknobit.brownie.services.hostservices.dtos.CurrentServiceStatus.CurrentServiceStatus"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.BrownieHostService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-brownie-host-service/-brownie-host-service.html",
    "searchKeys": [
      "BrownieHostService",
      "constructor()",
      "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.BrownieHostService"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.ServiceConfiguration.ServiceConfiguration",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-brownie-host-service/-service-configuration/-service-configuration.html",
    "searchKeys": [
      "ServiceConfiguration",
      "constructor()",
      "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.ServiceConfiguration.ServiceConfiguration"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.brownie.services.hostservices.entities.ServiceEvent.ServiceEvent",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-service-event/-service-event.html",
    "searchKeys": [
      "ServiceEvent",
      "constructor()",
      "com.tecknobit.brownie.services.hostservices.entities.ServiceEvent.ServiceEvent"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.brownie.services.session.entity.BrownieSession.BrownieSession",
    "location": "backend/com.tecknobit.brownie.services.session.entity/-brownie-session/-brownie-session.html",
    "searchKeys": [
      "BrownieSession",
      "constructor()",
      "com.tecknobit.brownie.services.session.entity.BrownieSession.BrownieSession"
    ]
  },
  {
    "name": "constructor()",
    "description": "com.tecknobit.brownie.services.shared.entities.BrownieEvent.BrownieEvent",
    "location": "backend/com.tecknobit.brownie.services.shared.entities/-brownie-event/-brownie-event.html",
    "searchKeys": [
      "BrownieEvent",
      "constructor()",
      "com.tecknobit.brownie.services.shared.entities.BrownieEvent.BrownieEvent"
    ]
  },
  {
    "name": "constructor(eventsRepository: HostServiceEventsRepository)",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServiceEventsService.HostServiceEventsService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-service-events-service/-host-service-events-service.html",
    "searchKeys": [
      "HostServiceEventsService",
      "constructor(eventsRepository: HostServiceEventsRepository)",
      "com.tecknobit.brownie.services.hostservices.services.HostServiceEventsService.HostServiceEventsService"
    ]
  },
  {
    "name": "constructor(host: BrownieHost)",
    "description": "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.RemoteShellCommandsExecutor",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-remote-shell-commands-executor/-remote-shell-commands-executor.html",
    "searchKeys": [
      "RemoteShellCommandsExecutor",
      "constructor(host: BrownieHost)",
      "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.RemoteShellCommandsExecutor"
    ]
  },
  {
    "name": "constructor(host: BrownieHost)",
    "description": "com.tecknobit.brownie.services.hosts.dtos.BrownieHostOverview.BrownieHostOverview",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos/-brownie-host-overview/-brownie-host-overview.html",
    "searchKeys": [
      "BrownieHostOverview",
      "constructor(host: BrownieHost)",
      "com.tecknobit.brownie.services.hosts.dtos.BrownieHostOverview.BrownieHostOverview"
    ]
  },
  {
    "name": "constructor(host: BrownieHost, cpuUsage: CPUUsage, memoryUsage: BrownieHostStat, storageUsage: StorageUsage)",
    "description": "com.tecknobit.brownie.services.hosts.dtos.BrownieHostOverview.BrownieHostOverview",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos/-brownie-host-overview/-brownie-host-overview.html",
    "searchKeys": [
      "BrownieHostOverview",
      "constructor(host: BrownieHost, cpuUsage: CPUUsage, memoryUsage: BrownieHostStat, storageUsage: StorageUsage)",
      "com.tecknobit.brownie.services.hosts.dtos.BrownieHostOverview.BrownieHostOverview"
    ]
  },
  {
    "name": "constructor(hostsRepository: HostsRepository, eventsService: HostEventsService, servicesService: HostServicesService)",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.HostsService",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/-hosts-service.html",
    "searchKeys": [
      "HostsService",
      "constructor(hostsRepository: HostsRepository, eventsService: HostEventsService, servicesService: HostServicesService)",
      "com.tecknobit.brownie.services.hosts.services.HostsService.HostsService"
    ]
  },
  {
    "name": "constructor(id: String, eventDate: Long, extra: Any)",
    "description": "com.tecknobit.brownie.services.shared.entities.BrownieEvent.BrownieEvent",
    "location": "backend/com.tecknobit.brownie.services.shared.entities/-brownie-event/-brownie-event.html",
    "searchKeys": [
      "BrownieEvent",
      "constructor(id: String, eventDate: Long, extra: Any)",
      "com.tecknobit.brownie.services.shared.entities.BrownieEvent.BrownieEvent"
    ]
  },
  {
    "name": "constructor(id: String, eventDate: Long, extra: Any, type: ServiceEventType)",
    "description": "com.tecknobit.brownie.services.hostservices.entities.ServiceEvent.ServiceEvent",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-service-event/-service-event.html",
    "searchKeys": [
      "ServiceEvent",
      "constructor(id: String, eventDate: Long, extra: Any, type: ServiceEventType)",
      "com.tecknobit.brownie.services.hostservices.entities.ServiceEvent.ServiceEvent"
    ]
  },
  {
    "name": "constructor(id: String, joinCode: String, password: String)",
    "description": "com.tecknobit.brownie.services.session.entity.BrownieSession.BrownieSession",
    "location": "backend/com.tecknobit.brownie.services.session.entity/-brownie-session/-brownie-session.html",
    "searchKeys": [
      "BrownieSession",
      "constructor(id: String, joinCode: String, password: String)",
      "com.tecknobit.brownie.services.session.entity.BrownieSession.BrownieSession"
    ]
  },
  {
    "name": "constructor(id: String, joinCode: String, password: String, hosts: List<BrownieHost>)",
    "description": "com.tecknobit.brownie.services.session.entity.BrownieSession.BrownieSession",
    "location": "backend/com.tecknobit.brownie.services.session.entity/-brownie-session/-brownie-session.html",
    "searchKeys": [
      "BrownieSession",
      "constructor(id: String, joinCode: String, password: String, hosts: List<BrownieHost>)",
      "com.tecknobit.brownie.services.session.entity.BrownieSession.BrownieSession"
    ]
  },
  {
    "name": "constructor(id: String, name: String, hostAddress: String, status: HostStatus, sshUser: String, sshPassword: String, session: BrownieSession, macAddress: String, broadcastIp: String, events: List<HostHistoryEvent>, services: List<BrownieHostService>, insertionDate: Long)",
    "description": "com.tecknobit.brownie.services.hosts.entities.BrownieHost.BrownieHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-brownie-host/-brownie-host.html",
    "searchKeys": [
      "BrownieHost",
      "constructor(id: String, name: String, hostAddress: String, status: HostStatus, sshUser: String, sshPassword: String, session: BrownieSession, macAddress: String, broadcastIp: String, events: List<HostHistoryEvent>, services: List<BrownieHostService>, insertionDate: Long)",
      "com.tecknobit.brownie.services.hosts.entities.BrownieHost.BrownieHost"
    ]
  },
  {
    "name": "constructor(id: String, programArguments: String, purgeNohupOutAfterReboot: Boolean, autoRunAfterHostReboot: Boolean)",
    "description": "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.ServiceConfiguration.ServiceConfiguration",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-brownie-host-service/-service-configuration/-service-configuration.html",
    "searchKeys": [
      "ServiceConfiguration",
      "constructor(id: String, programArguments: String, purgeNohupOutAfterReboot: Boolean, autoRunAfterHostReboot: Boolean)",
      "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.ServiceConfiguration.ServiceConfiguration"
    ]
  },
  {
    "name": "constructor(id: String, status: ServiceStatus, name: String, servicePath: String, pid: Long, insertionDate: Long, configuration: BrownieHostService.ServiceConfiguration, events: List<ServiceEvent>)",
    "description": "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.BrownieHostService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-brownie-host-service/-brownie-host-service.html",
    "searchKeys": [
      "BrownieHostService",
      "constructor(id: String, status: ServiceStatus, name: String, servicePath: String, pid: Long, insertionDate: Long, configuration: BrownieHostService.ServiceConfiguration, events: List<ServiceEvent>)",
      "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.BrownieHostService"
    ]
  },
  {
    "name": "constructor(id: String, type: HostEventType, eventDate: Long, extra: Any)",
    "description": "com.tecknobit.brownie.services.hosts.entities.HostHistoryEvent.HostHistoryEvent",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-host-history-event/-host-history-event.html",
    "searchKeys": [
      "HostHistoryEvent",
      "constructor(id: String, type: HostEventType, eventDate: Long, extra: Any)",
      "com.tecknobit.brownie.services.hosts.entities.HostHistoryEvent.HostHistoryEvent"
    ]
  },
  {
    "name": "constructor(publisher: ApplicationEventPublisher, sessionsRepository: BrownieSessionsRepository)",
    "description": "com.tecknobit.brownie.services.session.service.BrownieSessionsService.BrownieSessionsService",
    "location": "backend/com.tecknobit.brownie.services.session.service/-brownie-sessions-service/-brownie-sessions-service.html",
    "searchKeys": [
      "BrownieSessionsService",
      "constructor(publisher: ApplicationEventPublisher, sessionsRepository: BrownieSessionsRepository)",
      "com.tecknobit.brownie.services.session.service.BrownieSessionsService.BrownieSessionsService"
    ]
  },
  {
    "name": "constructor(rawStats: String)",
    "description": "com.tecknobit.brownie.services.hosts.dtos.BrownieHostStat.BrownieHostStat",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos/-brownie-host-stat/-brownie-host-stat.html",
    "searchKeys": [
      "BrownieHostStat",
      "constructor(rawStats: String)",
      "com.tecknobit.brownie.services.hosts.dtos.BrownieHostStat.BrownieHostStat"
    ]
  },
  {
    "name": "constructor(rawStats: String, rawType: String)",
    "description": "com.tecknobit.brownie.services.hosts.dtos.usages.StorageUsage.StorageUsage",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos.usages/-storage-usage/-storage-usage.html",
    "searchKeys": [
      "StorageUsage",
      "constructor(rawStats: String, rawType: String)",
      "com.tecknobit.brownie.services.hosts.dtos.usages.StorageUsage.StorageUsage"
    ]
  },
  {
    "name": "constructor(servicesConfigurationsRepository: ServicesConfigurationsRepository)",
    "description": "com.tecknobit.brownie.services.hostservices.services.ServicesConfigurationsService.ServicesConfigurationsService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-services-configurations-service/-services-configurations-service.html",
    "searchKeys": [
      "ServicesConfigurationsService",
      "constructor(servicesConfigurationsRepository: ServicesConfigurationsRepository)",
      "com.tecknobit.brownie.services.hostservices.services.ServicesConfigurationsService.ServicesConfigurationsService"
    ]
  },
  {
    "name": "constructor(servicesRepository: HostServicesRepository, hostEventsService: HostEventsService, configurationsService: ServicesConfigurationsService, serviceEvents: HostServiceEventsService)",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServicesService.HostServicesService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-services-service/-host-services-service.html",
    "searchKeys": [
      "HostServicesService",
      "constructor(servicesRepository: HostServicesRepository, hostEventsService: HostEventsService, configurationsService: ServicesConfigurationsService, serviceEvents: HostServiceEventsService)",
      "com.tecknobit.brownie.services.hostservices.services.HostServicesService.HostServicesService"
    ]
  },
  {
    "name": "constructor(sessionsService: BrownieSessionsService, hostsService: HostsService)",
    "description": "com.tecknobit.brownie.services.hosts.controller.HostsController.HostsController",
    "location": "backend/com.tecknobit.brownie.services.hosts.controller/-hosts-controller/-hosts-controller.html",
    "searchKeys": [
      "HostsController",
      "constructor(sessionsService: BrownieSessionsService, hostsService: HostsService)",
      "com.tecknobit.brownie.services.hosts.controller.HostsController.HostsController"
    ]
  },
  {
    "name": "constructor(sessionsService: BrownieSessionsService, hostsService: HostsService)",
    "description": "com.tecknobit.brownie.services.session.controller.BrownieSessionController.BrownieSessionController",
    "location": "backend/com.tecknobit.brownie.services.session.controller/-brownie-session-controller/-brownie-session-controller.html",
    "searchKeys": [
      "BrownieSessionController",
      "constructor(sessionsService: BrownieSessionsService, hostsService: HostsService)",
      "com.tecknobit.brownie.services.session.controller.BrownieSessionController.BrownieSessionController"
    ]
  },
  {
    "name": "constructor(sessionsService: BrownieSessionsService, hostsService: HostsService)",
    "description": "com.tecknobit.brownie.services.shared.controllers.DefaultBrownieController.DefaultBrownieController",
    "location": "backend/com.tecknobit.brownie.services.shared.controllers/-default-brownie-controller/-default-brownie-controller.html",
    "searchKeys": [
      "DefaultBrownieController",
      "constructor(sessionsService: BrownieSessionsService, hostsService: HostsService)",
      "com.tecknobit.brownie.services.shared.controllers.DefaultBrownieController.DefaultBrownieController"
    ]
  },
  {
    "name": "constructor(sessionsService: BrownieSessionsService, hostsService: HostsService, service: HostServicesService)",
    "description": "com.tecknobit.brownie.services.hostservices.controller.HostServicesController.HostServicesController",
    "location": "backend/com.tecknobit.brownie.services.hostservices.controller/-host-services-controller/-host-services-controller.html",
    "searchKeys": [
      "HostServicesController",
      "constructor(sessionsService: BrownieSessionsService, hostsService: HostsService, service: HostServicesService)",
      "com.tecknobit.brownie.services.hostservices.controller.HostServicesController.HostServicesController"
    ]
  },
  {
    "name": "constructor(source: Any, eventType: BrownieApplicationEventType, extra: Array<Any>)",
    "description": "com.tecknobit.brownie.events.BrownieApplicationEvent.BrownieApplicationEvent",
    "location": "backend/com.tecknobit.brownie.events/-brownie-application-event/-brownie-application-event.html",
    "searchKeys": [
      "BrownieApplicationEvent",
      "constructor(source: Any, eventType: BrownieApplicationEventType, extra: Array<Any>)",
      "com.tecknobit.brownie.events.BrownieApplicationEvent.BrownieApplicationEvent"
    ]
  },
  {
    "name": "constructor(sshUser: String, hostAddress: String, sshPassword: String)",
    "description": "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.RemoteShellCommandsExecutor",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-remote-shell-commands-executor/-remote-shell-commands-executor.html",
    "searchKeys": [
      "RemoteShellCommandsExecutor",
      "constructor(sshUser: String, hostAddress: String, sshPassword: String)",
      "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.RemoteShellCommandsExecutor"
    ]
  },
  {
    "name": "constructor(usageValue: String, clock: String)",
    "description": "com.tecknobit.brownie.services.hosts.dtos.usages.CPUUsage.CPUUsage",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos.usages/-c-p-u-usage/-c-p-u-usage.html",
    "searchKeys": [
      "CPUUsage",
      "constructor(usageValue: String, clock: String)",
      "com.tecknobit.brownie.services.hosts.dtos.usages.CPUUsage.CPUUsage"
    ]
  },
  {
    "name": "constructor(usageValue: String, totalValue: Long)",
    "description": "com.tecknobit.brownie.services.hosts.dtos.BrownieHostStat.BrownieHostStat",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos/-brownie-host-stat/-brownie-host-stat.html",
    "searchKeys": [
      "BrownieHostStat",
      "constructor(usageValue: String, totalValue: Long)",
      "com.tecknobit.brownie.services.hosts.dtos.BrownieHostStat.BrownieHostStat"
    ]
  },
  {
    "name": "enum BrownieApplicationEventType",
    "description": "com.tecknobit.brownie.events.BrownieApplicationEventType",
    "location": "backend/com.tecknobit.brownie.events/-brownie-application-event-type/index.html",
    "searchKeys": [
      "BrownieApplicationEventType",
      "enum BrownieApplicationEventType",
      "com.tecknobit.brownie.events.BrownieApplicationEventType"
    ]
  },
  {
    "name": "enum LocalEvent",
    "description": "com.tecknobit.brownie.helpers.LocalEventsHandler.LocalEvent",
    "location": "backend/com.tecknobit.brownie.helpers/-local-events-handler/-local-event/index.html",
    "searchKeys": [
      "LocalEvent",
      "enum LocalEvent",
      "com.tecknobit.brownie.helpers.LocalEventsHandler.LocalEvent"
    ]
  },
  {
    "name": "interface BrownieEventsCollector : EquinoxEventsCollector<T, E> ",
    "description": "com.tecknobit.brownie.events.BrownieEventsCollector",
    "location": "backend/com.tecknobit.brownie.events/-brownie-events-collector/index.html",
    "searchKeys": [
      "BrownieEventsCollector",
      "interface BrownieEventsCollector : EquinoxEventsCollector<T, E> ",
      "com.tecknobit.brownie.events.BrownieEventsCollector"
    ]
  },
  {
    "name": "interface BrownieEventsRepository<E : BrownieEvent?> : JpaRepository<T, ID> ",
    "description": "com.tecknobit.brownie.services.shared.repositories.BrownieEventsRepository",
    "location": "backend/com.tecknobit.brownie.services.shared.repositories/-brownie-events-repository/index.html",
    "searchKeys": [
      "BrownieEventsRepository",
      "interface BrownieEventsRepository<E : BrownieEvent?> : JpaRepository<T, ID> ",
      "com.tecknobit.brownie.services.shared.repositories.BrownieEventsRepository"
    ]
  },
  {
    "name": "interface BrownieSessionsRepository : JpaRepository<T, ID> ",
    "description": "com.tecknobit.brownie.services.session.repository.BrownieSessionsRepository",
    "location": "backend/com.tecknobit.brownie.services.session.repository/-brownie-sessions-repository/index.html",
    "searchKeys": [
      "BrownieSessionsRepository",
      "interface BrownieSessionsRepository : JpaRepository<T, ID> ",
      "com.tecknobit.brownie.services.session.repository.BrownieSessionsRepository"
    ]
  },
  {
    "name": "interface HostEventsRepository : BrownieEventsRepository<E> ",
    "description": "com.tecknobit.brownie.services.hosts.repositories.HostEventsRepository",
    "location": "backend/com.tecknobit.brownie.services.hosts.repositories/-host-events-repository/index.html",
    "searchKeys": [
      "HostEventsRepository",
      "interface HostEventsRepository : BrownieEventsRepository<E> ",
      "com.tecknobit.brownie.services.hosts.repositories.HostEventsRepository"
    ]
  },
  {
    "name": "interface HostServiceEventsRepository : BrownieEventsRepository<E> ",
    "description": "com.tecknobit.brownie.services.hostservices.repositories.HostServiceEventsRepository",
    "location": "backend/com.tecknobit.brownie.services.hostservices.repositories/-host-service-events-repository/index.html",
    "searchKeys": [
      "HostServiceEventsRepository",
      "interface HostServiceEventsRepository : BrownieEventsRepository<E> ",
      "com.tecknobit.brownie.services.hostservices.repositories.HostServiceEventsRepository"
    ]
  },
  {
    "name": "interface HostServicesRepository : JpaRepository<T, ID> ",
    "description": "com.tecknobit.brownie.services.hostservices.repositories.HostServicesRepository",
    "location": "backend/com.tecknobit.brownie.services.hostservices.repositories/-host-services-repository/index.html",
    "searchKeys": [
      "HostServicesRepository",
      "interface HostServicesRepository : JpaRepository<T, ID> ",
      "com.tecknobit.brownie.services.hostservices.repositories.HostServicesRepository"
    ]
  },
  {
    "name": "interface HostsRepository : JpaRepository<T, ID> ",
    "description": "com.tecknobit.brownie.services.hosts.repositories.HostsRepository",
    "location": "backend/com.tecknobit.brownie.services.hosts.repositories/-hosts-repository/index.html",
    "searchKeys": [
      "HostsRepository",
      "interface HostsRepository : JpaRepository<T, ID> ",
      "com.tecknobit.brownie.services.hosts.repositories.HostsRepository"
    ]
  },
  {
    "name": "interface OnCommandExecuted",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.OnCommandExecuted",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/-on-command-executed/index.html",
    "searchKeys": [
      "OnCommandExecuted",
      "interface OnCommandExecuted",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.OnCommandExecuted"
    ]
  },
  {
    "name": "interface OnHostRestart",
    "description": "com.tecknobit.brownie.helpers.RemoteHostWaiter.OnHostRestart",
    "location": "backend/com.tecknobit.brownie.helpers/-remote-host-waiter/-on-host-restart/index.html",
    "searchKeys": [
      "OnHostRestart",
      "interface OnHostRestart",
      "com.tecknobit.brownie.helpers.RemoteHostWaiter.OnHostRestart"
    ]
  },
  {
    "name": "interface ServicesConfigurationsRepository : JpaRepository<T, ID> ",
    "description": "com.tecknobit.brownie.services.hostservices.repositories.ServicesConfigurationsRepository",
    "location": "backend/com.tecknobit.brownie.services.hostservices.repositories/-services-configurations-repository/index.html",
    "searchKeys": [
      "ServicesConfigurationsRepository",
      "interface ServicesConfigurationsRepository : JpaRepository<T, ID> ",
      "com.tecknobit.brownie.services.hostservices.repositories.ServicesConfigurationsRepository"
    ]
  },
  {
    "name": "open class BrownieApplicationEvent : EquinoxApplicationEvent<T> ",
    "description": "com.tecknobit.brownie.events.BrownieApplicationEvent",
    "location": "backend/com.tecknobit.brownie.events/-brownie-application-event/index.html",
    "searchKeys": [
      "BrownieApplicationEvent",
      "open class BrownieApplicationEvent : EquinoxApplicationEvent<T> ",
      "com.tecknobit.brownie.events.BrownieApplicationEvent"
    ]
  },
  {
    "name": "open class BrownieHost : EquinoxItem",
    "description": "com.tecknobit.brownie.services.hosts.entities.BrownieHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-brownie-host/index.html",
    "searchKeys": [
      "BrownieHost",
      "open class BrownieHost : EquinoxItem",
      "com.tecknobit.brownie.services.hosts.entities.BrownieHost"
    ]
  },
  {
    "name": "open class BrownieHostOverview",
    "description": "com.tecknobit.brownie.services.hosts.dtos.BrownieHostOverview",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos/-brownie-host-overview/index.html",
    "searchKeys": [
      "BrownieHostOverview",
      "open class BrownieHostOverview",
      "com.tecknobit.brownie.services.hosts.dtos.BrownieHostOverview"
    ]
  },
  {
    "name": "open class BrownieHostService : EquinoxItem",
    "description": "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-brownie-host-service/index.html",
    "searchKeys": [
      "BrownieHostService",
      "open class BrownieHostService : EquinoxItem",
      "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService"
    ]
  },
  {
    "name": "open class BrownieHostStat",
    "description": "com.tecknobit.brownie.services.hosts.dtos.BrownieHostStat",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos/-brownie-host-stat/index.html",
    "searchKeys": [
      "BrownieHostStat",
      "open class BrownieHostStat",
      "com.tecknobit.brownie.services.hosts.dtos.BrownieHostStat"
    ]
  },
  {
    "name": "open class BrownieIndexesCreator : IndexesCreator",
    "description": "com.tecknobit.brownie.configuration.BrownieIndexesCreator",
    "location": "backend/com.tecknobit.brownie.configuration/-brownie-indexes-creator/index.html",
    "searchKeys": [
      "BrownieIndexesCreator",
      "open class BrownieIndexesCreator : IndexesCreator",
      "com.tecknobit.brownie.configuration.BrownieIndexesCreator"
    ]
  },
  {
    "name": "open class BrownieSession : EquinoxItem",
    "description": "com.tecknobit.brownie.services.session.entity.BrownieSession",
    "location": "backend/com.tecknobit.brownie.services.session.entity/-brownie-session/index.html",
    "searchKeys": [
      "BrownieSession",
      "open class BrownieSession : EquinoxItem",
      "com.tecknobit.brownie.services.session.entity.BrownieSession"
    ]
  },
  {
    "name": "open class BrownieSessionController : DefaultBrownieController",
    "description": "com.tecknobit.brownie.services.session.controller.BrownieSessionController",
    "location": "backend/com.tecknobit.brownie.services.session.controller/-brownie-session-controller/index.html",
    "searchKeys": [
      "BrownieSessionController",
      "open class BrownieSessionController : DefaultBrownieController",
      "com.tecknobit.brownie.services.session.controller.BrownieSessionController"
    ]
  },
  {
    "name": "open class BrownieSessionsService : BrownieEventsEmitter",
    "description": "com.tecknobit.brownie.services.session.service.BrownieSessionsService",
    "location": "backend/com.tecknobit.brownie.services.session.service/-brownie-sessions-service/index.html",
    "searchKeys": [
      "BrownieSessionsService",
      "open class BrownieSessionsService : BrownieEventsEmitter",
      "com.tecknobit.brownie.services.session.service.BrownieSessionsService"
    ]
  },
  {
    "name": "open class CORSAdvice",
    "description": "com.tecknobit.brownie.configuration.CORSAdvice",
    "location": "backend/com.tecknobit.brownie.configuration/-c-o-r-s-advice/index.html",
    "searchKeys": [
      "CORSAdvice",
      "open class CORSAdvice",
      "com.tecknobit.brownie.configuration.CORSAdvice"
    ]
  },
  {
    "name": "open class CPUUsage : BrownieHostStat",
    "description": "com.tecknobit.brownie.services.hosts.dtos.usages.CPUUsage",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos.usages/-c-p-u-usage/index.html",
    "searchKeys": [
      "CPUUsage",
      "open class CPUUsage : BrownieHostStat",
      "com.tecknobit.brownie.services.hosts.dtos.usages.CPUUsage"
    ]
  },
  {
    "name": "open class DefaultBrownieController : DefaultEquinoxController",
    "description": "com.tecknobit.brownie.services.shared.controllers.DefaultBrownieController",
    "location": "backend/com.tecknobit.brownie.services.shared.controllers/-default-brownie-controller/index.html",
    "searchKeys": [
      "DefaultBrownieController",
      "open class DefaultBrownieController : DefaultEquinoxController",
      "com.tecknobit.brownie.services.shared.controllers.DefaultBrownieController"
    ]
  },
  {
    "name": "open class HostEventsService : BrownieEventsRecorder<T, E> ",
    "description": "com.tecknobit.brownie.services.hosts.services.HostEventsService",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-host-events-service/index.html",
    "searchKeys": [
      "HostEventsService",
      "open class HostEventsService : BrownieEventsRecorder<T, E> ",
      "com.tecknobit.brownie.services.hosts.services.HostEventsService"
    ]
  },
  {
    "name": "open class HostHistoryEvent : BrownieEvent",
    "description": "com.tecknobit.brownie.services.hosts.entities.HostHistoryEvent",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-host-history-event/index.html",
    "searchKeys": [
      "HostHistoryEvent",
      "open class HostHistoryEvent : BrownieEvent",
      "com.tecknobit.brownie.services.hosts.entities.HostHistoryEvent"
    ]
  },
  {
    "name": "open class HostServiceEventsService : BrownieEventsRecorder<T, E> ",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServiceEventsService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-service-events-service/index.html",
    "searchKeys": [
      "HostServiceEventsService",
      "open class HostServiceEventsService : BrownieEventsRecorder<T, E> ",
      "com.tecknobit.brownie.services.hostservices.services.HostServiceEventsService"
    ]
  },
  {
    "name": "open class HostServicesController : DefaultBrownieController",
    "description": "com.tecknobit.brownie.services.hostservices.controller.HostServicesController",
    "location": "backend/com.tecknobit.brownie.services.hostservices.controller/-host-services-controller/index.html",
    "searchKeys": [
      "HostServicesController",
      "open class HostServicesController : DefaultBrownieController",
      "com.tecknobit.brownie.services.hostservices.controller.HostServicesController"
    ]
  },
  {
    "name": "open class HostServicesService : BrownieEventsCollector",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServicesService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-services-service/index.html",
    "searchKeys": [
      "HostServicesService",
      "open class HostServicesService : BrownieEventsCollector",
      "com.tecknobit.brownie.services.hostservices.services.HostServicesService"
    ]
  },
  {
    "name": "open class HostsController : DefaultBrownieController",
    "description": "com.tecknobit.brownie.services.hosts.controller.HostsController",
    "location": "backend/com.tecknobit.brownie.services.hosts.controller/-hosts-controller/index.html",
    "searchKeys": [
      "HostsController",
      "open class HostsController : DefaultBrownieController",
      "com.tecknobit.brownie.services.hosts.controller.HostsController"
    ]
  },
  {
    "name": "open class HostsService",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/index.html",
    "searchKeys": [
      "HostsService",
      "open class HostsService",
      "com.tecknobit.brownie.services.hosts.services.HostsService"
    ]
  },
  {
    "name": "open class Launcher",
    "description": "com.tecknobit.brownie.Launcher",
    "location": "backend/com.tecknobit.brownie/-launcher/index.html",
    "searchKeys": [
      "Launcher",
      "open class Launcher",
      "com.tecknobit.brownie.Launcher"
    ]
  },
  {
    "name": "open class LocalEventsHandler",
    "description": "com.tecknobit.brownie.helpers.LocalEventsHandler",
    "location": "backend/com.tecknobit.brownie.helpers/-local-events-handler/index.html",
    "searchKeys": [
      "LocalEventsHandler",
      "open class LocalEventsHandler",
      "com.tecknobit.brownie.helpers.LocalEventsHandler"
    ]
  },
  {
    "name": "open class LocalShellCommandsExecutor : ShellCommandsExecutor",
    "description": "com.tecknobit.brownie.helpers.shell.LocalShellCommandsExecutor",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-local-shell-commands-executor/index.html",
    "searchKeys": [
      "LocalShellCommandsExecutor",
      "open class LocalShellCommandsExecutor : ShellCommandsExecutor",
      "com.tecknobit.brownie.helpers.shell.LocalShellCommandsExecutor"
    ]
  },
  {
    "name": "open class RemoteHostWaiter",
    "description": "com.tecknobit.brownie.helpers.RemoteHostWaiter",
    "location": "backend/com.tecknobit.brownie.helpers/-remote-host-waiter/index.html",
    "searchKeys": [
      "RemoteHostWaiter",
      "open class RemoteHostWaiter",
      "com.tecknobit.brownie.helpers.RemoteHostWaiter"
    ]
  },
  {
    "name": "open class RemoteShellCommandsExecutor : ShellCommandsExecutor",
    "description": "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-remote-shell-commands-executor/index.html",
    "searchKeys": [
      "RemoteShellCommandsExecutor",
      "open class RemoteShellCommandsExecutor : ShellCommandsExecutor",
      "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor"
    ]
  },
  {
    "name": "open class ServiceConfiguration : EquinoxItem",
    "description": "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.ServiceConfiguration",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-brownie-host-service/-service-configuration/index.html",
    "searchKeys": [
      "ServiceConfiguration",
      "open class ServiceConfiguration : EquinoxItem",
      "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.ServiceConfiguration"
    ]
  },
  {
    "name": "open class ServiceEvent : BrownieEvent",
    "description": "com.tecknobit.brownie.services.hostservices.entities.ServiceEvent",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-service-event/index.html",
    "searchKeys": [
      "ServiceEvent",
      "open class ServiceEvent : BrownieEvent",
      "com.tecknobit.brownie.services.hostservices.entities.ServiceEvent"
    ]
  },
  {
    "name": "open class ServicesConfigurationsService",
    "description": "com.tecknobit.brownie.services.hostservices.services.ServicesConfigurationsService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-services-configurations-service/index.html",
    "searchKeys": [
      "ServicesConfigurationsService",
      "open class ServicesConfigurationsService",
      "com.tecknobit.brownie.services.hostservices.services.ServicesConfigurationsService"
    ]
  },
  {
    "name": "open class StorageUsage : BrownieHostStat",
    "description": "com.tecknobit.brownie.services.hosts.dtos.usages.StorageUsage",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos.usages/-storage-usage/index.html",
    "searchKeys": [
      "StorageUsage",
      "open class StorageUsage : BrownieHostStat",
      "com.tecknobit.brownie.services.hosts.dtos.usages.StorageUsage"
    ]
  },
  {
    "name": "open class WakeOnLanExecutor",
    "description": "com.tecknobit.brownie.services.hosts.commands.WakeOnLanExecutor",
    "location": "backend/com.tecknobit.brownie.services.hosts.commands/-wake-on-lan-executor/index.html",
    "searchKeys": [
      "WakeOnLanExecutor",
      "open class WakeOnLanExecutor",
      "com.tecknobit.brownie.services.hosts.commands.WakeOnLanExecutor"
    ]
  },
  {
    "name": "open fun <T> connectToSession(payload: Map<String, String>): T",
    "description": "com.tecknobit.brownie.services.session.controller.BrownieSessionController.connectToSession",
    "location": "backend/com.tecknobit.brownie.services.session.controller/-brownie-session-controller/connect-to-session.html",
    "searchKeys": [
      "connectToSession",
      "open fun <T> connectToSession(payload: Map<String, String>): T",
      "com.tecknobit.brownie.services.session.controller.BrownieSessionController.connectToSession"
    ]
  },
  {
    "name": "open fun <T> createSession(payload: Map<String, String>): T",
    "description": "com.tecknobit.brownie.services.session.controller.BrownieSessionController.createSession",
    "location": "backend/com.tecknobit.brownie.services.session.controller/-brownie-session-controller/create-session.html",
    "searchKeys": [
      "createSession",
      "open fun <T> createSession(payload: Map<String, String>): T",
      "com.tecknobit.brownie.services.session.controller.BrownieSessionController.createSession"
    ]
  },
  {
    "name": "open fun <T> getHost(sessionId: String, hostId: String, language: String): T",
    "description": "com.tecknobit.brownie.services.hosts.controller.HostsController.getHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.controller/-hosts-controller/get-host.html",
    "searchKeys": [
      "getHost",
      "open fun <T> getHost(sessionId: String, hostId: String, language: String): T",
      "com.tecknobit.brownie.services.hosts.controller.HostsController.getHost"
    ]
  },
  {
    "name": "open fun <T> getHostOverview(sessionId: String, hostId: String, language: String): T",
    "description": "com.tecknobit.brownie.services.hosts.controller.HostsController.getHostOverview",
    "location": "backend/com.tecknobit.brownie.services.hosts.controller/-hosts-controller/get-host-overview.html",
    "searchKeys": [
      "getHostOverview",
      "open fun <T> getHostOverview(sessionId: String, hostId: String, language: String): T",
      "com.tecknobit.brownie.services.hosts.controller.HostsController.getHostOverview"
    ]
  },
  {
    "name": "open fun <T> getHosts(sessionId: String, keywords: Set<String>, statuses: List<String>, language: String, page: Int, pageSize: Int): T",
    "description": "com.tecknobit.brownie.services.hosts.controller.HostsController.getHosts",
    "location": "backend/com.tecknobit.brownie.services.hosts.controller/-hosts-controller/get-hosts.html",
    "searchKeys": [
      "getHosts",
      "open fun <T> getHosts(sessionId: String, keywords: Set<String>, statuses: List<String>, language: String, page: Int, pageSize: Int): T",
      "com.tecknobit.brownie.services.hosts.controller.HostsController.getHosts"
    ]
  },
  {
    "name": "open fun <T> getHostsStatus(sessionId: String, hosts: List<String>, language: String): T",
    "description": "com.tecknobit.brownie.services.hosts.controller.HostsController.getHostsStatus",
    "location": "backend/com.tecknobit.brownie.services.hosts.controller/-hosts-controller/get-hosts-status.html",
    "searchKeys": [
      "getHostsStatus",
      "open fun <T> getHostsStatus(sessionId: String, hosts: List<String>, language: String): T",
      "com.tecknobit.brownie.services.hosts.controller.HostsController.getHostsStatus"
    ]
  },
  {
    "name": "open fun <T> getService(sessionId: String, hostId: String, serviceId: String, language: String): T",
    "description": "com.tecknobit.brownie.services.hostservices.controller.HostServicesController.getService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.controller/-host-services-controller/get-service.html",
    "searchKeys": [
      "getService",
      "open fun <T> getService(sessionId: String, hostId: String, serviceId: String, language: String): T",
      "com.tecknobit.brownie.services.hostservices.controller.HostServicesController.getService"
    ]
  },
  {
    "name": "open fun <T> getServices(sessionId: String, hostId: String, keywords: Set<String>, statuses: List<String>, language: String, page: Int, pageSize: Int): T",
    "description": "com.tecknobit.brownie.services.hostservices.controller.HostServicesController.getServices",
    "location": "backend/com.tecknobit.brownie.services.hostservices.controller/-host-services-controller/get-services.html",
    "searchKeys": [
      "getServices",
      "open fun <T> getServices(sessionId: String, hostId: String, keywords: Set<String>, statuses: List<String>, language: String, page: Int, pageSize: Int): T",
      "com.tecknobit.brownie.services.hostservices.controller.HostServicesController.getServices"
    ]
  },
  {
    "name": "open fun <T> getServicesStatus(sessionId: String, hostId: String, services: List<String>, language: String): T",
    "description": "com.tecknobit.brownie.services.hostservices.controller.HostServicesController.getServicesStatus",
    "location": "backend/com.tecknobit.brownie.services.hostservices.controller/-host-services-controller/get-services-status.html",
    "searchKeys": [
      "getServicesStatus",
      "open fun <T> getServicesStatus(sessionId: String, hostId: String, services: List<String>, language: String): T",
      "com.tecknobit.brownie.services.hostservices.controller.HostServicesController.getServicesStatus"
    ]
  },
  {
    "name": "open fun addService(host: BrownieHost, serviceName: String, hPayload: JsonHelper)",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.addService",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/add-service.html",
    "searchKeys": [
      "addService",
      "open fun addService(host: BrownieHost, serviceName: String, hPayload: JsonHelper)",
      "com.tecknobit.brownie.services.hosts.services.HostsService.addService"
    ]
  },
  {
    "name": "open fun addService(sessionId: String, hostId: String, language: String, payload: Map<String, Any>): String",
    "description": "com.tecknobit.brownie.services.hostservices.controller.HostServicesController.addService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.controller/-host-services-controller/add-service.html",
    "searchKeys": [
      "addService",
      "open fun addService(sessionId: String, hostId: String, language: String, payload: Map<String, Any>): String",
      "com.tecknobit.brownie.services.hostservices.controller.HostServicesController.addService"
    ]
  },
  {
    "name": "open fun autoRunAfterHostReboot(): Boolean",
    "description": "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.ServiceConfiguration.autoRunAfterHostReboot",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-brownie-host-service/-service-configuration/auto-run-after-host-reboot.html",
    "searchKeys": [
      "autoRunAfterHostReboot",
      "open fun autoRunAfterHostReboot(): Boolean",
      "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.ServiceConfiguration.autoRunAfterHostReboot"
    ]
  },
  {
    "name": "open fun connectToSession(joinCode: String, password: String): BrownieSession",
    "description": "com.tecknobit.brownie.services.session.service.BrownieSessionsService.connectToSession",
    "location": "backend/com.tecknobit.brownie.services.session.service/-brownie-sessions-service/connect-to-session.html",
    "searchKeys": [
      "connectToSession",
      "open fun connectToSession(joinCode: String, password: String): BrownieSession",
      "com.tecknobit.brownie.services.session.service.BrownieSessionsService.connectToSession"
    ]
  },
  {
    "name": "open fun corsFilter(): FilterRegistrationBean",
    "description": "com.tecknobit.brownie.configuration.CORSAdvice.corsFilter",
    "location": "backend/com.tecknobit.brownie.configuration/-c-o-r-s-advice/cors-filter.html",
    "searchKeys": [
      "corsFilter",
      "open fun corsFilter(): FilterRegistrationBean",
      "com.tecknobit.brownie.configuration.CORSAdvice.corsFilter"
    ]
  },
  {
    "name": "open fun createIndexes()",
    "description": "com.tecknobit.brownie.configuration.BrownieIndexesCreator.createIndexes",
    "location": "backend/com.tecknobit.brownie.configuration/-brownie-indexes-creator/create-indexes.html",
    "searchKeys": [
      "createIndexes",
      "open fun createIndexes()",
      "com.tecknobit.brownie.configuration.BrownieIndexesCreator.createIndexes"
    ]
  },
  {
    "name": "open fun createSession(sessionId: String, joinCode: String, password: String): BrownieSession",
    "description": "com.tecknobit.brownie.services.session.service.BrownieSessionsService.createSession",
    "location": "backend/com.tecknobit.brownie.services.session.service/-brownie-sessions-service/create-session.html",
    "searchKeys": [
      "createSession",
      "open fun createSession(sessionId: String, joinCode: String, password: String): BrownieSession",
      "com.tecknobit.brownie.services.session.service.BrownieSessionsService.createSession"
    ]
  },
  {
    "name": "open fun deleteSession(sessionId: String)",
    "description": "com.tecknobit.brownie.services.session.service.BrownieSessionsService.deleteSession",
    "location": "backend/com.tecknobit.brownie.services.session.service/-brownie-sessions-service/delete-session.html",
    "searchKeys": [
      "deleteSession",
      "open fun deleteSession(sessionId: String)",
      "com.tecknobit.brownie.services.session.service.BrownieSessionsService.deleteSession"
    ]
  },
  {
    "name": "open fun deleteSession(sessionId: String, language: String, payload: Map<String, String>): String",
    "description": "com.tecknobit.brownie.services.session.controller.BrownieSessionController.deleteSession",
    "location": "backend/com.tecknobit.brownie.services.session.controller/-brownie-session-controller/delete-session.html",
    "searchKeys": [
      "deleteSession",
      "open fun deleteSession(sessionId: String, language: String, payload: Map<String, String>): String",
      "com.tecknobit.brownie.services.session.controller.BrownieSessionController.deleteSession"
    ]
  },
  {
    "name": "open fun detectStoppedServices(host: BrownieHost): Collection<Long>",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.detectStoppedServices",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/detect-stopped-services.html",
    "searchKeys": [
      "detectStoppedServices",
      "open fun detectStoppedServices(host: BrownieHost): Collection<Long>",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.detectStoppedServices"
    ]
  },
  {
    "name": "open fun editConfiguration(serviceId: String, programArguments: String, purgeNohupOutAfterReboot: Boolean, autoRunAfterHostReboot: Boolean)",
    "description": "com.tecknobit.brownie.services.hostservices.services.ServicesConfigurationsService.editConfiguration",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-services-configurations-service/edit-configuration.html",
    "searchKeys": [
      "editConfiguration",
      "open fun editConfiguration(serviceId: String, programArguments: String, purgeNohupOutAfterReboot: Boolean, autoRunAfterHostReboot: Boolean)",
      "com.tecknobit.brownie.services.hostservices.services.ServicesConfigurationsService.editConfiguration"
    ]
  },
  {
    "name": "open fun editHost(hostId: String, hostAddress: String, hostName: String, sshUser: String, sshPassword: String)",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.editHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/edit-host.html",
    "searchKeys": [
      "editHost",
      "open fun editHost(hostId: String, hostAddress: String, hostName: String, sshUser: String, sshPassword: String)",
      "com.tecknobit.brownie.services.hosts.services.HostsService.editHost"
    ]
  },
  {
    "name": "open fun editHost(sessionId: String, hostId: String, language: String, payload: Map<String, Any>): String",
    "description": "com.tecknobit.brownie.services.hosts.controller.HostsController.editHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.controller/-hosts-controller/edit-host.html",
    "searchKeys": [
      "editHost",
      "open fun editHost(sessionId: String, hostId: String, language: String, payload: Map<String, Any>): String",
      "com.tecknobit.brownie.services.hosts.controller.HostsController.editHost"
    ]
  },
  {
    "name": "open fun editService(host: BrownieHost, serviceId: String, serviceName: String, hPayload: JsonHelper)",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.editService",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/edit-service.html",
    "searchKeys": [
      "editService",
      "open fun editService(host: BrownieHost, serviceId: String, serviceName: String, hPayload: JsonHelper)",
      "com.tecknobit.brownie.services.hosts.services.HostsService.editService"
    ]
  },
  {
    "name": "open fun editService(serviceId: String, serviceName: String, servicePath: String, programArguments: String, purgeNohupOutAfterReboot: Boolean, autoRunAfterHostReboot: Boolean)",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServicesService.editService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-services-service/edit-service.html",
    "searchKeys": [
      "editService",
      "open fun editService(serviceId: String, serviceName: String, servicePath: String, programArguments: String, purgeNohupOutAfterReboot: Boolean, autoRunAfterHostReboot: Boolean)",
      "com.tecknobit.brownie.services.hostservices.services.HostServicesService.editService"
    ]
  },
  {
    "name": "open fun editService(sessionId: String, hostId: String, serviceId: String, language: String, payload: Map<String, Any>): String",
    "description": "com.tecknobit.brownie.services.hostservices.controller.HostServicesController.editService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.controller/-host-services-controller/edit-service.html",
    "searchKeys": [
      "editService",
      "open fun editService(sessionId: String, hostId: String, serviceId: String, language: String, payload: Map<String, Any>): String",
      "com.tecknobit.brownie.services.hostservices.controller.HostServicesController.editService"
    ]
  },
  {
    "name": "open fun execWoL(host: BrownieHost)",
    "description": "com.tecknobit.brownie.services.hosts.commands.WakeOnLanExecutor.execWoL",
    "location": "backend/com.tecknobit.brownie.services.hosts.commands/-wake-on-lan-executor/exec-wo-l.html",
    "searchKeys": [
      "execWoL",
      "open fun execWoL(host: BrownieHost)",
      "com.tecknobit.brownie.services.hosts.commands.WakeOnLanExecutor.execWoL"
    ]
  },
  {
    "name": "open fun executeLocalEventsScan()",
    "description": "com.tecknobit.brownie.helpers.LocalEventsHandler.executeLocalEventsScan",
    "location": "backend/com.tecknobit.brownie.helpers/-local-events-handler/execute-local-events-scan.html",
    "searchKeys": [
      "executeLocalEventsScan",
      "open fun executeLocalEventsScan()",
      "com.tecknobit.brownie.helpers.LocalEventsHandler.executeLocalEventsScan"
    ]
  },
  {
    "name": "open fun findServicePath(name: String): String",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.findServicePath",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/find-service-path.html",
    "searchKeys": [
      "findServicePath",
      "open fun findServicePath(name: String): String",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.findServicePath"
    ]
  },
  {
    "name": "open fun getBrownieHost(sessionId: String, hostId: String): BrownieHost",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.getBrownieHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/get-brownie-host.html",
    "searchKeys": [
      "getBrownieHost",
      "open fun getBrownieHost(sessionId: String, hostId: String): BrownieHost",
      "com.tecknobit.brownie.services.hosts.services.HostsService.getBrownieHost"
    ]
  },
  {
    "name": "open fun getBrownieSession(sessionId: String): BrownieSession",
    "description": "com.tecknobit.brownie.services.session.service.BrownieSessionsService.getBrownieSession",
    "location": "backend/com.tecknobit.brownie.services.session.service/-brownie-sessions-service/get-brownie-session.html",
    "searchKeys": [
      "getBrownieSession",
      "open fun getBrownieSession(sessionId: String): BrownieSession",
      "com.tecknobit.brownie.services.session.service.BrownieSessionsService.getBrownieSession"
    ]
  },
  {
    "name": "open fun getBrownieSession(sessionId: String, password: String): BrownieSession",
    "description": "com.tecknobit.brownie.services.session.service.BrownieSessionsService.getBrownieSession",
    "location": "backend/com.tecknobit.brownie.services.session.service/-brownie-sessions-service/get-brownie-session.html",
    "searchKeys": [
      "getBrownieSession",
      "open fun getBrownieSession(sessionId: String, password: String): BrownieSession",
      "com.tecknobit.brownie.services.session.service.BrownieSessionsService.getBrownieSession"
    ]
  },
  {
    "name": "open fun getCurrentHostStats(): Array<String>",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.getCurrentHostStats",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/get-current-host-stats.html",
    "searchKeys": [
      "getCurrentHostStats",
      "open fun getCurrentHostStats(): Array<String>",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.getCurrentHostStats"
    ]
  },
  {
    "name": "open fun getEventDate(): Long",
    "description": "com.tecknobit.brownie.services.shared.entities.BrownieEvent.getEventDate",
    "location": "backend/com.tecknobit.brownie.services.shared.entities/-brownie-event/get-event-date.html",
    "searchKeys": [
      "getEventDate",
      "open fun getEventDate(): Long",
      "com.tecknobit.brownie.services.shared.entities.BrownieEvent.getEventDate"
    ]
  },
  {
    "name": "open fun getExtra(): Any",
    "description": "com.tecknobit.brownie.services.shared.entities.BrownieEvent.getExtra",
    "location": "backend/com.tecknobit.brownie.services.shared.entities/-brownie-event/get-extra.html",
    "searchKeys": [
      "getExtra",
      "open fun getExtra(): Any",
      "com.tecknobit.brownie.services.shared.entities.BrownieEvent.getExtra"
    ]
  },
  {
    "name": "open fun getHostOverview(host: BrownieHost): BrownieHostOverview",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.getHostOverview",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/get-host-overview.html",
    "searchKeys": [
      "getHostOverview",
      "open fun getHostOverview(host: BrownieHost): BrownieHostOverview",
      "com.tecknobit.brownie.services.hosts.services.HostsService.getHostOverview"
    ]
  },
  {
    "name": "open fun getHosts(sessionId: String, keywords: Set<String>, statuses: List<String>, page: Int, pageSize: Int): PaginatedResponse<BrownieHost>",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.getHosts",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/get-hosts.html",
    "searchKeys": [
      "getHosts",
      "open fun getHosts(sessionId: String, keywords: Set<String>, statuses: List<String>, page: Int, pageSize: Int): PaginatedResponse<BrownieHost>",
      "com.tecknobit.brownie.services.hosts.services.HostsService.getHosts"
    ]
  },
  {
    "name": "open fun getHostsStatus(hosts: List<String>): List<CurrentHostStatus>",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.getHostsStatus",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/get-hosts-status.html",
    "searchKeys": [
      "getHostsStatus",
      "open fun getHostsStatus(hosts: List<String>): List<CurrentHostStatus>",
      "com.tecknobit.brownie.services.hosts.services.HostsService.getHostsStatus"
    ]
  },
  {
    "name": "open fun getInstance(): LocalEventsHandler",
    "description": "com.tecknobit.brownie.helpers.LocalEventsHandler.getInstance",
    "location": "backend/com.tecknobit.brownie.helpers/-local-events-handler/get-instance.html",
    "searchKeys": [
      "getInstance",
      "open fun getInstance(): LocalEventsHandler",
      "com.tecknobit.brownie.helpers.LocalEventsHandler.getInstance"
    ]
  },
  {
    "name": "open fun getInstance(host: BrownieHost): ShellCommandsExecutor",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.getInstance",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/get-instance.html",
    "searchKeys": [
      "getInstance",
      "open fun getInstance(host: BrownieHost): ShellCommandsExecutor",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.getInstance"
    ]
  },
  {
    "name": "open fun getNetworkInterfaceDetails(): Pair<String, String>",
    "description": "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.getNetworkInterfaceDetails",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-remote-shell-commands-executor/get-network-interface-details.html",
    "searchKeys": [
      "getNetworkInterfaceDetails",
      "open fun getNetworkInterfaceDetails(): Pair<String, String>",
      "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.getNetworkInterfaceDetails"
    ]
  },
  {
    "name": "open fun getService(serviceId: String): BrownieHostService",
    "description": "com.tecknobit.brownie.services.hosts.entities.BrownieHost.getService",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-brownie-host/get-service.html",
    "searchKeys": [
      "getService",
      "open fun getService(serviceId: String): BrownieHostService",
      "com.tecknobit.brownie.services.hosts.entities.BrownieHost.getService"
    ]
  },
  {
    "name": "open fun getServices(hostId: String, keywords: Set<String>, statuses: List<String>, page: Int, pageSize: Int): PaginatedResponse<BrownieHostService>",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServicesService.getServices",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-services-service/get-services.html",
    "searchKeys": [
      "getServices",
      "open fun getServices(hostId: String, keywords: Set<String>, statuses: List<String>, page: Int, pageSize: Int): PaginatedResponse<BrownieHostService>",
      "com.tecknobit.brownie.services.hostservices.services.HostServicesService.getServices"
    ]
  },
  {
    "name": "open fun getServicesStatus(services: List<String>): List<CurrentServiceStatus>",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServicesService.getServicesStatus",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-services-service/get-services-status.html",
    "searchKeys": [
      "getServicesStatus",
      "open fun getServicesStatus(services: List<String>): List<CurrentServiceStatus>",
      "com.tecknobit.brownie.services.hostservices.services.HostServicesService.getServicesStatus"
    ]
  },
  {
    "name": "open fun hasService(serviceId: String): Boolean",
    "description": "com.tecknobit.brownie.services.hosts.entities.BrownieHost.hasService",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-brownie-host/has-service.html",
    "searchKeys": [
      "hasService",
      "open fun hasService(serviceId: String): Boolean",
      "com.tecknobit.brownie.services.hosts.entities.BrownieHost.hasService"
    ]
  },
  {
    "name": "open fun hostBelongsToSession(sessionId: String, hostId: String): Boolean",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.hostBelongsToSession",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/host-belongs-to-session.html",
    "searchKeys": [
      "hostBelongsToSession",
      "open fun hostBelongsToSession(sessionId: String, hostId: String): Boolean",
      "com.tecknobit.brownie.services.hosts.services.HostsService.hostBelongsToSession"
    ]
  },
  {
    "name": "open fun hostSuspendedEventIsRegistered(): Boolean",
    "description": "com.tecknobit.brownie.helpers.LocalEventsHandler.hostSuspendedEventIsRegistered",
    "location": "backend/com.tecknobit.brownie.helpers/-local-events-handler/host-suspended-event-is-registered.html",
    "searchKeys": [
      "hostSuspendedEventIsRegistered",
      "open fun hostSuspendedEventIsRegistered(): Boolean",
      "com.tecknobit.brownie.helpers.LocalEventsHandler.hostSuspendedEventIsRegistered"
    ]
  },
  {
    "name": "open fun isOffline(): Boolean",
    "description": "com.tecknobit.brownie.services.hosts.entities.BrownieHost.isOffline",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-brownie-host/is-offline.html",
    "searchKeys": [
      "isOffline",
      "open fun isOffline(): Boolean",
      "com.tecknobit.brownie.services.hosts.entities.BrownieHost.isOffline"
    ]
  },
  {
    "name": "open fun isOnline(): Boolean",
    "description": "com.tecknobit.brownie.services.hosts.entities.BrownieHost.isOnline",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-brownie-host/is-online.html",
    "searchKeys": [
      "isOnline",
      "open fun isOnline(): Boolean",
      "com.tecknobit.brownie.services.hosts.entities.BrownieHost.isOnline"
    ]
  },
  {
    "name": "open fun isRemoteHost(): Boolean",
    "description": "com.tecknobit.brownie.services.hosts.entities.BrownieHost.isRemoteHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-brownie-host/is-remote-host.html",
    "searchKeys": [
      "isRemoteHost",
      "open fun isRemoteHost(): Boolean",
      "com.tecknobit.brownie.services.hosts.entities.BrownieHost.isRemoteHost"
    ]
  },
  {
    "name": "open fun isRunning(): Boolean",
    "description": "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.isRunning",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-brownie-host-service/is-running.html",
    "searchKeys": [
      "isRunning",
      "open fun isRunning(): Boolean",
      "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.isRunning"
    ]
  },
  {
    "name": "open fun isStopped(): Boolean",
    "description": "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.isStopped",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-brownie-host-service/is-stopped.html",
    "searchKeys": [
      "isStopped",
      "open fun isStopped(): Boolean",
      "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.isStopped"
    ]
  },
  {
    "name": "open fun listRunningServiceNames(): List<String>",
    "description": "com.tecknobit.brownie.services.hosts.entities.BrownieHost.listRunningServiceNames",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-brownie-host/list-running-service-names.html",
    "searchKeys": [
      "listRunningServiceNames",
      "open fun listRunningServiceNames(): List<String>",
      "com.tecknobit.brownie.services.hosts.entities.BrownieHost.listRunningServiceNames"
    ]
  },
  {
    "name": "open fun listRunningServicePids(): HashSet<Long>",
    "description": "com.tecknobit.brownie.services.hosts.entities.BrownieHost.listRunningServicePids",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-brownie-host/list-running-service-pids.html",
    "searchKeys": [
      "listRunningServicePids",
      "open fun listRunningServicePids(): HashSet<Long>",
      "com.tecknobit.brownie.services.hosts.entities.BrownieHost.listRunningServicePids"
    ]
  },
  {
    "name": "open fun main(args: Array<String>)",
    "description": "com.tecknobit.brownie.Launcher.main",
    "location": "backend/com.tecknobit.brownie/-launcher/main.html",
    "searchKeys": [
      "main",
      "open fun main(args: Array<String>)",
      "com.tecknobit.brownie.Launcher.main"
    ]
  },
  {
    "name": "open fun onEventCollected(event: BrownieApplicationEvent)",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServicesService.onEventCollected",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-services-service/on-event-collected.html",
    "searchKeys": [
      "onEventCollected",
      "open fun onEventCollected(event: BrownieApplicationEvent)",
      "com.tecknobit.brownie.services.hostservices.services.HostServicesService.onEventCollected"
    ]
  },
  {
    "name": "open fun purgeNohupOutAfterReboot(): Boolean",
    "description": "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.ServiceConfiguration.purgeNohupOutAfterReboot",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-brownie-host-service/-service-configuration/purge-nohup-out-after-reboot.html",
    "searchKeys": [
      "purgeNohupOutAfterReboot",
      "open fun purgeNohupOutAfterReboot(): Boolean",
      "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.ServiceConfiguration.purgeNohupOutAfterReboot"
    ]
  },
  {
    "name": "open fun rebootHost(host: BrownieHost)",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.rebootHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/reboot-host.html",
    "searchKeys": [
      "rebootHost",
      "open fun rebootHost(host: BrownieHost)",
      "com.tecknobit.brownie.services.hosts.services.HostsService.rebootHost"
    ]
  },
  {
    "name": "open fun rebootHost(service: HostsService, host: BrownieHost)",
    "description": "com.tecknobit.brownie.helpers.shell.LocalShellCommandsExecutor.rebootHost",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-local-shell-commands-executor/reboot-host.html",
    "searchKeys": [
      "rebootHost",
      "open fun rebootHost(service: HostsService, host: BrownieHost)",
      "com.tecknobit.brownie.helpers.shell.LocalShellCommandsExecutor.rebootHost"
    ]
  },
  {
    "name": "open fun rebootHost(service: HostsService, host: BrownieHost)",
    "description": "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.rebootHost",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-remote-shell-commands-executor/reboot-host.html",
    "searchKeys": [
      "rebootHost",
      "open fun rebootHost(service: HostsService, host: BrownieHost)",
      "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.rebootHost"
    ]
  },
  {
    "name": "open fun rebootHost(sessionId: String, hostId: String, language: String): String",
    "description": "com.tecknobit.brownie.services.hosts.controller.HostsController.rebootHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.controller/-hosts-controller/reboot-host.html",
    "searchKeys": [
      "rebootHost",
      "open fun rebootHost(sessionId: String, hostId: String, language: String): String",
      "com.tecknobit.brownie.services.hosts.controller.HostsController.rebootHost"
    ]
  },
  {
    "name": "open fun rebootService(host: BrownieHost, service: BrownieHostService)",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServicesService.rebootService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-services-service/reboot-service.html",
    "searchKeys": [
      "rebootService",
      "open fun rebootService(host: BrownieHost, service: BrownieHostService)",
      "com.tecknobit.brownie.services.hostservices.services.HostServicesService.rebootService"
    ]
  },
  {
    "name": "open fun rebootService(service: BrownieHostService, onCommandExecuted: ShellCommandsExecutor.OnCommandExecuted)",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.rebootService",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/reboot-service.html",
    "searchKeys": [
      "rebootService",
      "open fun rebootService(service: BrownieHostService, onCommandExecuted: ShellCommandsExecutor.OnCommandExecuted)",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.rebootService"
    ]
  },
  {
    "name": "open fun rebootService(sessionId: String, hostId: String, serviceId: String, language: String): String",
    "description": "com.tecknobit.brownie.services.hostservices.controller.HostServicesController.rebootService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.controller/-host-services-controller/reboot-service.html",
    "searchKeys": [
      "rebootService",
      "open fun rebootService(sessionId: String, hostId: String, serviceId: String, language: String): String",
      "com.tecknobit.brownie.services.hostservices.controller.HostServicesController.rebootService"
    ]
  },
  {
    "name": "open fun registerHost(hostId: String, hostName: String, hostAddress: String, sshUser: String, sshPassword: String, sessionId: String)",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.registerHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/register-host.html",
    "searchKeys": [
      "registerHost",
      "open fun registerHost(hostId: String, hostName: String, hostAddress: String, sshUser: String, sshPassword: String, sessionId: String)",
      "com.tecknobit.brownie.services.hosts.services.HostsService.registerHost"
    ]
  },
  {
    "name": "open fun registerHost(sessionId: String, language: String, payload: Map<String, Any>): String",
    "description": "com.tecknobit.brownie.services.hosts.controller.HostsController.registerHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.controller/-hosts-controller/register-host.html",
    "searchKeys": [
      "registerHost",
      "open fun registerHost(sessionId: String, language: String, payload: Map<String, Any>): String",
      "com.tecknobit.brownie.services.hosts.controller.HostsController.registerHost"
    ]
  },
  {
    "name": "open fun registerHostRestartedEvent(hostId: String)",
    "description": "com.tecknobit.brownie.services.hosts.services.HostEventsService.registerHostRestartedEvent",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-host-events-service/register-host-restarted-event.html",
    "searchKeys": [
      "registerHostRestartedEvent",
      "open fun registerHostRestartedEvent(hostId: String)",
      "com.tecknobit.brownie.services.hosts.services.HostEventsService.registerHostRestartedEvent"
    ]
  },
  {
    "name": "open fun registerHostStatusChangedEvent(hostId: String, status: HostStatus)",
    "description": "com.tecknobit.brownie.services.hosts.services.HostEventsService.registerHostStatusChangedEvent",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-host-events-service/register-host-status-changed-event.html",
    "searchKeys": [
      "registerHostStatusChangedEvent",
      "open fun registerHostStatusChangedEvent(hostId: String, status: HostStatus)",
      "com.tecknobit.brownie.services.hosts.services.HostEventsService.registerHostStatusChangedEvent"
    ]
  },
  {
    "name": "open fun registerHostSuspendedEvent(host: BrownieHost)",
    "description": "com.tecknobit.brownie.helpers.LocalEventsHandler.registerHostSuspendedEvent",
    "location": "backend/com.tecknobit.brownie.helpers/-local-events-handler/register-host-suspended-event.html",
    "searchKeys": [
      "registerHostSuspendedEvent",
      "open fun registerHostSuspendedEvent(host: BrownieHost)",
      "com.tecknobit.brownie.helpers.LocalEventsHandler.registerHostSuspendedEvent"
    ]
  },
  {
    "name": "open fun registerServiceAddedEvent(hostId: String, serviceName: String)",
    "description": "com.tecknobit.brownie.services.hosts.services.HostEventsService.registerServiceAddedEvent",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-host-events-service/register-service-added-event.html",
    "searchKeys": [
      "registerServiceAddedEvent",
      "open fun registerServiceAddedEvent(hostId: String, serviceName: String)",
      "com.tecknobit.brownie.services.hosts.services.HostEventsService.registerServiceAddedEvent"
    ]
  },
  {
    "name": "open fun registerServiceRebooted(serviceId: String)",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServiceEventsService.registerServiceRebooted",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-service-events-service/register-service-rebooted.html",
    "searchKeys": [
      "registerServiceRebooted",
      "open fun registerServiceRebooted(serviceId: String)",
      "com.tecknobit.brownie.services.hostservices.services.HostServiceEventsService.registerServiceRebooted"
    ]
  },
  {
    "name": "open fun registerServiceRemovedEvent(hostId: String, serviceName: String, removeFromTheHost: Boolean)",
    "description": "com.tecknobit.brownie.services.hosts.services.HostEventsService.registerServiceRemovedEvent",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-host-events-service/register-service-removed-event.html",
    "searchKeys": [
      "registerServiceRemovedEvent",
      "open fun registerServiceRemovedEvent(hostId: String, serviceName: String, removeFromTheHost: Boolean)",
      "com.tecknobit.brownie.services.hosts.services.HostEventsService.registerServiceRemovedEvent"
    ]
  },
  {
    "name": "open fun registerServiceRestarted(serviceId: String, pid: Long)",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServiceEventsService.registerServiceRestarted",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-service-events-service/register-service-restarted.html",
    "searchKeys": [
      "registerServiceRestarted",
      "open fun registerServiceRestarted(serviceId: String, pid: Long)",
      "com.tecknobit.brownie.services.hostservices.services.HostServiceEventsService.registerServiceRestarted"
    ]
  },
  {
    "name": "open fun registerServiceStarted(serviceId: String, pid: Long)",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServiceEventsService.registerServiceStarted",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-service-events-service/register-service-started.html",
    "searchKeys": [
      "registerServiceStarted",
      "open fun registerServiceStarted(serviceId: String, pid: Long)",
      "com.tecknobit.brownie.services.hostservices.services.HostServiceEventsService.registerServiceStarted"
    ]
  },
  {
    "name": "open fun registerServiceStopped(serviceId: String)",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServiceEventsService.registerServiceStopped",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-service-events-service/register-service-stopped.html",
    "searchKeys": [
      "registerServiceStopped",
      "open fun registerServiceStopped(serviceId: String)",
      "com.tecknobit.brownie.services.hostservices.services.HostServiceEventsService.registerServiceStopped"
    ]
  },
  {
    "name": "open fun removeService(host: BrownieHost, service: BrownieHostService, removeFromTheHost: Boolean)",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServicesService.removeService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-services-service/remove-service.html",
    "searchKeys": [
      "removeService",
      "open fun removeService(host: BrownieHost, service: BrownieHostService, removeFromTheHost: Boolean)",
      "com.tecknobit.brownie.services.hostservices.services.HostServicesService.removeService"
    ]
  },
  {
    "name": "open fun removeService(serviceName: String, closeSession: Boolean): String",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.removeService",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/remove-service.html",
    "searchKeys": [
      "removeService",
      "open fun removeService(serviceName: String, closeSession: Boolean): String",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.removeService"
    ]
  },
  {
    "name": "open fun removeService(sessionId: String, hostId: String, serviceId: String, language: String, removeFromTheHost: Boolean): String",
    "description": "com.tecknobit.brownie.services.hostservices.controller.HostServicesController.removeService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.controller/-host-services-controller/remove-service.html",
    "searchKeys": [
      "removeService",
      "open fun removeService(sessionId: String, hostId: String, serviceId: String, language: String, removeFromTheHost: Boolean): String",
      "com.tecknobit.brownie.services.hostservices.controller.HostServicesController.removeService"
    ]
  },
  {
    "name": "open fun restartHost(host: BrownieHost)",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.restartHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/restart-host.html",
    "searchKeys": [
      "restartHost",
      "open fun restartHost(host: BrownieHost)",
      "com.tecknobit.brownie.services.hosts.services.HostsService.restartHost"
    ]
  },
  {
    "name": "open fun setOfflineStatus(host: BrownieHost)",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.setOfflineStatus",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/set-offline-status.html",
    "searchKeys": [
      "setOfflineStatus",
      "open fun setOfflineStatus(host: BrownieHost)",
      "com.tecknobit.brownie.services.hosts.services.HostsService.setOfflineStatus"
    ]
  },
  {
    "name": "open fun setOnlineStatus(host: BrownieHost)",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.setOnlineStatus",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/set-online-status.html",
    "searchKeys": [
      "setOnlineStatus",
      "open fun setOnlineStatus(host: BrownieHost)",
      "com.tecknobit.brownie.services.hosts.services.HostsService.setOnlineStatus"
    ]
  },
  {
    "name": "open fun setRebootingStatus(host: BrownieHost)",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.setRebootingStatus",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/set-rebooting-status.html",
    "searchKeys": [
      "setRebootingStatus",
      "open fun setRebootingStatus(host: BrownieHost)",
      "com.tecknobit.brownie.services.hosts.services.HostsService.setRebootingStatus"
    ]
  },
  {
    "name": "open fun setServiceAsStopped(serviceId: String)",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServicesService.setServiceAsStopped",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-services-service/set-service-as-stopped.html",
    "searchKeys": [
      "setServiceAsStopped",
      "open fun setServiceAsStopped(serviceId: String)",
      "com.tecknobit.brownie.services.hostservices.services.HostServicesService.setServiceAsStopped"
    ]
  },
  {
    "name": "open fun setServiceInRebooting(serviceId: String)",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServicesService.setServiceInRebooting",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-services-service/set-service-in-rebooting.html",
    "searchKeys": [
      "setServiceInRebooting",
      "open fun setServiceInRebooting(serviceId: String)",
      "com.tecknobit.brownie.services.hostservices.services.HostServicesService.setServiceInRebooting"
    ]
  },
  {
    "name": "open fun startHost(host: BrownieHost)",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.startHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/start-host.html",
    "searchKeys": [
      "startHost",
      "open fun startHost(host: BrownieHost)",
      "com.tecknobit.brownie.services.hosts.services.HostsService.startHost"
    ]
  },
  {
    "name": "open fun startHost(sessionId: String, hostId: String, language: String): String",
    "description": "com.tecknobit.brownie.services.hosts.controller.HostsController.startHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.controller/-hosts-controller/start-host.html",
    "searchKeys": [
      "startHost",
      "open fun startHost(sessionId: String, hostId: String, language: String): String",
      "com.tecknobit.brownie.services.hosts.controller.HostsController.startHost"
    ]
  },
  {
    "name": "open fun startService(host: BrownieHost, service: BrownieHostService)",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServicesService.startService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-services-service/start-service.html",
    "searchKeys": [
      "startService",
      "open fun startService(host: BrownieHost, service: BrownieHostService)",
      "com.tecknobit.brownie.services.hostservices.services.HostServicesService.startService"
    ]
  },
  {
    "name": "open fun startService(host: BrownieHost, service: BrownieHostService, hostRebooted: Boolean)",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServicesService.startService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-services-service/start-service.html",
    "searchKeys": [
      "startService",
      "open fun startService(host: BrownieHost, service: BrownieHostService, hostRebooted: Boolean)",
      "com.tecknobit.brownie.services.hostservices.services.HostServicesService.startService"
    ]
  },
  {
    "name": "open fun startService(service: BrownieHostService): Long",
    "description": "com.tecknobit.brownie.helpers.shell.LocalShellCommandsExecutor.startService",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-local-shell-commands-executor/start-service.html",
    "searchKeys": [
      "startService",
      "open fun startService(service: BrownieHostService): Long",
      "com.tecknobit.brownie.helpers.shell.LocalShellCommandsExecutor.startService"
    ]
  },
  {
    "name": "open fun startService(service: BrownieHostService): Long",
    "description": "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.startService",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-remote-shell-commands-executor/start-service.html",
    "searchKeys": [
      "startService",
      "open fun startService(service: BrownieHostService): Long",
      "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.startService"
    ]
  },
  {
    "name": "open fun startService(sessionId: String, hostId: String, serviceId: String, language: String): String",
    "description": "com.tecknobit.brownie.services.hostservices.controller.HostServicesController.startService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.controller/-host-services-controller/start-service.html",
    "searchKeys": [
      "startService",
      "open fun startService(sessionId: String, hostId: String, serviceId: String, language: String): String",
      "com.tecknobit.brownie.services.hostservices.controller.HostServicesController.startService"
    ]
  },
  {
    "name": "open fun stopHost(host: BrownieHost)",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.stopHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/stop-host.html",
    "searchKeys": [
      "stopHost",
      "open fun stopHost(host: BrownieHost)",
      "com.tecknobit.brownie.services.hosts.services.HostsService.stopHost"
    ]
  },
  {
    "name": "open fun stopHost(service: HostsService, host: BrownieHost)",
    "description": "com.tecknobit.brownie.helpers.shell.LocalShellCommandsExecutor.stopHost",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-local-shell-commands-executor/stop-host.html",
    "searchKeys": [
      "stopHost",
      "open fun stopHost(service: HostsService, host: BrownieHost)",
      "com.tecknobit.brownie.helpers.shell.LocalShellCommandsExecutor.stopHost"
    ]
  },
  {
    "name": "open fun stopHost(service: HostsService, host: BrownieHost)",
    "description": "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.stopHost",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-remote-shell-commands-executor/stop-host.html",
    "searchKeys": [
      "stopHost",
      "open fun stopHost(service: HostsService, host: BrownieHost)",
      "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.stopHost"
    ]
  },
  {
    "name": "open fun stopHost(sessionId: String, hostId: String, language: String): String",
    "description": "com.tecknobit.brownie.services.hosts.controller.HostsController.stopHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.controller/-hosts-controller/stop-host.html",
    "searchKeys": [
      "stopHost",
      "open fun stopHost(sessionId: String, hostId: String, language: String): String",
      "com.tecknobit.brownie.services.hosts.controller.HostsController.stopHost"
    ]
  },
  {
    "name": "open fun stopService(host: BrownieHost, service: BrownieHostService)",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServicesService.stopService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-services-service/stop-service.html",
    "searchKeys": [
      "stopService",
      "open fun stopService(host: BrownieHost, service: BrownieHostService)",
      "com.tecknobit.brownie.services.hostservices.services.HostServicesService.stopService"
    ]
  },
  {
    "name": "open fun stopService(service: BrownieHostService): String",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.stopService",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/stop-service.html",
    "searchKeys": [
      "stopService",
      "open fun stopService(service: BrownieHostService): String",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.stopService"
    ]
  },
  {
    "name": "open fun stopService(service: BrownieHostService, closeSession: Boolean): String",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.stopService",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/stop-service.html",
    "searchKeys": [
      "stopService",
      "open fun stopService(service: BrownieHostService, closeSession: Boolean): String",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.stopService"
    ]
  },
  {
    "name": "open fun stopService(sessionId: String, hostId: String, serviceId: String, language: String): String",
    "description": "com.tecknobit.brownie.services.hostservices.controller.HostServicesController.stopService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.controller/-host-services-controller/stop-service.html",
    "searchKeys": [
      "stopService",
      "open fun stopService(sessionId: String, hostId: String, serviceId: String, language: String): String",
      "com.tecknobit.brownie.services.hostservices.controller.HostServicesController.stopService"
    ]
  },
  {
    "name": "open fun storeConfiguration(serviceId: String, programArguments: String, purgeNohupOutAfterReboot: Boolean, autoRunAfterHostReboot: Boolean)",
    "description": "com.tecknobit.brownie.services.hostservices.services.ServicesConfigurationsService.storeConfiguration",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-services-configurations-service/store-configuration.html",
    "searchKeys": [
      "storeConfiguration",
      "open fun storeConfiguration(serviceId: String, programArguments: String, purgeNohupOutAfterReboot: Boolean, autoRunAfterHostReboot: Boolean)",
      "com.tecknobit.brownie.services.hostservices.services.ServicesConfigurationsService.storeConfiguration"
    ]
  },
  {
    "name": "open fun storeService(serviceName: String, servicePath: String, hostId: String, programArguments: String, purgeNohupOutAfterReboot: Boolean, autoRunAfterHostReboot: Boolean)",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServicesService.storeService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-services-service/store-service.html",
    "searchKeys": [
      "storeService",
      "open fun storeService(serviceName: String, servicePath: String, hostId: String, programArguments: String, purgeNohupOutAfterReboot: Boolean, autoRunAfterHostReboot: Boolean)",
      "com.tecknobit.brownie.services.hostservices.services.HostServicesService.storeService"
    ]
  },
  {
    "name": "open fun unregisterHost(hostId: String)",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.unregisterHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/unregister-host.html",
    "searchKeys": [
      "unregisterHost",
      "open fun unregisterHost(hostId: String)",
      "com.tecknobit.brownie.services.hosts.services.HostsService.unregisterHost"
    ]
  },
  {
    "name": "open fun unregisterHost(sessionId: String, hostId: String, language: String): String",
    "description": "com.tecknobit.brownie.services.hosts.controller.HostsController.unregisterHost",
    "location": "backend/com.tecknobit.brownie.services.hosts.controller/-hosts-controller/unregister-host.html",
    "searchKeys": [
      "unregisterHost",
      "open fun unregisterHost(sessionId: String, hostId: String, language: String): String",
      "com.tecknobit.brownie.services.hosts.controller.HostsController.unregisterHost"
    ]
  },
  {
    "name": "open fun unregisterHostSuspendedEvent()",
    "description": "com.tecknobit.brownie.helpers.LocalEventsHandler.unregisterHostSuspendedEvent",
    "location": "backend/com.tecknobit.brownie.helpers/-local-events-handler/unregister-host-suspended-event.html",
    "searchKeys": [
      "unregisterHostSuspendedEvent",
      "open fun unregisterHostSuspendedEvent()",
      "com.tecknobit.brownie.helpers.LocalEventsHandler.unregisterHostSuspendedEvent"
    ]
  },
  {
    "name": "open fun valueOf(name: String): BrownieApplicationEventType",
    "description": "com.tecknobit.brownie.events.BrownieApplicationEventType.valueOf",
    "location": "backend/com.tecknobit.brownie.events/-brownie-application-event-type/value-of.html",
    "searchKeys": [
      "valueOf",
      "open fun valueOf(name: String): BrownieApplicationEventType",
      "com.tecknobit.brownie.events.BrownieApplicationEventType.valueOf"
    ]
  },
  {
    "name": "open fun valueOf(name: String): LocalEventsHandler.LocalEvent",
    "description": "com.tecknobit.brownie.helpers.LocalEventsHandler.LocalEvent.valueOf",
    "location": "backend/com.tecknobit.brownie.helpers/-local-events-handler/-local-event/value-of.html",
    "searchKeys": [
      "valueOf",
      "open fun valueOf(name: String): LocalEventsHandler.LocalEvent",
      "com.tecknobit.brownie.helpers.LocalEventsHandler.LocalEvent.valueOf"
    ]
  },
  {
    "name": "open fun values(): Array<BrownieApplicationEventType>",
    "description": "com.tecknobit.brownie.events.BrownieApplicationEventType.values",
    "location": "backend/com.tecknobit.brownie.events/-brownie-application-event-type/values.html",
    "searchKeys": [
      "values",
      "open fun values(): Array<BrownieApplicationEventType>",
      "com.tecknobit.brownie.events.BrownieApplicationEventType.values"
    ]
  },
  {
    "name": "open fun values(): Array<LocalEventsHandler.LocalEvent>",
    "description": "com.tecknobit.brownie.helpers.LocalEventsHandler.LocalEvent.values",
    "location": "backend/com.tecknobit.brownie.helpers/-local-events-handler/-local-event/values.html",
    "searchKeys": [
      "values",
      "open fun values(): Array<LocalEventsHandler.LocalEvent>",
      "com.tecknobit.brownie.helpers.LocalEventsHandler.LocalEvent.values"
    ]
  },
  {
    "name": "open fun waitForHostRestart(host: BrownieHost, attempts: AtomicInteger, onHostRestart: RemoteHostWaiter.OnHostRestart)",
    "description": "com.tecknobit.brownie.helpers.RemoteHostWaiter.waitForHostRestart",
    "location": "backend/com.tecknobit.brownie.helpers/-remote-host-waiter/wait-for-host-restart.html",
    "searchKeys": [
      "waitForHostRestart",
      "open fun waitForHostRestart(host: BrownieHost, attempts: AtomicInteger, onHostRestart: RemoteHostWaiter.OnHostRestart)",
      "com.tecknobit.brownie.helpers.RemoteHostWaiter.waitForHostRestart"
    ]
  },
  {
    "name": "open var brownieServerProtector: ServerProtector",
    "description": "com.tecknobit.brownie.services.session.controller.BrownieSessionController.brownieServerProtector",
    "location": "backend/com.tecknobit.brownie.services.session.controller/-brownie-session-controller/brownie-server-protector.html",
    "searchKeys": [
      "brownieServerProtector",
      "open var brownieServerProtector: ServerProtector",
      "com.tecknobit.brownie.services.session.controller.BrownieSessionController.brownieServerProtector"
    ]
  },
  {
    "name": "private constructor(eventKey: String)",
    "description": "com.tecknobit.brownie.helpers.LocalEventsHandler.LocalEvent.LocalEvent",
    "location": "backend/com.tecknobit.brownie.helpers/-local-events-handler/-local-event/-local-event.html",
    "searchKeys": [
      "LocalEvent",
      "private constructor(eventKey: String)",
      "com.tecknobit.brownie.helpers.LocalEventsHandler.LocalEvent.LocalEvent"
    ]
  },
  {
    "name": "private open fun SSHCredentialsAreValid(sshUser: String, sshPassword: String): Boolean",
    "description": "com.tecknobit.brownie.services.hosts.controller.HostsController.SSHCredentialsAreValid",
    "location": "backend/com.tecknobit.brownie.services.hosts.controller/-hosts-controller/-s-s-h-credentials-are-valid.html",
    "searchKeys": [
      "SSHCredentialsAreValid",
      "private open fun SSHCredentialsAreValid(sshUser: String, sshPassword: String): Boolean",
      "com.tecknobit.brownie.services.hosts.controller.HostsController.SSHCredentialsAreValid"
    ]
  },
  {
    "name": "private open fun findServicePath(host: BrownieHost, serviceName: String): String",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.findServicePath",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/find-service-path.html",
    "searchKeys": [
      "findServicePath",
      "private open fun findServicePath(host: BrownieHost, serviceName: String): String",
      "com.tecknobit.brownie.services.hosts.services.HostsService.findServicePath"
    ]
  },
  {
    "name": "private open fun formatCommandResult(rawResult: InputStream): String",
    "description": "com.tecknobit.brownie.helpers.shell.LocalShellCommandsExecutor.formatCommandResult",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-local-shell-commands-executor/format-command-result.html",
    "searchKeys": [
      "formatCommandResult",
      "private open fun formatCommandResult(rawResult: InputStream): String",
      "com.tecknobit.brownie.helpers.shell.LocalShellCommandsExecutor.formatCommandResult"
    ]
  },
  {
    "name": "private open fun formatServicesMonitoringCommand(serviceNames: List<String>): String",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.formatServicesMonitoringCommand",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/format-services-monitoring-command.html",
    "searchKeys": [
      "formatServicesMonitoringCommand",
      "private open fun formatServicesMonitoringCommand(serviceNames: List<String>): String",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.formatServicesMonitoringCommand"
    ]
  },
  {
    "name": "private open fun getMacBytes(macStr: String): Array<Byte>",
    "description": "com.tecknobit.brownie.services.hosts.commands.WakeOnLanExecutor.getMacBytes",
    "location": "backend/com.tecknobit.brownie.services.hosts.commands/-wake-on-lan-executor/get-mac-bytes.html",
    "searchKeys": [
      "getMacBytes",
      "private open fun getMacBytes(macStr: String): Array<Byte>",
      "com.tecknobit.brownie.services.hosts.commands.WakeOnLanExecutor.getMacBytes"
    ]
  },
  {
    "name": "private open fun getNetworkInterfaceDetails(sshUser: String, sshPassword: String, hostAddress: String): Pair<String, String>",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.getNetworkInterfaceDetails",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/get-network-interface-details.html",
    "searchKeys": [
      "getNetworkInterfaceDetails",
      "private open fun getNetworkInterfaceDetails(sshUser: String, sshPassword: String, hostAddress: String): Pair<String, String>",
      "com.tecknobit.brownie.services.hosts.services.HostsService.getNetworkInterfaceDetails"
    ]
  },
  {
    "name": "private open fun handleHostStatus(hostId: String, status: HostStatus)",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.handleHostStatus",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/handle-host-status.html",
    "searchKeys": [
      "handleHostStatus",
      "private open fun handleHostStatus(hostId: String, status: HostStatus)",
      "com.tecknobit.brownie.services.hosts.services.HostsService.handleHostStatus"
    ]
  },
  {
    "name": "private open fun handleServicesOnStart(host: BrownieHost)",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.handleServicesOnStart",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/handle-services-on-start.html",
    "searchKeys": [
      "handleServicesOnStart",
      "private open fun handleServicesOnStart(host: BrownieHost)",
      "com.tecknobit.brownie.services.hosts.services.HostsService.handleServicesOnStart"
    ]
  },
  {
    "name": "private open fun hasLocalEventRegistered(event: LocalEventsHandler.LocalEvent): Boolean",
    "description": "com.tecknobit.brownie.helpers.LocalEventsHandler.hasLocalEventRegistered",
    "location": "backend/com.tecknobit.brownie.helpers/-local-events-handler/has-local-event-registered.html",
    "searchKeys": [
      "hasLocalEventRegistered",
      "private open fun hasLocalEventRegistered(event: LocalEventsHandler.LocalEvent): Boolean",
      "com.tecknobit.brownie.helpers.LocalEventsHandler.hasLocalEventRegistered"
    ]
  },
  {
    "name": "private open fun markServiceAsStopped(host: BrownieHost, servicePid: Long)",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServicesService.markServiceAsStopped",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-services-service/mark-service-as-stopped.html",
    "searchKeys": [
      "markServiceAsStopped",
      "private open fun markServiceAsStopped(host: BrownieHost, servicePid: Long)",
      "com.tecknobit.brownie.services.hostservices.services.HostServicesService.markServiceAsStopped"
    ]
  },
  {
    "name": "private open fun monitorAndSyncServiceStatuses()",
    "description": "com.tecknobit.brownie.services.session.service.BrownieSessionsService.monitorAndSyncServiceStatuses",
    "location": "backend/com.tecknobit.brownie.services.session.service/-brownie-sessions-service/monitor-and-sync-service-statuses.html",
    "searchKeys": [
      "monitorAndSyncServiceStatuses",
      "private open fun monitorAndSyncServiceStatuses()",
      "com.tecknobit.brownie.services.session.service.BrownieSessionsService.monitorAndSyncServiceStatuses"
    ]
  },
  {
    "name": "private open fun monitorServices(host: BrownieHost)",
    "description": "com.tecknobit.brownie.services.session.service.BrownieSessionsService.monitorServices",
    "location": "backend/com.tecknobit.brownie.services.session.service/-brownie-sessions-service/monitor-services.html",
    "searchKeys": [
      "monitorServices",
      "private open fun monitorServices(host: BrownieHost)",
      "com.tecknobit.brownie.services.session.service.BrownieSessionsService.monitorServices"
    ]
  },
  {
    "name": "private open fun registerLocalEvent(event: LocalEventsHandler.LocalEvent)",
    "description": "com.tecknobit.brownie.helpers.LocalEventsHandler.registerLocalEvent",
    "location": "backend/com.tecknobit.brownie.helpers/-local-events-handler/register-local-event.html",
    "searchKeys": [
      "registerLocalEvent",
      "private open fun registerLocalEvent(event: LocalEventsHandler.LocalEvent)",
      "com.tecknobit.brownie.helpers.LocalEventsHandler.registerLocalEvent"
    ]
  },
  {
    "name": "private open fun removeNohupOut(serviceName: String, servicePath: String)",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.removeNohupOut",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/remove-nohup-out.html",
    "searchKeys": [
      "removeNohupOut",
      "private open fun removeNohupOut(serviceName: String, servicePath: String)",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.removeNohupOut"
    ]
  },
  {
    "name": "private open fun retrieveStoppedServices(command: String, host: BrownieHost): Collection<Long>",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.retrieveStoppedServices",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/retrieve-stopped-services.html",
    "searchKeys": [
      "retrieveStoppedServices",
      "private open fun retrieveStoppedServices(command: String, host: BrownieHost): Collection<Long>",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.retrieveStoppedServices"
    ]
  },
  {
    "name": "private open fun shutdownServicesMonitor()",
    "description": "com.tecknobit.brownie.services.session.service.BrownieSessionsService.shutdownServicesMonitor",
    "location": "backend/com.tecknobit.brownie.services.session.service/-brownie-sessions-service/shutdown-services-monitor.html",
    "searchKeys": [
      "shutdownServicesMonitor",
      "private open fun shutdownServicesMonitor()",
      "com.tecknobit.brownie.services.session.service.BrownieSessionsService.shutdownServicesMonitor"
    ]
  },
  {
    "name": "private open fun syncServiceStatuses(host: BrownieHost, stoppedServices: Collection<Long>)",
    "description": "com.tecknobit.brownie.services.session.service.BrownieSessionsService.syncServiceStatuses",
    "location": "backend/com.tecknobit.brownie.services.session.service/-brownie-sessions-service/sync-service-statuses.html",
    "searchKeys": [
      "syncServiceStatuses",
      "private open fun syncServiceStatuses(host: BrownieHost, stoppedServices: Collection<Long>)",
      "com.tecknobit.brownie.services.session.service.BrownieSessionsService.syncServiceStatuses"
    ]
  },
  {
    "name": "private open fun unregisterLocalEvent(event: LocalEventsHandler.LocalEvent)",
    "description": "com.tecknobit.brownie.helpers.LocalEventsHandler.unregisterLocalEvent",
    "location": "backend/com.tecknobit.brownie.helpers/-local-events-handler/unregister-local-event.html",
    "searchKeys": [
      "unregisterLocalEvent",
      "private open fun unregisterLocalEvent(event: LocalEventsHandler.LocalEvent)",
      "com.tecknobit.brownie.helpers.LocalEventsHandler.unregisterLocalEvent"
    ]
  },
  {
    "name": "private open fun validateHostPayload(hostName: String, hostAddress: String): String",
    "description": "com.tecknobit.brownie.services.hosts.controller.HostsController.validateHostPayload",
    "location": "backend/com.tecknobit.brownie.services.hosts.controller/-hosts-controller/validate-host-payload.html",
    "searchKeys": [
      "validateHostPayload",
      "private open fun validateHostPayload(hostName: String, hostAddress: String): String",
      "com.tecknobit.brownie.services.hosts.controller.HostsController.validateHostPayload"
    ]
  },
  {
    "name": "private open var host: BrownieHost",
    "description": "com.tecknobit.brownie.services.hosts.entities.HostHistoryEvent.host",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-host-history-event/host.html",
    "searchKeys": [
      "host",
      "private open var host: BrownieHost",
      "com.tecknobit.brownie.services.hosts.entities.HostHistoryEvent.host"
    ]
  },
  {
    "name": "private open var host: BrownieHost",
    "description": "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.host",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-brownie-host-service/host.html",
    "searchKeys": [
      "host",
      "private open var host: BrownieHost",
      "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.host"
    ]
  },
  {
    "name": "private open var hostsService: HostsService",
    "description": "com.tecknobit.brownie.helpers.LocalEventsHandler.hostsService",
    "location": "backend/com.tecknobit.brownie.helpers/-local-events-handler/hosts-service.html",
    "searchKeys": [
      "hostsService",
      "private open var hostsService: HostsService",
      "com.tecknobit.brownie.helpers.LocalEventsHandler.hostsService"
    ]
  },
  {
    "name": "private open var service: BrownieHostService",
    "description": "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.ServiceConfiguration.service",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-brownie-host-service/-service-configuration/service.html",
    "searchKeys": [
      "service",
      "private open var service: BrownieHostService",
      "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.ServiceConfiguration.service"
    ]
  },
  {
    "name": "private open var service: BrownieHostService",
    "description": "com.tecknobit.brownie.services.hostservices.entities.ServiceEvent.service",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-service-event/service.html",
    "searchKeys": [
      "service",
      "private open var service: BrownieHostService",
      "com.tecknobit.brownie.services.hostservices.entities.ServiceEvent.service"
    ]
  },
  {
    "name": "private val BASH: String = \"bash\"",
    "description": "com.tecknobit.brownie.helpers.shell.LocalShellCommandsExecutor.BASH",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-local-shell-commands-executor/-b-a-s-h.html",
    "searchKeys": [
      "BASH",
      "private val BASH: String = \"bash\"",
      "com.tecknobit.brownie.helpers.shell.LocalShellCommandsExecutor.BASH"
    ]
  },
  {
    "name": "private val BASH_COMMAND_OPTION: String = \"-c\"",
    "description": "com.tecknobit.brownie.helpers.shell.LocalShellCommandsExecutor.BASH_COMMAND_OPTION",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-local-shell-commands-executor/-b-a-s-h_-c-o-m-m-a-n-d_-o-p-t-i-o-n.html",
    "searchKeys": [
      "BASH_COMMAND_OPTION",
      "private val BASH_COMMAND_OPTION: String = \"-c\"",
      "com.tecknobit.brownie.helpers.shell.LocalShellCommandsExecutor.BASH_COMMAND_OPTION"
    ]
  },
  {
    "name": "private val CONNECTION_ERROR_MESSAGE: String = \"Impossible reach the %s address, you need to restart manually as needed\"",
    "description": "com.tecknobit.brownie.helpers.RemoteHostWaiter.CONNECTION_ERROR_MESSAGE",
    "location": "backend/com.tecknobit.brownie.helpers/-remote-host-waiter/-c-o-n-n-e-c-t-i-o-n_-e-r-r-o-r_-m-e-s-s-a-g-e.html",
    "searchKeys": [
      "CONNECTION_ERROR_MESSAGE",
      "private val CONNECTION_ERROR_MESSAGE: String = \"Impossible reach the %s address, you need to restart manually as needed\"",
      "com.tecknobit.brownie.helpers.RemoteHostWaiter.CONNECTION_ERROR_MESSAGE"
    ]
  },
  {
    "name": "private val EXECUTE_BASH_SCRIPT: String = \"bash -s\"",
    "description": "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.EXECUTE_BASH_SCRIPT",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-remote-shell-commands-executor/-e-x-e-c-u-t-e_-b-a-s-h_-s-c-r-i-p-t.html",
    "searchKeys": [
      "EXECUTE_BASH_SCRIPT",
      "private val EXECUTE_BASH_SCRIPT: String = \"bash -s\"",
      "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.EXECUTE_BASH_SCRIPT"
    ]
  },
  {
    "name": "private val EXEC_CHANNEL_TYPE: String = \"exec\"",
    "description": "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.EXEC_CHANNEL_TYPE",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-remote-shell-commands-executor/-e-x-e-c_-c-h-a-n-n-e-l_-t-y-p-e.html",
    "searchKeys": [
      "EXEC_CHANNEL_TYPE",
      "private val EXEC_CHANNEL_TYPE: String = \"exec\"",
      "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.EXEC_CHANNEL_TYPE"
    ]
  },
  {
    "name": "private val GET_BROADCAST_IP_ADDRESS_COMMAND: String = \"ip -4 addr show | grep -E 'inet .*brd' | awk '{print $4}'\"",
    "description": "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.GET_BROADCAST_IP_ADDRESS_COMMAND",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-remote-shell-commands-executor/-g-e-t_-b-r-o-a-d-c-a-s-t_-i-p_-a-d-d-r-e-s-s_-c-o-m-m-a-n-d.html",
    "searchKeys": [
      "GET_BROADCAST_IP_ADDRESS_COMMAND",
      "private val GET_BROADCAST_IP_ADDRESS_COMMAND: String = \"ip -4 addr show | grep -E 'inet .*brd' | awk '{print $4}'\"",
      "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.GET_BROADCAST_IP_ADDRESS_COMMAND"
    ]
  },
  {
    "name": "private val GET_MAC_ADDRESS_COMMAND: String = \"ip link show | awk -F': ' '/^[0-9]+: e/{print $2}' | head -n 1 | xargs -I {} ip link show {} | awk '/ether/ {print $2}'\"",
    "description": "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.GET_MAC_ADDRESS_COMMAND",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-remote-shell-commands-executor/-g-e-t_-m-a-c_-a-d-d-r-e-s-s_-c-o-m-m-a-n-d.html",
    "searchKeys": [
      "GET_MAC_ADDRESS_COMMAND",
      "private val GET_MAC_ADDRESS_COMMAND: String = \"ip link show | awk -F': ' '/^[0-9]+: e/{print $2}' | head -n 1 | xargs -I {} ip link show {} | awk '/ether/ {print $2}'\"",
      "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.GET_MAC_ADDRESS_COMMAND"
    ]
  },
  {
    "name": "private val LOCAL_EVENTS_HANDLER: LocalEventsHandler",
    "description": "com.tecknobit.brownie.helpers.LocalEventsHandler.LOCAL_EVENTS_HANDLER",
    "location": "backend/com.tecknobit.brownie.helpers/-local-events-handler/-l-o-c-a-l_-e-v-e-n-t-s_-h-a-n-d-l-e-r.html",
    "searchKeys": [
      "LOCAL_EVENTS_HANDLER",
      "private val LOCAL_EVENTS_HANDLER: LocalEventsHandler",
      "com.tecknobit.brownie.helpers.LocalEventsHandler.LOCAL_EVENTS_HANDLER"
    ]
  },
  {
    "name": "private val LOGGER: Logger",
    "description": "com.tecknobit.brownie.services.session.service.BrownieSessionsService.LOGGER",
    "location": "backend/com.tecknobit.brownie.services.session.service/-brownie-sessions-service/-l-o-g-g-e-r.html",
    "searchKeys": [
      "LOGGER",
      "private val LOGGER: Logger",
      "com.tecknobit.brownie.services.session.service.BrownieSessionsService.LOGGER"
    ]
  },
  {
    "name": "private val MAX_RETRY_ATTEMPTS: Int = 10",
    "description": "com.tecknobit.brownie.helpers.RemoteHostWaiter.MAX_RETRY_ATTEMPTS",
    "location": "backend/com.tecknobit.brownie.helpers/-remote-host-waiter/-m-a-x_-r-e-t-r-y_-a-t-t-e-m-p-t-s.html",
    "searchKeys": [
      "MAX_RETRY_ATTEMPTS",
      "private val MAX_RETRY_ATTEMPTS: Int = 10",
      "com.tecknobit.brownie.helpers.RemoteHostWaiter.MAX_RETRY_ATTEMPTS"
    ]
  },
  {
    "name": "private val MAX_RETRY_TIMEOUT: Int",
    "description": "com.tecknobit.brownie.helpers.RemoteHostWaiter.MAX_RETRY_TIMEOUT",
    "location": "backend/com.tecknobit.brownie.helpers/-remote-host-waiter/-m-a-x_-r-e-t-r-y_-t-i-m-e-o-u-t.html",
    "searchKeys": [
      "MAX_RETRY_TIMEOUT",
      "private val MAX_RETRY_TIMEOUT: Int",
      "com.tecknobit.brownie.helpers.RemoteHostWaiter.MAX_RETRY_TIMEOUT"
    ]
  },
  {
    "name": "private val MONITOR_AND_SYNC_DELAY: Int = 5",
    "description": "com.tecknobit.brownie.services.session.service.BrownieSessionsService.MONITOR_AND_SYNC_DELAY",
    "location": "backend/com.tecknobit.brownie.services.session.service/-brownie-sessions-service/-m-o-n-i-t-o-r_-a-n-d_-s-y-n-c_-d-e-l-a-y.html",
    "searchKeys": [
      "MONITOR_AND_SYNC_DELAY",
      "private val MONITOR_AND_SYNC_DELAY: Int = 5",
      "com.tecknobit.brownie.services.session.service.BrownieSessionsService.MONITOR_AND_SYNC_DELAY"
    ]
  },
  {
    "name": "private val SERVICE_STARTER_SCRIPT: String = \"service-starter.sh\"",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.SERVICE_STARTER_SCRIPT",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/-s-e-r-v-i-c-e_-s-t-a-r-t-e-r_-s-c-r-i-p-t.html",
    "searchKeys": [
      "SERVICE_STARTER_SCRIPT",
      "private val SERVICE_STARTER_SCRIPT: String = \"service-starter.sh\"",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.SERVICE_STARTER_SCRIPT"
    ]
  },
  {
    "name": "private val STRICT_HOST_KEY_CHECKING_OPTION: String = \"StrictHostKeyChecking\"",
    "description": "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.STRICT_HOST_KEY_CHECKING_OPTION",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-remote-shell-commands-executor/-s-t-r-i-c-t_-h-o-s-t_-k-e-y_-c-h-e-c-k-i-n-g_-o-p-t-i-o-n.html",
    "searchKeys": [
      "STRICT_HOST_KEY_CHECKING_OPTION",
      "private val STRICT_HOST_KEY_CHECKING_OPTION: String = \"StrictHostKeyChecking\"",
      "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.STRICT_HOST_KEY_CHECKING_OPTION"
    ]
  },
  {
    "name": "private val configurationsService: ServicesConfigurationsService",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServicesService.configurationsService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-services-service/configurations-service.html",
    "searchKeys": [
      "configurationsService",
      "private val configurationsService: ServicesConfigurationsService",
      "com.tecknobit.brownie.services.hostservices.services.HostServicesService.configurationsService"
    ]
  },
  {
    "name": "private val eventKey: String",
    "description": "com.tecknobit.brownie.helpers.LocalEventsHandler.LocalEvent.eventKey",
    "location": "backend/com.tecknobit.brownie.helpers/-local-events-handler/-local-event/event-key.html",
    "searchKeys": [
      "eventKey",
      "private val eventKey: String",
      "com.tecknobit.brownie.helpers.LocalEventsHandler.LocalEvent.eventKey"
    ]
  },
  {
    "name": "private val eventsService: HostEventsService",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.eventsService",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/events-service.html",
    "searchKeys": [
      "eventsService",
      "private val eventsService: HostEventsService",
      "com.tecknobit.brownie.services.hosts.services.HostsService.eventsService"
    ]
  },
  {
    "name": "private val hostEventsService: HostEventsService",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServicesService.hostEventsService",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-services-service/host-events-service.html",
    "searchKeys": [
      "hostEventsService",
      "private val hostEventsService: HostEventsService",
      "com.tecknobit.brownie.services.hostservices.services.HostServicesService.hostEventsService"
    ]
  },
  {
    "name": "private val hostsRepository: HostsRepository",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.hostsRepository",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/hosts-repository.html",
    "searchKeys": [
      "hostsRepository",
      "private val hostsRepository: HostsRepository",
      "com.tecknobit.brownie.services.hosts.services.HostsService.hostsRepository"
    ]
  },
  {
    "name": "private val preferences: Preferences",
    "description": "com.tecknobit.brownie.helpers.LocalEventsHandler.preferences",
    "location": "backend/com.tecknobit.brownie.helpers/-local-events-handler/preferences.html",
    "searchKeys": [
      "preferences",
      "private val preferences: Preferences",
      "com.tecknobit.brownie.helpers.LocalEventsHandler.preferences"
    ]
  },
  {
    "name": "private val repository: BrownieEventsRepository<E>",
    "description": "com.tecknobit.brownie.services.shared.services.BrownieEventsRecorder.repository",
    "location": "backend/com.tecknobit.brownie.services.shared.services/-brownie-events-recorder/repository.html",
    "searchKeys": [
      "repository",
      "private val repository: BrownieEventsRepository<E>",
      "com.tecknobit.brownie.services.shared.services.BrownieEventsRecorder.repository"
    ]
  },
  {
    "name": "private val service: HostServicesService",
    "description": "com.tecknobit.brownie.services.hostservices.controller.HostServicesController.service",
    "location": "backend/com.tecknobit.brownie.services.hostservices.controller/-host-services-controller/service.html",
    "searchKeys": [
      "service",
      "private val service: HostServicesService",
      "com.tecknobit.brownie.services.hostservices.controller.HostServicesController.service"
    ]
  },
  {
    "name": "private val serviceEvents: HostServiceEventsService",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServicesService.serviceEvents",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-services-service/service-events.html",
    "searchKeys": [
      "serviceEvents",
      "private val serviceEvents: HostServiceEventsService",
      "com.tecknobit.brownie.services.hostservices.services.HostServicesService.serviceEvents"
    ]
  },
  {
    "name": "private val servicesConfigurationsRepository: ServicesConfigurationsRepository",
    "description": "com.tecknobit.brownie.services.hostservices.services.ServicesConfigurationsService.servicesConfigurationsRepository",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-services-configurations-service/services-configurations-repository.html",
    "searchKeys": [
      "servicesConfigurationsRepository",
      "private val servicesConfigurationsRepository: ServicesConfigurationsRepository",
      "com.tecknobit.brownie.services.hostservices.services.ServicesConfigurationsService.servicesConfigurationsRepository"
    ]
  },
  {
    "name": "private val servicesMonitor: ScheduledExecutorService",
    "description": "com.tecknobit.brownie.services.session.service.BrownieSessionsService.servicesMonitor",
    "location": "backend/com.tecknobit.brownie.services.session.service/-brownie-sessions-service/services-monitor.html",
    "searchKeys": [
      "servicesMonitor",
      "private val servicesMonitor: ScheduledExecutorService",
      "com.tecknobit.brownie.services.session.service.BrownieSessionsService.servicesMonitor"
    ]
  },
  {
    "name": "private val servicesRepository: HostServicesRepository",
    "description": "com.tecknobit.brownie.services.hostservices.services.HostServicesService.servicesRepository",
    "location": "backend/com.tecknobit.brownie.services.hostservices.services/-host-services-service/services-repository.html",
    "searchKeys": [
      "servicesRepository",
      "private val servicesRepository: HostServicesRepository",
      "com.tecknobit.brownie.services.hostservices.services.HostServicesService.servicesRepository"
    ]
  },
  {
    "name": "private val servicesService: HostServicesService",
    "description": "com.tecknobit.brownie.services.hosts.services.HostsService.servicesService",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-hosts-service/services-service.html",
    "searchKeys": [
      "servicesService",
      "private val servicesService: HostServicesService",
      "com.tecknobit.brownie.services.hosts.services.HostsService.servicesService"
    ]
  },
  {
    "name": "private val session: Session",
    "description": "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.session",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-remote-shell-commands-executor/session.html",
    "searchKeys": [
      "session",
      "private val session: Session",
      "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.session"
    ]
  },
  {
    "name": "private val sessionsRepository: BrownieSessionsRepository",
    "description": "com.tecknobit.brownie.services.session.service.BrownieSessionsService.sessionsRepository",
    "location": "backend/com.tecknobit.brownie.services.session.service/-brownie-sessions-service/sessions-repository.html",
    "searchKeys": [
      "sessionsRepository",
      "private val sessionsRepository: BrownieSessionsRepository",
      "com.tecknobit.brownie.services.session.service.BrownieSessionsService.sessionsRepository"
    ]
  },
  {
    "name": "protected abstract fun execBashCommand(command: String, onCommandExecuted: ShellCommandsExecutor.OnCommandExecuted, closeSession: Boolean): String",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.execBashCommand",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/exec-bash-command.html",
    "searchKeys": [
      "execBashCommand",
      "protected abstract fun execBashCommand(command: String, onCommandExecuted: ShellCommandsExecutor.OnCommandExecuted, closeSession: Boolean): String",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.execBashCommand"
    ]
  },
  {
    "name": "protected constructor(hostEventsRepository: HostEventsRepository)",
    "description": "com.tecknobit.brownie.services.hosts.services.HostEventsService.HostEventsService",
    "location": "backend/com.tecknobit.brownie.services.hosts.services/-host-events-service/-host-events-service.html",
    "searchKeys": [
      "HostEventsService",
      "protected constructor(hostEventsRepository: HostEventsRepository)",
      "com.tecknobit.brownie.services.hosts.services.HostEventsService.HostEventsService"
    ]
  },
  {
    "name": "protected constructor(publisher: ApplicationEventPublisher)",
    "description": "com.tecknobit.brownie.events.BrownieEventsEmitter.BrownieEventsEmitter",
    "location": "backend/com.tecknobit.brownie.events/-brownie-events-emitter/-brownie-events-emitter.html",
    "searchKeys": [
      "BrownieEventsEmitter",
      "protected constructor(publisher: ApplicationEventPublisher)",
      "com.tecknobit.brownie.events.BrownieEventsEmitter.BrownieEventsEmitter"
    ]
  },
  {
    "name": "protected constructor(repository: BrownieEventsRepository<E>)",
    "description": "com.tecknobit.brownie.services.shared.services.BrownieEventsRecorder.BrownieEventsRecorder",
    "location": "backend/com.tecknobit.brownie.services.shared.services/-brownie-events-recorder/-brownie-events-recorder.html",
    "searchKeys": [
      "BrownieEventsRecorder",
      "protected constructor(repository: BrownieEventsRepository<E>)",
      "com.tecknobit.brownie.services.shared.services.BrownieEventsRecorder.BrownieEventsRecorder"
    ]
  },
  {
    "name": "protected open fun appendExitStatus(errorMessage: String, exitStatus: Int): String",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.appendExitStatus",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/append-exit-status.html",
    "searchKeys": [
      "appendExitStatus",
      "protected open fun appendExitStatus(errorMessage: String, exitStatus: Int): String",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.appendExitStatus"
    ]
  },
  {
    "name": "protected open fun calculateUpDays(eventOwnerId: String): Int",
    "description": "com.tecknobit.brownie.services.shared.services.BrownieEventsRecorder.calculateUpDays",
    "location": "backend/com.tecknobit.brownie.services.shared.services/-brownie-events-recorder/calculate-up-days.html",
    "searchKeys": [
      "calculateUpDays",
      "protected open fun calculateUpDays(eventOwnerId: String): Int",
      "com.tecknobit.brownie.services.shared.services.BrownieEventsRecorder.calculateUpDays"
    ]
  },
  {
    "name": "protected open fun execBashCommand(command: String): String",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.execBashCommand",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/exec-bash-command.html",
    "searchKeys": [
      "execBashCommand",
      "protected open fun execBashCommand(command: String): String",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.execBashCommand"
    ]
  },
  {
    "name": "protected open fun execBashCommand(command: String, closeSession: Boolean): String",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.execBashCommand",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/exec-bash-command.html",
    "searchKeys": [
      "execBashCommand",
      "protected open fun execBashCommand(command: String, closeSession: Boolean): String",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.execBashCommand"
    ]
  },
  {
    "name": "protected open fun execBashCommand(command: String, onCommandExecuted: ShellCommandsExecutor.OnCommandExecuted): String",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.execBashCommand",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/exec-bash-command.html",
    "searchKeys": [
      "execBashCommand",
      "protected open fun execBashCommand(command: String, onCommandExecuted: ShellCommandsExecutor.OnCommandExecuted): String",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.execBashCommand"
    ]
  },
  {
    "name": "protected open fun execBashCommand(command: String, onCommandExecuted: ShellCommandsExecutor.OnCommandExecuted, closeSession: Boolean): String",
    "description": "com.tecknobit.brownie.helpers.shell.LocalShellCommandsExecutor.execBashCommand",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-local-shell-commands-executor/exec-bash-command.html",
    "searchKeys": [
      "execBashCommand",
      "protected open fun execBashCommand(command: String, onCommandExecuted: ShellCommandsExecutor.OnCommandExecuted, closeSession: Boolean): String",
      "com.tecknobit.brownie.helpers.shell.LocalShellCommandsExecutor.execBashCommand"
    ]
  },
  {
    "name": "protected open fun execBashCommand(command: String, onCommandExecuted: ShellCommandsExecutor.OnCommandExecuted, closeSession: Boolean): String",
    "description": "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.execBashCommand",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-remote-shell-commands-executor/exec-bash-command.html",
    "searchKeys": [
      "execBashCommand",
      "protected open fun execBashCommand(command: String, onCommandExecuted: ShellCommandsExecutor.OnCommandExecuted, closeSession: Boolean): String",
      "com.tecknobit.brownie.helpers.shell.RemoteShellCommandsExecutor.execBashCommand"
    ]
  },
  {
    "name": "protected open fun execServiceStarter(service: BrownieHostService, out: OutputStream)",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.execServiceStarter",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/exec-service-starter.html",
    "searchKeys": [
      "execServiceStarter",
      "protected open fun execServiceStarter(service: BrownieHostService, out: OutputStream)",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.execServiceStarter"
    ]
  },
  {
    "name": "protected open fun extractServicePid(commandResult: String): Long",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.extractServicePid",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/extract-service-pid.html",
    "searchKeys": [
      "extractServicePid",
      "protected open fun extractServicePid(commandResult: String): Long",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.extractServicePid"
    ]
  },
  {
    "name": "protected open fun getBrownieHostIfAllowed(sessionId: String, hostId: String): BrownieHost",
    "description": "com.tecknobit.brownie.services.shared.controllers.DefaultBrownieController.getBrownieHostIfAllowed",
    "location": "backend/com.tecknobit.brownie.services.shared.controllers/-default-brownie-controller/get-brownie-host-if-allowed.html",
    "searchKeys": [
      "getBrownieHostIfAllowed",
      "protected open fun getBrownieHostIfAllowed(sessionId: String, hostId: String): BrownieHost",
      "com.tecknobit.brownie.services.shared.controllers.DefaultBrownieController.getBrownieHostIfAllowed"
    ]
  },
  {
    "name": "protected open fun hash(secret: String): String",
    "description": "com.tecknobit.brownie.services.session.service.BrownieSessionsService.hash",
    "location": "backend/com.tecknobit.brownie.services.session.service/-brownie-sessions-service/hash.html",
    "searchKeys": [
      "hash",
      "protected open fun hash(secret: String): String",
      "com.tecknobit.brownie.services.session.service.BrownieSessionsService.hash"
    ]
  },
  {
    "name": "protected open fun purgeNohupOutIfRequired(service: BrownieHostService)",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.purgeNohupOutIfRequired",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/purge-nohup-out-if-required.html",
    "searchKeys": [
      "purgeNohupOutIfRequired",
      "protected open fun purgeNohupOutIfRequired(service: BrownieHostService)",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.purgeNohupOutIfRequired"
    ]
  },
  {
    "name": "protected open fun registerEvent(type: T, eventOwnerId: String)",
    "description": "com.tecknobit.brownie.services.shared.services.BrownieEventsRecorder.registerEvent",
    "location": "backend/com.tecknobit.brownie.services.shared.services/-brownie-events-recorder/register-event.html",
    "searchKeys": [
      "registerEvent",
      "protected open fun registerEvent(type: T, eventOwnerId: String)",
      "com.tecknobit.brownie.services.shared.services.BrownieEventsRecorder.registerEvent"
    ]
  },
  {
    "name": "protected open fun registerEvent(type: T, eventOwnerId: String, extra: Any)",
    "description": "com.tecknobit.brownie.services.shared.services.BrownieEventsRecorder.registerEvent",
    "location": "backend/com.tecknobit.brownie.services.shared.services/-brownie-events-recorder/register-event.html",
    "searchKeys": [
      "registerEvent",
      "protected open fun registerEvent(type: T, eventOwnerId: String, extra: Any)",
      "com.tecknobit.brownie.services.shared.services.BrownieEventsRecorder.registerEvent"
    ]
  },
  {
    "name": "protected open fun sessionExists(sessionId: String): Boolean",
    "description": "com.tecknobit.brownie.services.shared.controllers.DefaultBrownieController.sessionExists",
    "location": "backend/com.tecknobit.brownie.services.shared.controllers/-default-brownie-controller/session-exists.html",
    "searchKeys": [
      "sessionExists",
      "protected open fun sessionExists(sessionId: String): Boolean",
      "com.tecknobit.brownie.services.shared.controllers.DefaultBrownieController.sessionExists"
    ]
  },
  {
    "name": "protected open var currentBrownieSession: BrownieSession",
    "description": "com.tecknobit.brownie.services.shared.controllers.DefaultBrownieController.currentBrownieSession",
    "location": "backend/com.tecknobit.brownie.services.shared.controllers/-default-brownie-controller/current-brownie-session.html",
    "searchKeys": [
      "currentBrownieSession",
      "protected open var currentBrownieSession: BrownieSession",
      "com.tecknobit.brownie.services.shared.controllers.DefaultBrownieController.currentBrownieSession"
    ]
  },
  {
    "name": "protected val BASH_SCRIPT_OPTION: String = \"-s\"",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.BASH_SCRIPT_OPTION",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/-b-a-s-h_-s-c-r-i-p-t_-o-p-t-i-o-n.html",
    "searchKeys": [
      "BASH_SCRIPT_OPTION",
      "protected val BASH_SCRIPT_OPTION: String = \"-s\"",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.BASH_SCRIPT_OPTION"
    ]
  },
  {
    "name": "protected val FIND_SERVICE_PATH: String = \"find / -type f -name \"%s\" 2>/dev/null\n\"",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.FIND_SERVICE_PATH",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/-f-i-n-d_-s-e-r-v-i-c-e_-p-a-t-h.html",
    "searchKeys": [
      "FIND_SERVICE_PATH",
      "protected val FIND_SERVICE_PATH: String = \"find / -type f -name \"%s\" 2>/dev/null\n\"",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.FIND_SERVICE_PATH"
    ]
  },
  {
    "name": "protected val GET_CURRENT_HOST_STATS: String = \"echo -e \"$(top -bn1 | grep 'Cpu(s)' | awk '{print 100 - $8}'),\n$(if ls /sys/devices/system/cpu/cpu*/cpufreq/scaling_cur_freq &>/dev/null; then\n    freq=$(awk '{s+=$1} END {print s/NR/1000000}' /sys/devices/system/cpu/cpu*/cpufreq/scaling_cur_freq);\n    printf \"%.2f\" $freq;\n  else\n    freq=$(lscpu | grep 'CPU MHz' | awk '{print $3/1000}');\n    printf \"%.2f\" $freq;\n  fi),\n$(free -b | awk '/Mem:/ {printf \"%.2f/%.2f\\n\", $3/1073741824, $2/1073741824}'),\n$(df --block-size=1G --total | awk '/total/ {printf \"%d/%d\\n\", $3, $2}'),\n$(if lsblk -d -o NAME | grep -q mmcblk; then echo \"SD_CARD\";\n  elif lsblk -d -o NAME | grep -q nvme; then echo \"SSD_NVMe\";\n  elif lsblk -d -o NAME | grep -q vda; then echo \"VIRTUAL_DISK\";\n  elif lsblk -d -o ROTA | awk 'NR>1' | grep -q 0; then echo \"SSD\";\n  else echo \"HARD_DISK\"; fi)\"\n \"",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.GET_CURRENT_HOST_STATS",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/-g-e-t_-c-u-r-r-e-n-t_-h-o-s-t_-s-t-a-t-s.html",
    "searchKeys": [
      "GET_CURRENT_HOST_STATS",
      "protected val GET_CURRENT_HOST_STATS: String = \"echo -e \"$(top -bn1 | grep 'Cpu(s)' | awk '{print 100 - $8}'),\n$(if ls /sys/devices/system/cpu/cpu*/cpufreq/scaling_cur_freq &>/dev/null; then\n    freq=$(awk '{s+=$1} END {print s/NR/1000000}' /sys/devices/system/cpu/cpu*/cpufreq/scaling_cur_freq);\n    printf \"%.2f\" $freq;\n  else\n    freq=$(lscpu | grep 'CPU MHz' | awk '{print $3/1000}');\n    printf \"%.2f\" $freq;\n  fi),\n$(free -b | awk '/Mem:/ {printf \"%.2f/%.2f\\n\", $3/1073741824, $2/1073741824}'),\n$(df --block-size=1G --total | awk '/total/ {printf \"%d/%d\\n\", $3, $2}'),\n$(if lsblk -d -o NAME | grep -q mmcblk; then echo \"SD_CARD\";\n  elif lsblk -d -o NAME | grep -q nvme; then echo \"SSD_NVMe\";\n  elif lsblk -d -o NAME | grep -q vda; then echo \"VIRTUAL_DISK\";\n  elif lsblk -d -o ROTA | awk 'NR>1' | grep -q 0; then echo \"SSD\";\n  else echo \"HARD_DISK\"; fi)\"\n \"",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.GET_CURRENT_HOST_STATS"
    ]
  },
  {
    "name": "protected val GREP_RUNNING_SERVICES_COMMAND: String = \"    ps -ef | grep -E %s | grep -v grep | awk '{print $2}' | paste -sd ','\n\"",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.GREP_RUNNING_SERVICES_COMMAND",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/-g-r-e-p_-r-u-n-n-i-n-g_-s-e-r-v-i-c-e-s_-c-o-m-m-a-n-d.html",
    "searchKeys": [
      "GREP_RUNNING_SERVICES_COMMAND",
      "protected val GREP_RUNNING_SERVICES_COMMAND: String = \"    ps -ef | grep -E %s | grep -v grep | awk '{print $2}' | paste -sd ','\n\"",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.GREP_RUNNING_SERVICES_COMMAND"
    ]
  },
  {
    "name": "protected val KILL_SERVICE: String = \"kill %s\"",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.KILL_SERVICE",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/-k-i-l-l_-s-e-r-v-i-c-e.html",
    "searchKeys": [
      "KILL_SERVICE",
      "protected val KILL_SERVICE: String = \"kill %s\"",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.KILL_SERVICE"
    ]
  },
  {
    "name": "protected val NOHUP_OUT_FILE: String = \"nohup.out\"",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.NOHUP_OUT_FILE",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/-n-o-h-u-p_-o-u-t_-f-i-l-e.html",
    "searchKeys": [
      "NOHUP_OUT_FILE",
      "protected val NOHUP_OUT_FILE: String = \"nohup.out\"",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.NOHUP_OUT_FILE"
    ]
  },
  {
    "name": "protected val PIPE_CHARACTER: String = \"|\"",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.PIPE_CHARACTER",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/-p-i-p-e_-c-h-a-r-a-c-t-e-r.html",
    "searchKeys": [
      "PIPE_CHARACTER",
      "protected val PIPE_CHARACTER: String = \"|\"",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.PIPE_CHARACTER"
    ]
  },
  {
    "name": "protected val REMOVE_FILE_COMMAND: String = \"rm %s\"",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.REMOVE_FILE_COMMAND",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/-r-e-m-o-v-e_-f-i-l-e_-c-o-m-m-a-n-d.html",
    "searchKeys": [
      "REMOVE_FILE_COMMAND",
      "protected val REMOVE_FILE_COMMAND: String = \"rm %s\"",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.REMOVE_FILE_COMMAND"
    ]
  },
  {
    "name": "protected val REMOVE_NOHUP_OUT_FILE_COMMAND: String = \"rm -f %s\"",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.REMOVE_NOHUP_OUT_FILE_COMMAND",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/-r-e-m-o-v-e_-n-o-h-u-p_-o-u-t_-f-i-l-e_-c-o-m-m-a-n-d.html",
    "searchKeys": [
      "REMOVE_NOHUP_OUT_FILE_COMMAND",
      "protected val REMOVE_NOHUP_OUT_FILE_COMMAND: String = \"rm -f %s\"",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.REMOVE_NOHUP_OUT_FILE_COMMAND"
    ]
  },
  {
    "name": "protected val SUDO_REBOOT: String = \"sudo reboot\"",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.SUDO_REBOOT",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/-s-u-d-o_-r-e-b-o-o-t.html",
    "searchKeys": [
      "SUDO_REBOOT",
      "protected val SUDO_REBOOT: String = \"sudo reboot\"",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.SUDO_REBOOT"
    ]
  },
  {
    "name": "protected val SUDO_SHUTDOWN_NOW: String = \"sudo shutdown now\"",
    "description": "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.SUDO_SHUTDOWN_NOW",
    "location": "backend/com.tecknobit.brownie.helpers.shell/-shell-commands-executor/-s-u-d-o_-s-h-u-t-d-o-w-n_-n-o-w.html",
    "searchKeys": [
      "SUDO_SHUTDOWN_NOW",
      "protected val SUDO_SHUTDOWN_NOW: String = \"sudo shutdown now\"",
      "com.tecknobit.brownie.helpers.shell.ShellCommandsExecutor.SUDO_SHUTDOWN_NOW"
    ]
  },
  {
    "name": "protected val eventDate: Long",
    "description": "com.tecknobit.brownie.services.shared.entities.BrownieEvent.eventDate",
    "location": "backend/com.tecknobit.brownie.services.shared.entities/-brownie-event/event-date.html",
    "searchKeys": [
      "eventDate",
      "protected val eventDate: Long",
      "com.tecknobit.brownie.services.shared.entities.BrownieEvent.eventDate"
    ]
  },
  {
    "name": "protected val extra: String",
    "description": "com.tecknobit.brownie.services.shared.entities.BrownieEvent.extra",
    "location": "backend/com.tecknobit.brownie.services.shared.entities/-brownie-event/extra.html",
    "searchKeys": [
      "extra",
      "protected val extra: String",
      "com.tecknobit.brownie.services.shared.entities.BrownieEvent.extra"
    ]
  },
  {
    "name": "protected val hostsService: HostsService",
    "description": "com.tecknobit.brownie.services.shared.controllers.DefaultBrownieController.hostsService",
    "location": "backend/com.tecknobit.brownie.services.shared.controllers/-default-brownie-controller/hosts-service.html",
    "searchKeys": [
      "hostsService",
      "protected val hostsService: HostsService",
      "com.tecknobit.brownie.services.shared.controllers.DefaultBrownieController.hostsService"
    ]
  },
  {
    "name": "protected val sessionsService: BrownieSessionsService",
    "description": "com.tecknobit.brownie.services.shared.controllers.DefaultBrownieController.sessionsService",
    "location": "backend/com.tecknobit.brownie.services.shared.controllers/-default-brownie-controller/sessions-service.html",
    "searchKeys": [
      "sessionsService",
      "protected val sessionsService: BrownieSessionsService",
      "com.tecknobit.brownie.services.shared.controllers.DefaultBrownieController.sessionsService"
    ]
  },
  {
    "name": "val SOMETHING_WENT_WRONG_MESSAGE: String = \"something_went_wrong\"",
    "description": "com.tecknobit.brownie.services.shared.controllers.DefaultBrownieController.SOMETHING_WENT_WRONG_MESSAGE",
    "location": "backend/com.tecknobit.brownie.services.shared.controllers/-default-brownie-controller/-s-o-m-e-t-h-i-n-g_-w-e-n-t_-w-r-o-n-g_-m-e-s-s-a-g-e.html",
    "searchKeys": [
      "SOMETHING_WENT_WRONG_MESSAGE",
      "val SOMETHING_WENT_WRONG_MESSAGE: String = \"something_went_wrong\"",
      "com.tecknobit.brownie.services.shared.controllers.DefaultBrownieController.SOMETHING_WENT_WRONG_MESSAGE"
    ]
  },
  {
    "name": "val WRONG_HOST_ADDRESS_MESSAGE: String = \"wrong_host_address\"",
    "description": "com.tecknobit.brownie.services.hosts.controller.HostsController.WRONG_HOST_ADDRESS_MESSAGE",
    "location": "backend/com.tecknobit.brownie.services.hosts.controller/-hosts-controller/-w-r-o-n-g_-h-o-s-t_-a-d-d-r-e-s-s_-m-e-s-s-a-g-e.html",
    "searchKeys": [
      "WRONG_HOST_ADDRESS_MESSAGE",
      "val WRONG_HOST_ADDRESS_MESSAGE: String = \"wrong_host_address\"",
      "com.tecknobit.brownie.services.hosts.controller.HostsController.WRONG_HOST_ADDRESS_MESSAGE"
    ]
  },
  {
    "name": "val WRONG_SSH_CREDENTIALS_MESSAGE: String = \"ssh_credentials_are_not_valid\"",
    "description": "com.tecknobit.brownie.services.hosts.controller.HostsController.WRONG_SSH_CREDENTIALS_MESSAGE",
    "location": "backend/com.tecknobit.brownie.services.hosts.controller/-hosts-controller/-w-r-o-n-g_-s-s-h_-c-r-e-d-e-n-t-i-a-l-s_-m-e-s-s-a-g-e.html",
    "searchKeys": [
      "WRONG_SSH_CREDENTIALS_MESSAGE",
      "val WRONG_SSH_CREDENTIALS_MESSAGE: String = \"ssh_credentials_are_not_valid\"",
      "com.tecknobit.brownie.services.hosts.controller.HostsController.WRONG_SSH_CREDENTIALS_MESSAGE"
    ]
  },
  {
    "name": "val broadcastIp: String",
    "description": "com.tecknobit.brownie.services.hosts.entities.BrownieHost.broadcastIp",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-brownie-host/broadcast-ip.html",
    "searchKeys": [
      "broadcastIp",
      "val broadcastIp: String",
      "com.tecknobit.brownie.services.hosts.entities.BrownieHost.broadcastIp"
    ]
  },
  {
    "name": "val clock: Double",
    "description": "com.tecknobit.brownie.services.hosts.dtos.usages.CPUUsage.clock",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos.usages/-c-p-u-usage/clock.html",
    "searchKeys": [
      "clock",
      "val clock: Double",
      "com.tecknobit.brownie.services.hosts.dtos.usages.CPUUsage.clock"
    ]
  },
  {
    "name": "val configuration: BrownieHostService.ServiceConfiguration",
    "description": "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.configuration",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-brownie-host-service/configuration.html",
    "searchKeys": [
      "configuration",
      "val configuration: BrownieHostService.ServiceConfiguration",
      "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.configuration"
    ]
  },
  {
    "name": "val cpuUsage: CPUUsage",
    "description": "com.tecknobit.brownie.services.hosts.dtos.BrownieHostOverview.cpuUsage",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos/-brownie-host-overview/cpu-usage.html",
    "searchKeys": [
      "cpuUsage",
      "val cpuUsage: CPUUsage",
      "com.tecknobit.brownie.services.hosts.dtos.BrownieHostOverview.cpuUsage"
    ]
  },
  {
    "name": "val events: List<HostHistoryEvent>",
    "description": "com.tecknobit.brownie.services.hosts.dtos.BrownieHostOverview.events",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos/-brownie-host-overview/events.html",
    "searchKeys": [
      "events",
      "val events: List<HostHistoryEvent>",
      "com.tecknobit.brownie.services.hosts.dtos.BrownieHostOverview.events"
    ]
  },
  {
    "name": "val events: List<HostHistoryEvent>",
    "description": "com.tecknobit.brownie.services.hosts.entities.BrownieHost.events",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-brownie-host/events.html",
    "searchKeys": [
      "events",
      "val events: List<HostHistoryEvent>",
      "com.tecknobit.brownie.services.hosts.entities.BrownieHost.events"
    ]
  },
  {
    "name": "val events: List<ServiceEvent>",
    "description": "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.events",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-brownie-host-service/events.html",
    "searchKeys": [
      "events",
      "val events: List<ServiceEvent>",
      "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.events"
    ]
  },
  {
    "name": "val hostAddress: String",
    "description": "com.tecknobit.brownie.services.hosts.dtos.BrownieHostOverview.hostAddress",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos/-brownie-host-overview/host-address.html",
    "searchKeys": [
      "hostAddress",
      "val hostAddress: String",
      "com.tecknobit.brownie.services.hosts.dtos.BrownieHostOverview.hostAddress"
    ]
  },
  {
    "name": "val hostAddress: String",
    "description": "com.tecknobit.brownie.services.hosts.entities.BrownieHost.hostAddress",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-brownie-host/host-address.html",
    "searchKeys": [
      "hostAddress",
      "val hostAddress: String",
      "com.tecknobit.brownie.services.hosts.entities.BrownieHost.hostAddress"
    ]
  },
  {
    "name": "val hosts: List<BrownieHost>",
    "description": "com.tecknobit.brownie.services.session.entity.BrownieSession.hosts",
    "location": "backend/com.tecknobit.brownie.services.session.entity/-brownie-session/hosts.html",
    "searchKeys": [
      "hosts",
      "val hosts: List<BrownieHost>",
      "com.tecknobit.brownie.services.session.entity.BrownieSession.hosts"
    ]
  },
  {
    "name": "val id: String",
    "description": "com.tecknobit.brownie.services.hosts.dtos.BrownieHostOverview.id",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos/-brownie-host-overview/id.html",
    "searchKeys": [
      "id",
      "val id: String",
      "com.tecknobit.brownie.services.hosts.dtos.BrownieHostOverview.id"
    ]
  },
  {
    "name": "val insertionDate: Long",
    "description": "com.tecknobit.brownie.services.hosts.entities.BrownieHost.insertionDate",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-brownie-host/insertion-date.html",
    "searchKeys": [
      "insertionDate",
      "val insertionDate: Long",
      "com.tecknobit.brownie.services.hosts.entities.BrownieHost.insertionDate"
    ]
  },
  {
    "name": "val insertionDate: Long",
    "description": "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.insertionDate",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-brownie-host-service/insertion-date.html",
    "searchKeys": [
      "insertionDate",
      "val insertionDate: Long",
      "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.insertionDate"
    ]
  },
  {
    "name": "val joinCode: String",
    "description": "com.tecknobit.brownie.services.session.entity.BrownieSession.joinCode",
    "location": "backend/com.tecknobit.brownie.services.session.entity/-brownie-session/join-code.html",
    "searchKeys": [
      "joinCode",
      "val joinCode: String",
      "com.tecknobit.brownie.services.session.entity.BrownieSession.joinCode"
    ]
  },
  {
    "name": "val macAddress: String",
    "description": "com.tecknobit.brownie.services.hosts.entities.BrownieHost.macAddress",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-brownie-host/mac-address.html",
    "searchKeys": [
      "macAddress",
      "val macAddress: String",
      "com.tecknobit.brownie.services.hosts.entities.BrownieHost.macAddress"
    ]
  },
  {
    "name": "val memoryUsage: BrownieHostStat",
    "description": "com.tecknobit.brownie.services.hosts.dtos.BrownieHostOverview.memoryUsage",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos/-brownie-host-overview/memory-usage.html",
    "searchKeys": [
      "memoryUsage",
      "val memoryUsage: BrownieHostStat",
      "com.tecknobit.brownie.services.hosts.dtos.BrownieHostOverview.memoryUsage"
    ]
  },
  {
    "name": "val name: String",
    "description": "com.tecknobit.brownie.services.hosts.dtos.BrownieHostOverview.name",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos/-brownie-host-overview/name.html",
    "searchKeys": [
      "name",
      "val name: String",
      "com.tecknobit.brownie.services.hosts.dtos.BrownieHostOverview.name"
    ]
  },
  {
    "name": "val name: String",
    "description": "com.tecknobit.brownie.services.hosts.entities.BrownieHost.name",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-brownie-host/name.html",
    "searchKeys": [
      "name",
      "val name: String",
      "com.tecknobit.brownie.services.hosts.entities.BrownieHost.name"
    ]
  },
  {
    "name": "val name: String",
    "description": "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.name",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-brownie-host-service/name.html",
    "searchKeys": [
      "name",
      "val name: String",
      "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.name"
    ]
  },
  {
    "name": "val password: String",
    "description": "com.tecknobit.brownie.services.session.entity.BrownieSession.password",
    "location": "backend/com.tecknobit.brownie.services.session.entity/-brownie-session/password.html",
    "searchKeys": [
      "password",
      "val password: String",
      "com.tecknobit.brownie.services.session.entity.BrownieSession.password"
    ]
  },
  {
    "name": "val percentValue: Double",
    "description": "com.tecknobit.brownie.services.hosts.dtos.BrownieHostStat.percentValue",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos/-brownie-host-stat/percent-value.html",
    "searchKeys": [
      "percentValue",
      "val percentValue: Double",
      "com.tecknobit.brownie.services.hosts.dtos.BrownieHostStat.percentValue"
    ]
  },
  {
    "name": "val pid: Long",
    "description": "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.pid",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-brownie-host-service/pid.html",
    "searchKeys": [
      "pid",
      "val pid: Long",
      "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.pid"
    ]
  },
  {
    "name": "val programArguments: String",
    "description": "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.ServiceConfiguration.programArguments",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-brownie-host-service/-service-configuration/program-arguments.html",
    "searchKeys": [
      "programArguments",
      "val programArguments: String",
      "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.ServiceConfiguration.programArguments"
    ]
  },
  {
    "name": "val servicePath: String",
    "description": "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.servicePath",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-brownie-host-service/service-path.html",
    "searchKeys": [
      "servicePath",
      "val servicePath: String",
      "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.servicePath"
    ]
  },
  {
    "name": "val services: List<BrownieHostService>",
    "description": "com.tecknobit.brownie.services.hosts.entities.BrownieHost.services",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-brownie-host/services.html",
    "searchKeys": [
      "services",
      "val services: List<BrownieHostService>",
      "com.tecknobit.brownie.services.hosts.entities.BrownieHost.services"
    ]
  },
  {
    "name": "val session: BrownieSession",
    "description": "com.tecknobit.brownie.services.hosts.entities.BrownieHost.session",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-brownie-host/session.html",
    "searchKeys": [
      "session",
      "val session: BrownieSession",
      "com.tecknobit.brownie.services.hosts.entities.BrownieHost.session"
    ]
  },
  {
    "name": "val sshPassword: String",
    "description": "com.tecknobit.brownie.services.hosts.entities.BrownieHost.sshPassword",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-brownie-host/ssh-password.html",
    "searchKeys": [
      "sshPassword",
      "val sshPassword: String",
      "com.tecknobit.brownie.services.hosts.entities.BrownieHost.sshPassword"
    ]
  },
  {
    "name": "val sshUser: String",
    "description": "com.tecknobit.brownie.services.hosts.entities.BrownieHost.sshUser",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-brownie-host/ssh-user.html",
    "searchKeys": [
      "sshUser",
      "val sshUser: String",
      "com.tecknobit.brownie.services.hosts.entities.BrownieHost.sshUser"
    ]
  },
  {
    "name": "val status: HostStatus",
    "description": "com.tecknobit.brownie.services.hosts.dtos.BrownieHostOverview.status",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos/-brownie-host-overview/status.html",
    "searchKeys": [
      "status",
      "val status: HostStatus",
      "com.tecknobit.brownie.services.hosts.dtos.BrownieHostOverview.status"
    ]
  },
  {
    "name": "val status: HostStatus",
    "description": "com.tecknobit.brownie.services.hosts.entities.BrownieHost.status",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-brownie-host/status.html",
    "searchKeys": [
      "status",
      "val status: HostStatus",
      "com.tecknobit.brownie.services.hosts.entities.BrownieHost.status"
    ]
  },
  {
    "name": "val status: ServiceStatus",
    "description": "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.status",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-brownie-host-service/status.html",
    "searchKeys": [
      "status",
      "val status: ServiceStatus",
      "com.tecknobit.brownie.services.hostservices.entities.BrownieHostService.status"
    ]
  },
  {
    "name": "val storageUsage: StorageUsage",
    "description": "com.tecknobit.brownie.services.hosts.dtos.BrownieHostOverview.storageUsage",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos/-brownie-host-overview/storage-usage.html",
    "searchKeys": [
      "storageUsage",
      "val storageUsage: StorageUsage",
      "com.tecknobit.brownie.services.hosts.dtos.BrownieHostOverview.storageUsage"
    ]
  },
  {
    "name": "val totalValue: Double",
    "description": "com.tecknobit.brownie.services.hosts.dtos.BrownieHostStat.totalValue",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos/-brownie-host-stat/total-value.html",
    "searchKeys": [
      "totalValue",
      "val totalValue: Double",
      "com.tecknobit.brownie.services.hosts.dtos.BrownieHostStat.totalValue"
    ]
  },
  {
    "name": "val type: HostEventType",
    "description": "com.tecknobit.brownie.services.hosts.entities.HostHistoryEvent.type",
    "location": "backend/com.tecknobit.brownie.services.hosts.entities/-host-history-event/type.html",
    "searchKeys": [
      "type",
      "val type: HostEventType",
      "com.tecknobit.brownie.services.hosts.entities.HostHistoryEvent.type"
    ]
  },
  {
    "name": "val type: ServiceEventType",
    "description": "com.tecknobit.brownie.services.hostservices.entities.ServiceEvent.type",
    "location": "backend/com.tecknobit.brownie.services.hostservices.entities/-service-event/type.html",
    "searchKeys": [
      "type",
      "val type: ServiceEventType",
      "com.tecknobit.brownie.services.hostservices.entities.ServiceEvent.type"
    ]
  },
  {
    "name": "val type: StorageType",
    "description": "com.tecknobit.brownie.services.hosts.dtos.usages.StorageUsage.type",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos.usages/-storage-usage/type.html",
    "searchKeys": [
      "type",
      "val type: StorageType",
      "com.tecknobit.brownie.services.hosts.dtos.usages.StorageUsage.type"
    ]
  },
  {
    "name": "val usageValue: Double",
    "description": "com.tecknobit.brownie.services.hosts.dtos.BrownieHostStat.usageValue",
    "location": "backend/com.tecknobit.brownie.services.hosts.dtos/-brownie-host-stat/usage-value.html",
    "searchKeys": [
      "usageValue",
      "val usageValue: Double",
      "com.tecknobit.brownie.services.hosts.dtos.BrownieHostStat.usageValue"
    ]
  }
]